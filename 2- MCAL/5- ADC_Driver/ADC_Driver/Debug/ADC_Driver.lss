
ADC_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00001322  000013b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001322  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  00800114  00800114  000013ca  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000013ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001428  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  00001468  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000244b  00000000  00000000  00001698  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cbf  00000000  00000000  00003ae3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010e8  00000000  00000000  000047a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006ec  00000000  00000000  0000588c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000e9e  00000000  00000000  00005f78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ceb  00000000  00000000  00006e16  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  00008b01  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__vector_1>
       8:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__vector_2>
       c:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__vector_3>
      10:	0c 94 22 04 	jmp	0x844	; 0x844 <__vector_4>
      14:	0c 94 4b 04 	jmp	0x896	; 0x896 <__vector_5>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__vector_21>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e2 e2       	ldi	r30, 0x22	; 34
      7c:	f3 e1       	ldi	r31, 0x13	; 19
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a4 31       	cpi	r26, 0x14	; 20
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a4 e1       	ldi	r26, 0x14	; 20
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	af 32       	cpi	r26, 0x2F	; 47
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
      9e:	0c 94 8f 09 	jmp	0x131e	; 0x131e <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <WriteOnLCD>:
}

void WriteOnLCD (u16 Value)
{
	    //ADC_Val = MADC_u16_ReadChannelSynch(ADC_0);
		Value = ((float)Value) *5000/1023;
      a6:	bc 01       	movw	r22, r24
      a8:	80 e0       	ldi	r24, 0x00	; 0
      aa:	90 e0       	ldi	r25, 0x00	; 0
      ac:	0e 94 90 05 	call	0xb20	; 0xb20 <__floatunsisf>
      b0:	20 e0       	ldi	r18, 0x00	; 0
      b2:	30 e4       	ldi	r19, 0x40	; 64
      b4:	4c e9       	ldi	r20, 0x9C	; 156
      b6:	55 e4       	ldi	r21, 0x45	; 69
      b8:	0e 94 1e 06 	call	0xc3c	; 0xc3c <__mulsf3>
      bc:	20 e0       	ldi	r18, 0x00	; 0
      be:	30 ec       	ldi	r19, 0xC0	; 192
      c0:	4f e7       	ldi	r20, 0x7F	; 127
      c2:	54 e4       	ldi	r21, 0x44	; 68
      c4:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
		HLCD_voidWriteNumber(&X,Value,10);
      c8:	0e 94 61 05 	call	0xac2	; 0xac2 <__fixunssfsi>
      cc:	ab 01       	movw	r20, r22
      ce:	60 e0       	ldi	r22, 0x00	; 0
      d0:	70 e0       	ldi	r23, 0x00	; 0
      d2:	2a e0       	ldi	r18, 0x0A	; 10
      d4:	82 e2       	ldi	r24, 0x22	; 34
      d6:	91 e0       	ldi	r25, 0x01	; 1
      d8:	0e 94 55 02 	call	0x4aa	; 0x4aa <HLCD_voidWriteNumber>
		HLCD_voidWriteString (&X,"mV ");
      dc:	64 e0       	ldi	r22, 0x04	; 4
      de:	71 e0       	ldi	r23, 0x01	; 1
      e0:	82 e2       	ldi	r24, 0x22	; 34
      e2:	91 e0       	ldi	r25, 0x01	; 1
      e4:	0e 94 2f 02 	call	0x45e	; 0x45e <HLCD_voidWriteString>
		//HLCD_voidWriteNumber(&X,MGPIO_u8_GetPinValue(GPIO_PORTC,0),10);
		//HLCD_voidWriteString (&X," Dis_Buff");
		MCLOCK_voidDelayMS(1000);
      e8:	68 ee       	ldi	r22, 0xE8	; 232
      ea:	73 e0       	ldi	r23, 0x03	; 3
      ec:	80 e0       	ldi	r24, 0x00	; 0
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	0e 94 50 03 	call	0x6a0	; 0x6a0 <MCLOCK_voidDelayMS>
		HLCD_voidClearScreen(&X);
      f4:	82 e2       	ldi	r24, 0x22	; 34
      f6:	91 e0       	ldi	r25, 0x01	; 1
      f8:	0e 94 b4 02 	call	0x568	; 0x568 <HLCD_voidClearScreen>
      fc:	08 95       	ret

000000fe <main>:

void WriteOnLCD (u16 Value);
LCD_t X;

int main(void)
{
      fe:	cf 93       	push	r28
     100:	df 93       	push	r29
     102:	cd b7       	in	r28, 0x3d	; 61
     104:	de b7       	in	r29, 0x3e	; 62
     106:	28 97       	sbiw	r28, 0x08	; 8
     108:	0f b6       	in	r0, 0x3f	; 63
     10a:	f8 94       	cli
     10c:	de bf       	out	0x3e, r29	; 62
     10e:	0f be       	out	0x3f, r0	; 63
     110:	cd bf       	out	0x3d, r28	; 61
	MEXTI_void_EnableInterrupt(EXTI_0);
     112:	80 e0       	ldi	r24, 0x00	; 0
     114:	0e 94 68 03 	call	0x6d0	; 0x6d0 <MEXTI_void_EnableInterrupt>
	MGPIO_void_SetPinDirection (GPIO_PORTD,2,GPIO_INPUT_PULLUP);
     118:	42 e0       	ldi	r20, 0x02	; 2
     11a:	62 e0       	ldi	r22, 0x02	; 2
     11c:	82 e0       	ldi	r24, 0x02	; 2
     11e:	0e 94 86 04 	call	0x90c	; 0x90c <MGPIO_void_SetPinDirection>
	MEXTI_void_SetTrigger(EXTI_0,TRIGGER_FALLING_EDGE);
     122:	62 e0       	ldi	r22, 0x02	; 2
     124:	80 e0       	ldi	r24, 0x00	; 0
     126:	0e 94 8e 03 	call	0x71c	; 0x71c <MEXTI_void_SetTrigger>
	
	//u16 ADC_Val=0;
	MGPIO_void_SetPinDirection(GPIO_PORTC,0,GPIO_INPUT);
     12a:	40 e0       	ldi	r20, 0x00	; 0
     12c:	60 e0       	ldi	r22, 0x00	; 0
     12e:	81 e0       	ldi	r24, 0x01	; 1
     130:	0e 94 86 04 	call	0x90c	; 0x90c <MGPIO_void_SetPinDirection>
	MADC_void_Initialize(ADC_MODE_CONTINOUS_CONVERSION,ADC_AREF,ACD_128_PRE,ADC_10BIT);
     134:	20 e0       	ldi	r18, 0x00	; 0
     136:	47 e0       	ldi	r20, 0x07	; 7
     138:	60 e0       	ldi	r22, 0x00	; 0
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	0e 94 b8 02 	call	0x570	; 0x570 <MADC_void_Initialize>
	MADC_void_SetAutoTriggerSource (ADC_EXTI0);
     140:	82 e0       	ldi	r24, 0x02	; 2
     142:	0e 94 00 03 	call	0x600	; 0x600 <MADC_void_SetAutoTriggerSource>
	MADC_void_ReadChannelAsynch (ADC_0, WriteOnLCD );
     146:	63 e5       	ldi	r22, 0x53	; 83
     148:	70 e0       	ldi	r23, 0x00	; 0
     14a:	80 e0       	ldi	r24, 0x00	; 0
     14c:	0e 94 e6 02 	call	0x5cc	; 0x5cc <MADC_void_ReadChannelAsynch>
	
	
	//MADC_void_DisableDigitalInputBuffer (ADC_0);
	//MADC_void_EnableDigitalInputBuffer (ADC_0);
    
	u8 Data_Pins[4] = {3,4,5,6};
     150:	83 e0       	ldi	r24, 0x03	; 3
     152:	89 83       	std	Y+1, r24	; 0x01
     154:	84 e0       	ldi	r24, 0x04	; 4
     156:	8a 83       	std	Y+2, r24	; 0x02
     158:	85 e0       	ldi	r24, 0x05	; 5
     15a:	8b 83       	std	Y+3, r24	; 0x03
     15c:	86 e0       	ldi	r24, 0x06	; 6
     15e:	8c 83       	std	Y+4, r24	; 0x04
	enum GPIOPORT_t Data_Ports [4] = {GPIO_PORTB,GPIO_PORTB,GPIO_PORTB,GPIO_PORTB};
     160:	1d 82       	std	Y+5, r1	; 0x05
     162:	1e 82       	std	Y+6, r1	; 0x06
     164:	1f 82       	std	Y+7, r1	; 0x07
     166:	18 86       	std	Y+8, r1	; 0x08
	X.Mode = LCD_MODE_4_BIT;
     168:	e2 e2       	ldi	r30, 0x22	; 34
     16a:	f1 e0       	ldi	r31, 0x01	; 1
     16c:	91 e0       	ldi	r25, 0x01	; 1
     16e:	90 83       	st	Z, r25
	X.Size [0] = 2;
     170:	82 e0       	ldi	r24, 0x02	; 2
     172:	81 83       	std	Z+1, r24	; 0x01
	X.Size [1] = 16;
     174:	20 e1       	ldi	r18, 0x10	; 16
     176:	22 83       	std	Z+2, r18	; 0x02
	X.ControlPins [0] = 0;
     178:	13 82       	std	Z+3, r1	; 0x03
	X.ControlPins [1] = 1;  
     17a:	94 83       	std	Z+4, r25	; 0x04
	X.ControlPins [2] = 2;
     17c:	85 83       	std	Z+5, r24	; 0x05
	X.ControlPorts [0] = GPIO_PORTB;
     17e:	16 82       	std	Z+6, r1	; 0x06
	X.ControlPorts [1] = GPIO_PORTB;
     180:	17 82       	std	Z+7, r1	; 0x07
	X.ControlPorts [2] = GPIO_PORTB;
     182:	10 86       	std	Z+8, r1	; 0x08
	X.DataPins = Data_Pins;
     184:	ce 01       	movw	r24, r28
     186:	01 96       	adiw	r24, 0x01	; 1
     188:	92 87       	std	Z+10, r25	; 0x0a
     18a:	81 87       	std	Z+9, r24	; 0x09
	X.DataPorts = Data_Ports;
     18c:	04 96       	adiw	r24, 0x04	; 4
     18e:	94 87       	std	Z+12, r25	; 0x0c
     190:	83 87       	std	Z+11, r24	; 0x0b
	
	HLCD_voidInit(&X);
     192:	cf 01       	movw	r24, r30
     194:	0e 94 95 01 	call	0x32a	; 0x32a <HLCD_voidInit>
	MADC_void_StartContinousMode();
     198:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <MADC_void_StartContinousMode>
     19c:	ff cf       	rjmp	.-2      	; 0x19c <main+0x9e>

0000019e <PLCD_voidEnable>:
		if(i >= LCD->Size[1]){
			i = 0;
			HLCD_voidSetPosition(LCD,0,++c);
		}
	}
}
     19e:	cf 93       	push	r28
     1a0:	df 93       	push	r29
     1a2:	ec 01       	movw	r28, r24
     1a4:	41 e0       	ldi	r20, 0x01	; 1
     1a6:	6d 81       	ldd	r22, Y+5	; 0x05
     1a8:	88 85       	ldd	r24, Y+8	; 0x08
     1aa:	0e 94 c7 04 	call	0x98e	; 0x98e <MGPIO_void_SetPinValue>
     1ae:	62 e0       	ldi	r22, 0x02	; 2
     1b0:	70 e0       	ldi	r23, 0x00	; 0
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	0e 94 50 03 	call	0x6a0	; 0x6a0 <MCLOCK_voidDelayMS>
     1ba:	40 e0       	ldi	r20, 0x00	; 0
     1bc:	6d 81       	ldd	r22, Y+5	; 0x05
     1be:	88 85       	ldd	r24, Y+8	; 0x08
     1c0:	0e 94 c7 04 	call	0x98e	; 0x98e <MGPIO_void_SetPinValue>
     1c4:	62 e0       	ldi	r22, 0x02	; 2
     1c6:	70 e0       	ldi	r23, 0x00	; 0
     1c8:	80 e0       	ldi	r24, 0x00	; 0
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	0e 94 50 03 	call	0x6a0	; 0x6a0 <MCLOCK_voidDelayMS>
     1d0:	df 91       	pop	r29
     1d2:	cf 91       	pop	r28
     1d4:	08 95       	ret

000001d6 <PLCD_voidWrite8Bits>:
     1d6:	ef 92       	push	r14
     1d8:	ff 92       	push	r15
     1da:	0f 93       	push	r16
     1dc:	1f 93       	push	r17
     1de:	cf 93       	push	r28
     1e0:	df 93       	push	r29
     1e2:	8c 01       	movw	r16, r24
     1e4:	c0 e0       	ldi	r28, 0x00	; 0
     1e6:	d0 e0       	ldi	r29, 0x00	; 0
     1e8:	e6 2e       	mov	r14, r22
     1ea:	f1 2c       	mov	r15, r1
     1ec:	a7 01       	movw	r20, r14
     1ee:	0c 2e       	mov	r0, r28
     1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <PLCD_voidWrite8Bits+0x20>
     1f2:	55 95       	asr	r21
     1f4:	47 95       	ror	r20
     1f6:	0a 94       	dec	r0
     1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <PLCD_voidWrite8Bits+0x1c>
     1fa:	41 70       	andi	r20, 0x01	; 1
     1fc:	f8 01       	movw	r30, r16
     1fe:	a1 85       	ldd	r26, Z+9	; 0x09
     200:	b2 85       	ldd	r27, Z+10	; 0x0a
     202:	ac 0f       	add	r26, r28
     204:	bd 1f       	adc	r27, r29
     206:	83 85       	ldd	r24, Z+11	; 0x0b
     208:	94 85       	ldd	r25, Z+12	; 0x0c
     20a:	fc 01       	movw	r30, r24
     20c:	ec 0f       	add	r30, r28
     20e:	fd 1f       	adc	r31, r29
     210:	6c 91       	ld	r22, X
     212:	80 81       	ld	r24, Z
     214:	0e 94 c7 04 	call	0x98e	; 0x98e <MGPIO_void_SetPinValue>
     218:	21 96       	adiw	r28, 0x01	; 1
     21a:	c8 30       	cpi	r28, 0x08	; 8
     21c:	d1 05       	cpc	r29, r1
     21e:	31 f7       	brne	.-52     	; 0x1ec <PLCD_voidWrite8Bits+0x16>
     220:	c8 01       	movw	r24, r16
     222:	0e 94 cf 00 	call	0x19e	; 0x19e <PLCD_voidEnable>
     226:	df 91       	pop	r29
     228:	cf 91       	pop	r28
     22a:	1f 91       	pop	r17
     22c:	0f 91       	pop	r16
     22e:	ff 90       	pop	r15
     230:	ef 90       	pop	r14
     232:	08 95       	ret

00000234 <PLCD_voidWrite4Bits>:
     234:	ef 92       	push	r14
     236:	ff 92       	push	r15
     238:	0f 93       	push	r16
     23a:	1f 93       	push	r17
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	8c 01       	movw	r16, r24
     242:	c0 e0       	ldi	r28, 0x00	; 0
     244:	d0 e0       	ldi	r29, 0x00	; 0
     246:	e6 2e       	mov	r14, r22
     248:	f1 2c       	mov	r15, r1
     24a:	a7 01       	movw	r20, r14
     24c:	0c 2e       	mov	r0, r28
     24e:	02 c0       	rjmp	.+4      	; 0x254 <PLCD_voidWrite4Bits+0x20>
     250:	55 95       	asr	r21
     252:	47 95       	ror	r20
     254:	0a 94       	dec	r0
     256:	e2 f7       	brpl	.-8      	; 0x250 <PLCD_voidWrite4Bits+0x1c>
     258:	41 70       	andi	r20, 0x01	; 1
     25a:	f8 01       	movw	r30, r16
     25c:	a1 85       	ldd	r26, Z+9	; 0x09
     25e:	b2 85       	ldd	r27, Z+10	; 0x0a
     260:	ac 0f       	add	r26, r28
     262:	bd 1f       	adc	r27, r29
     264:	83 85       	ldd	r24, Z+11	; 0x0b
     266:	94 85       	ldd	r25, Z+12	; 0x0c
     268:	fc 01       	movw	r30, r24
     26a:	ec 0f       	add	r30, r28
     26c:	fd 1f       	adc	r31, r29
     26e:	6c 91       	ld	r22, X
     270:	80 81       	ld	r24, Z
     272:	0e 94 c7 04 	call	0x98e	; 0x98e <MGPIO_void_SetPinValue>
     276:	21 96       	adiw	r28, 0x01	; 1
     278:	c4 30       	cpi	r28, 0x04	; 4
     27a:	d1 05       	cpc	r29, r1
     27c:	31 f7       	brne	.-52     	; 0x24a <PLCD_voidWrite4Bits+0x16>
     27e:	c8 01       	movw	r24, r16
     280:	0e 94 cf 00 	call	0x19e	; 0x19e <PLCD_voidEnable>
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	1f 91       	pop	r17
     28a:	0f 91       	pop	r16
     28c:	ff 90       	pop	r15
     28e:	ef 90       	pop	r14
     290:	08 95       	ret

00000292 <PLCD_voidWriteCommand>:
     292:	1f 93       	push	r17
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	ec 01       	movw	r28, r24
     29a:	16 2f       	mov	r17, r22
     29c:	40 e0       	ldi	r20, 0x00	; 0
     29e:	6b 81       	ldd	r22, Y+3	; 0x03
     2a0:	8e 81       	ldd	r24, Y+6	; 0x06
     2a2:	0e 94 c7 04 	call	0x98e	; 0x98e <MGPIO_void_SetPinValue>
     2a6:	40 e0       	ldi	r20, 0x00	; 0
     2a8:	6c 81       	ldd	r22, Y+4	; 0x04
     2aa:	8f 81       	ldd	r24, Y+7	; 0x07
     2ac:	0e 94 c7 04 	call	0x98e	; 0x98e <MGPIO_void_SetPinValue>
     2b0:	88 81       	ld	r24, Y
     2b2:	81 11       	cpse	r24, r1
     2b4:	05 c0       	rjmp	.+10     	; 0x2c0 <PLCD_voidWriteCommand+0x2e>
     2b6:	61 2f       	mov	r22, r17
     2b8:	ce 01       	movw	r24, r28
     2ba:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <PLCD_voidWrite8Bits>
     2be:	0b c0       	rjmp	.+22     	; 0x2d6 <PLCD_voidWriteCommand+0x44>
     2c0:	61 2f       	mov	r22, r17
     2c2:	62 95       	swap	r22
     2c4:	6f 70       	andi	r22, 0x0F	; 15
     2c6:	ce 01       	movw	r24, r28
     2c8:	0e 94 1a 01 	call	0x234	; 0x234 <PLCD_voidWrite4Bits>
     2cc:	61 2f       	mov	r22, r17
     2ce:	6f 70       	andi	r22, 0x0F	; 15
     2d0:	ce 01       	movw	r24, r28
     2d2:	0e 94 1a 01 	call	0x234	; 0x234 <PLCD_voidWrite4Bits>
     2d6:	df 91       	pop	r29
     2d8:	cf 91       	pop	r28
     2da:	1f 91       	pop	r17
     2dc:	08 95       	ret

000002de <PLCD_voidWriteData>:
     2de:	1f 93       	push	r17
     2e0:	cf 93       	push	r28
     2e2:	df 93       	push	r29
     2e4:	ec 01       	movw	r28, r24
     2e6:	16 2f       	mov	r17, r22
     2e8:	41 e0       	ldi	r20, 0x01	; 1
     2ea:	6b 81       	ldd	r22, Y+3	; 0x03
     2ec:	8e 81       	ldd	r24, Y+6	; 0x06
     2ee:	0e 94 c7 04 	call	0x98e	; 0x98e <MGPIO_void_SetPinValue>
     2f2:	40 e0       	ldi	r20, 0x00	; 0
     2f4:	6c 81       	ldd	r22, Y+4	; 0x04
     2f6:	8f 81       	ldd	r24, Y+7	; 0x07
     2f8:	0e 94 c7 04 	call	0x98e	; 0x98e <MGPIO_void_SetPinValue>
     2fc:	88 81       	ld	r24, Y
     2fe:	81 11       	cpse	r24, r1
     300:	05 c0       	rjmp	.+10     	; 0x30c <PLCD_voidWriteData+0x2e>
     302:	61 2f       	mov	r22, r17
     304:	ce 01       	movw	r24, r28
     306:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <PLCD_voidWrite8Bits>
     30a:	0b c0       	rjmp	.+22     	; 0x322 <PLCD_voidWriteData+0x44>
     30c:	61 2f       	mov	r22, r17
     30e:	62 95       	swap	r22
     310:	6f 70       	andi	r22, 0x0F	; 15
     312:	ce 01       	movw	r24, r28
     314:	0e 94 1a 01 	call	0x234	; 0x234 <PLCD_voidWrite4Bits>
     318:	61 2f       	mov	r22, r17
     31a:	6f 70       	andi	r22, 0x0F	; 15
     31c:	ce 01       	movw	r24, r28
     31e:	0e 94 1a 01 	call	0x234	; 0x234 <PLCD_voidWrite4Bits>
     322:	df 91       	pop	r29
     324:	cf 91       	pop	r28
     326:	1f 91       	pop	r17
     328:	08 95       	ret

0000032a <HLCD_voidInit>:
     32a:	af 92       	push	r10
     32c:	bf 92       	push	r11
     32e:	cf 92       	push	r12
     330:	df 92       	push	r13
     332:	ef 92       	push	r14
     334:	ff 92       	push	r15
     336:	0f 93       	push	r16
     338:	1f 93       	push	r17
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	8c 01       	movw	r16, r24
     340:	fc 01       	movw	r30, r24
     342:	c0 80       	ld	r12, Z
     344:	f1 e0       	ldi	r31, 0x01	; 1
     346:	cf 16       	cp	r12, r31
     348:	21 f0       	breq	.+8      	; 0x352 <HLCD_voidInit+0x28>
     34a:	68 94       	set
     34c:	ff 24       	eor	r15, r15
     34e:	f3 f8       	bld	r15, 3
     350:	03 c0       	rjmp	.+6      	; 0x358 <HLCD_voidInit+0x2e>
     352:	68 94       	set
     354:	ff 24       	eor	r15, r15
     356:	f2 f8       	bld	r15, 2
     358:	dd 24       	eor	r13, r13
     35a:	d3 94       	inc	r13
     35c:	f8 01       	movw	r30, r16
     35e:	81 81       	ldd	r24, Z+1	; 0x01
     360:	82 30       	cpi	r24, 0x02	; 2
     362:	08 f4       	brcc	.+2      	; 0x366 <HLCD_voidInit+0x3c>
     364:	d1 2c       	mov	r13, r1
     366:	ee 24       	eor	r14, r14
     368:	e3 94       	inc	r14
     36a:	ce 10       	cpse	r12, r14
     36c:	01 c0       	rjmp	.+2      	; 0x370 <HLCD_voidInit+0x46>
     36e:	e1 2c       	mov	r14, r1
     370:	e8 01       	movw	r28, r16
     372:	23 96       	adiw	r28, 0x03	; 3
     374:	58 01       	movw	r10, r16
     376:	f6 e0       	ldi	r31, 0x06	; 6
     378:	af 0e       	add	r10, r31
     37a:	b1 1c       	adc	r11, r1
     37c:	69 91       	ld	r22, Y+
     37e:	41 e0       	ldi	r20, 0x01	; 1
     380:	8a 81       	ldd	r24, Y+2	; 0x02
     382:	0e 94 86 04 	call	0x90c	; 0x90c <MGPIO_void_SetPinDirection>
     386:	ca 15       	cp	r28, r10
     388:	db 05       	cpc	r29, r11
     38a:	c1 f7       	brne	.-16     	; 0x37c <HLCD_voidInit+0x52>
     38c:	ff 20       	and	r15, r15
     38e:	a1 f0       	breq	.+40     	; 0x3b8 <HLCD_voidInit+0x8e>
     390:	c0 e0       	ldi	r28, 0x00	; 0
     392:	d0 e0       	ldi	r29, 0x00	; 0
     394:	f8 01       	movw	r30, r16
     396:	a1 85       	ldd	r26, Z+9	; 0x09
     398:	b2 85       	ldd	r27, Z+10	; 0x0a
     39a:	ac 0f       	add	r26, r28
     39c:	bd 1f       	adc	r27, r29
     39e:	83 85       	ldd	r24, Z+11	; 0x0b
     3a0:	94 85       	ldd	r25, Z+12	; 0x0c
     3a2:	fc 01       	movw	r30, r24
     3a4:	ec 0f       	add	r30, r28
     3a6:	fd 1f       	adc	r31, r29
     3a8:	41 e0       	ldi	r20, 0x01	; 1
     3aa:	6c 91       	ld	r22, X
     3ac:	80 81       	ld	r24, Z
     3ae:	0e 94 86 04 	call	0x90c	; 0x90c <MGPIO_void_SetPinDirection>
     3b2:	21 96       	adiw	r28, 0x01	; 1
     3b4:	cf 15       	cp	r28, r15
     3b6:	70 f3       	brcs	.-36     	; 0x394 <HLCD_voidInit+0x6a>
     3b8:	62 e3       	ldi	r22, 0x32	; 50
     3ba:	70 e0       	ldi	r23, 0x00	; 0
     3bc:	80 e0       	ldi	r24, 0x00	; 0
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	0e 94 50 03 	call	0x6a0	; 0x6a0 <MCLOCK_voidDelayMS>
     3c4:	81 e0       	ldi	r24, 0x01	; 1
     3c6:	c8 12       	cpse	r12, r24
     3c8:	06 c0       	rjmp	.+12     	; 0x3d6 <HLCD_voidInit+0xac>
     3ca:	6e 2d       	mov	r22, r14
     3cc:	70 e0       	ldi	r23, 0x00	; 0
     3ce:	62 60       	ori	r22, 0x02	; 2
     3d0:	c8 01       	movw	r24, r16
     3d2:	0e 94 1a 01 	call	0x234	; 0x234 <PLCD_voidWrite4Bits>
     3d6:	ee 0c       	add	r14, r14
     3d8:	ee 0c       	add	r14, r14
     3da:	ee 0c       	add	r14, r14
     3dc:	ee 0c       	add	r14, r14
     3de:	6d 2d       	mov	r22, r13
     3e0:	66 0f       	add	r22, r22
     3e2:	66 0f       	add	r22, r22
     3e4:	66 0f       	add	r22, r22
     3e6:	6e 29       	or	r22, r14
     3e8:	60 62       	ori	r22, 0x20	; 32
     3ea:	c8 01       	movw	r24, r16
     3ec:	0e 94 49 01 	call	0x292	; 0x292 <PLCD_voidWriteCommand>
     3f0:	61 e0       	ldi	r22, 0x01	; 1
     3f2:	70 e0       	ldi	r23, 0x00	; 0
     3f4:	80 e0       	ldi	r24, 0x00	; 0
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	0e 94 50 03 	call	0x6a0	; 0x6a0 <MCLOCK_voidDelayMS>
     3fc:	6c e0       	ldi	r22, 0x0C	; 12
     3fe:	c8 01       	movw	r24, r16
     400:	0e 94 49 01 	call	0x292	; 0x292 <PLCD_voidWriteCommand>
     404:	61 e0       	ldi	r22, 0x01	; 1
     406:	70 e0       	ldi	r23, 0x00	; 0
     408:	80 e0       	ldi	r24, 0x00	; 0
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	0e 94 50 03 	call	0x6a0	; 0x6a0 <MCLOCK_voidDelayMS>
     410:	61 e0       	ldi	r22, 0x01	; 1
     412:	c8 01       	movw	r24, r16
     414:	0e 94 49 01 	call	0x292	; 0x292 <PLCD_voidWriteCommand>
     418:	65 e0       	ldi	r22, 0x05	; 5
     41a:	70 e0       	ldi	r23, 0x00	; 0
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	0e 94 50 03 	call	0x6a0	; 0x6a0 <MCLOCK_voidDelayMS>
     424:	66 e0       	ldi	r22, 0x06	; 6
     426:	c8 01       	movw	r24, r16
     428:	0e 94 49 01 	call	0x292	; 0x292 <PLCD_voidWriteCommand>
     42c:	df 91       	pop	r29
     42e:	cf 91       	pop	r28
     430:	1f 91       	pop	r17
     432:	0f 91       	pop	r16
     434:	ff 90       	pop	r15
     436:	ef 90       	pop	r14
     438:	df 90       	pop	r13
     43a:	cf 90       	pop	r12
     43c:	bf 90       	pop	r11
     43e:	af 90       	pop	r10
     440:	08 95       	ret

00000442 <HLCD_voidSetPosition>:
     442:	44 30       	cpi	r20, 0x04	; 4
     444:	58 f4       	brcc	.+22     	; 0x45c <HLCD_voidSetPosition+0x1a>
     446:	9c 01       	movw	r18, r24
     448:	e4 2f       	mov	r30, r20
     44a:	f0 e0       	ldi	r31, 0x00	; 0
     44c:	e0 50       	subi	r30, 0x00	; 0
     44e:	ff 4f       	sbci	r31, 0xFF	; 255
     450:	90 81       	ld	r25, Z
     452:	69 0f       	add	r22, r25
     454:	60 68       	ori	r22, 0x80	; 128
     456:	c9 01       	movw	r24, r18
     458:	0e 94 49 01 	call	0x292	; 0x292 <PLCD_voidWriteCommand>
     45c:	08 95       	ret

0000045e <HLCD_voidWriteString>:
     45e:	ef 92       	push	r14
     460:	ff 92       	push	r15
     462:	0f 93       	push	r16
     464:	1f 93       	push	r17
     466:	cf 93       	push	r28
     468:	df 93       	push	r29
     46a:	8c 01       	movw	r16, r24
     46c:	7b 01       	movw	r14, r22
     46e:	d0 e0       	ldi	r29, 0x00	; 0
     470:	c0 e0       	ldi	r28, 0x00	; 0
     472:	0f c0       	rjmp	.+30     	; 0x492 <HLCD_voidWriteString+0x34>
     474:	c8 01       	movw	r24, r16
     476:	0e 94 6f 01 	call	0x2de	; 0x2de <PLCD_voidWriteData>
     47a:	cf 5f       	subi	r28, 0xFF	; 255
     47c:	f8 01       	movw	r30, r16
     47e:	82 81       	ldd	r24, Z+2	; 0x02
     480:	c8 17       	cp	r28, r24
     482:	38 f0       	brcs	.+14     	; 0x492 <HLCD_voidWriteString+0x34>
     484:	df 5f       	subi	r29, 0xFF	; 255
     486:	4d 2f       	mov	r20, r29
     488:	60 e0       	ldi	r22, 0x00	; 0
     48a:	c8 01       	movw	r24, r16
     48c:	0e 94 21 02 	call	0x442	; 0x442 <HLCD_voidSetPosition>
     490:	c0 e0       	ldi	r28, 0x00	; 0
     492:	f7 01       	movw	r30, r14
     494:	61 91       	ld	r22, Z+
     496:	7f 01       	movw	r14, r30
     498:	61 11       	cpse	r22, r1
     49a:	ec cf       	rjmp	.-40     	; 0x474 <HLCD_voidWriteString+0x16>
     49c:	df 91       	pop	r29
     49e:	cf 91       	pop	r28
     4a0:	1f 91       	pop	r17
     4a2:	0f 91       	pop	r16
     4a4:	ff 90       	pop	r15
     4a6:	ef 90       	pop	r14
     4a8:	08 95       	ret

000004aa <HLCD_voidWriteNumber>:
     4aa:	0f 93       	push	r16
     4ac:	1f 93       	push	r17
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	cd b7       	in	r28, 0x3d	; 61
     4b4:	de b7       	in	r29, 0x3e	; 62
     4b6:	64 97       	sbiw	r28, 0x14	; 20
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	f8 94       	cli
     4bc:	de bf       	out	0x3e, r29	; 62
     4be:	0f be       	out	0x3f, r0	; 63
     4c0:	cd bf       	out	0x3d, r28	; 61
     4c2:	8c 01       	movw	r16, r24
     4c4:	2a 30       	cpi	r18, 0x0A	; 10
     4c6:	a1 f4       	brne	.+40     	; 0x4f0 <HLCD_voidWriteNumber+0x46>
     4c8:	7f 93       	push	r23
     4ca:	6f 93       	push	r22
     4cc:	5f 93       	push	r21
     4ce:	4f 93       	push	r20
     4d0:	88 e0       	ldi	r24, 0x08	; 8
     4d2:	91 e0       	ldi	r25, 0x01	; 1
     4d4:	9f 93       	push	r25
     4d6:	8f 93       	push	r24
     4d8:	ce 01       	movw	r24, r28
     4da:	01 96       	adiw	r24, 0x01	; 1
     4dc:	9f 93       	push	r25
     4de:	8f 93       	push	r24
     4e0:	0e 94 a5 06 	call	0xd4a	; 0xd4a <sprintf>
     4e4:	0f b6       	in	r0, 0x3f	; 63
     4e6:	f8 94       	cli
     4e8:	de bf       	out	0x3e, r29	; 62
     4ea:	0f be       	out	0x3f, r0	; 63
     4ec:	cd bf       	out	0x3d, r28	; 61
     4ee:	2b c0       	rjmp	.+86     	; 0x546 <HLCD_voidWriteNumber+0x9c>
     4f0:	28 30       	cpi	r18, 0x08	; 8
     4f2:	a1 f4       	brne	.+40     	; 0x51c <HLCD_voidWriteNumber+0x72>
     4f4:	7f 93       	push	r23
     4f6:	6f 93       	push	r22
     4f8:	5f 93       	push	r21
     4fa:	4f 93       	push	r20
     4fc:	8c e0       	ldi	r24, 0x0C	; 12
     4fe:	91 e0       	ldi	r25, 0x01	; 1
     500:	9f 93       	push	r25
     502:	8f 93       	push	r24
     504:	ce 01       	movw	r24, r28
     506:	01 96       	adiw	r24, 0x01	; 1
     508:	9f 93       	push	r25
     50a:	8f 93       	push	r24
     50c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <sprintf>
     510:	0f b6       	in	r0, 0x3f	; 63
     512:	f8 94       	cli
     514:	de bf       	out	0x3e, r29	; 62
     516:	0f be       	out	0x3f, r0	; 63
     518:	cd bf       	out	0x3d, r28	; 61
     51a:	15 c0       	rjmp	.+42     	; 0x546 <HLCD_voidWriteNumber+0x9c>
     51c:	20 31       	cpi	r18, 0x10	; 16
     51e:	99 f4       	brne	.+38     	; 0x546 <HLCD_voidWriteNumber+0x9c>
     520:	7f 93       	push	r23
     522:	6f 93       	push	r22
     524:	5f 93       	push	r21
     526:	4f 93       	push	r20
     528:	80 e1       	ldi	r24, 0x10	; 16
     52a:	91 e0       	ldi	r25, 0x01	; 1
     52c:	9f 93       	push	r25
     52e:	8f 93       	push	r24
     530:	ce 01       	movw	r24, r28
     532:	01 96       	adiw	r24, 0x01	; 1
     534:	9f 93       	push	r25
     536:	8f 93       	push	r24
     538:	0e 94 a5 06 	call	0xd4a	; 0xd4a <sprintf>
     53c:	0f b6       	in	r0, 0x3f	; 63
     53e:	f8 94       	cli
     540:	de bf       	out	0x3e, r29	; 62
     542:	0f be       	out	0x3f, r0	; 63
     544:	cd bf       	out	0x3d, r28	; 61
     546:	be 01       	movw	r22, r28
     548:	6f 5f       	subi	r22, 0xFF	; 255
     54a:	7f 4f       	sbci	r23, 0xFF	; 255
     54c:	c8 01       	movw	r24, r16
     54e:	0e 94 2f 02 	call	0x45e	; 0x45e <HLCD_voidWriteString>
     552:	64 96       	adiw	r28, 0x14	; 20
     554:	0f b6       	in	r0, 0x3f	; 63
     556:	f8 94       	cli
     558:	de bf       	out	0x3e, r29	; 62
     55a:	0f be       	out	0x3f, r0	; 63
     55c:	cd bf       	out	0x3d, r28	; 61
     55e:	df 91       	pop	r29
     560:	cf 91       	pop	r28
     562:	1f 91       	pop	r17
     564:	0f 91       	pop	r16
     566:	08 95       	ret

00000568 <HLCD_voidClearScreen>:
	PLCD_voidWriteCommand(LCD,LCD_INSTRUCTION_SET_DDRAM_ADDR(Local_u8Position));
}

//Clears the Display, and returns the Cursor to the starting position
void HLCD_voidClearScreen(LCD_t* LCD){
	PLCD_voidWriteCommand(LCD,LCD_INSTRUCTION_CLR_DISPLAY);
     568:	61 e0       	ldi	r22, 0x01	; 1
     56a:	0e 94 49 01 	call	0x292	; 0x292 <PLCD_voidWriteCommand>
     56e:	08 95       	ret

00000570 <MADC_void_Initialize>:
void MADC_void_DisableDigitalInputBuffer ( enum ADC_CHANNEL Channel )
{
	if (Channel>5)
	return;
	
	SET_BIT(ADC_REG->ADC_DIDR0,Channel);
     570:	20 93 15 01 	sts	0x0115, r18	; 0x800115 <PADC_Conversion_Resolution>
     574:	e8 e7       	ldi	r30, 0x78	; 120
     576:	f0 e0       	ldi	r31, 0x00	; 0
     578:	14 82       	std	Z+4, r1	; 0x04
     57a:	a4 81       	ldd	r26, Z+4	; 0x04
     57c:	90 e4       	ldi	r25, 0x40	; 64
     57e:	69 9f       	mul	r22, r25
     580:	b0 01       	movw	r22, r0
     582:	11 24       	eor	r1, r1
     584:	6a 2b       	or	r22, r26
     586:	90 e2       	ldi	r25, 0x20	; 32
     588:	29 9f       	mul	r18, r25
     58a:	d0 01       	movw	r26, r0
     58c:	11 24       	eor	r1, r1
     58e:	a6 2b       	or	r26, r22
     590:	a4 83       	std	Z+4, r26	; 0x04
     592:	12 82       	std	Z+2, r1	; 0x02
     594:	92 81       	ldd	r25, Z+2	; 0x02
     596:	28 2f       	mov	r18, r24
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	b9 01       	movw	r22, r18
     59c:	66 0f       	add	r22, r22
     59e:	77 1f       	adc	r23, r23
     5a0:	62 95       	swap	r22
     5a2:	72 95       	swap	r23
     5a4:	70 7f       	andi	r23, 0xF0	; 240
     5a6:	76 27       	eor	r23, r22
     5a8:	60 7f       	andi	r22, 0xF0	; 240
     5aa:	76 27       	eor	r23, r22
     5ac:	49 2b       	or	r20, r25
     5ae:	64 2b       	or	r22, r20
     5b0:	22 0f       	add	r18, r18
     5b2:	33 1f       	adc	r19, r19
     5b4:	22 0f       	add	r18, r18
     5b6:	33 1f       	adc	r19, r19
     5b8:	22 0f       	add	r18, r18
     5ba:	33 1f       	adc	r19, r19
     5bc:	26 2b       	or	r18, r22
     5be:	22 83       	std	Z+2, r18	; 0x02
     5c0:	81 30       	cpi	r24, 0x01	; 1
     5c2:	19 f4       	brne	.+6      	; 0x5ca <MADC_void_Initialize+0x5a>
     5c4:	8f b7       	in	r24, 0x3f	; 63
     5c6:	80 68       	ori	r24, 0x80	; 128
     5c8:	8f bf       	out	0x3f, r24	; 63
     5ca:	08 95       	ret

000005cc <MADC_void_ReadChannelAsynch>:
     5cc:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <PADC_void_CallBack+0x1>
     5d0:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <PADC_void_CallBack>
     5d4:	e8 e7       	ldi	r30, 0x78	; 120
     5d6:	f0 e0       	ldi	r31, 0x00	; 0
     5d8:	94 81       	ldd	r25, Z+4	; 0x04
     5da:	90 7f       	andi	r25, 0xF0	; 240
     5dc:	94 83       	std	Z+4, r25	; 0x04
     5de:	94 81       	ldd	r25, Z+4	; 0x04
     5e0:	89 2b       	or	r24, r25
     5e2:	84 83       	std	Z+4, r24	; 0x04
     5e4:	08 95       	ret

000005e6 <MADC_void_StartContinousMode>:
     5e6:	e8 e7       	ldi	r30, 0x78	; 120
     5e8:	f0 e0       	ldi	r31, 0x00	; 0
     5ea:	82 81       	ldd	r24, Z+2	; 0x02
     5ec:	80 68       	ori	r24, 0x80	; 128
     5ee:	82 83       	std	Z+2, r24	; 0x02
     5f0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
     5f4:	88 23       	and	r24, r24
     5f6:	19 f0       	breq	.+6      	; 0x5fe <MADC_void_StartContinousMode+0x18>
     5f8:	82 81       	ldd	r24, Z+2	; 0x02
     5fa:	80 64       	ori	r24, 0x40	; 64
     5fc:	82 83       	std	Z+2, r24	; 0x02
     5fe:	08 95       	ret

00000600 <MADC_void_SetAutoTriggerSource>:
     600:	81 11       	cpse	r24, r1
     602:	04 c0       	rjmp	.+8      	; 0x60c <MADC_void_SetAutoTriggerSource+0xc>
     604:	91 e0       	ldi	r25, 0x01	; 1
     606:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <__data_end>
     60a:	02 c0       	rjmp	.+4      	; 0x610 <MADC_void_SetAutoTriggerSource+0x10>
     60c:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end>
     610:	e8 e7       	ldi	r30, 0x78	; 120
     612:	f0 e0       	ldi	r31, 0x00	; 0
     614:	13 82       	std	Z+3, r1	; 0x03
     616:	93 81       	ldd	r25, Z+3	; 0x03
     618:	89 2b       	or	r24, r25
     61a:	83 83       	std	Z+3, r24	; 0x03
     61c:	08 95       	ret

0000061e <__vector_21>:
	
}

void ADC_VECTOR_ISR_ADC (void)
{
     61e:	1f 92       	push	r1
     620:	0f 92       	push	r0
     622:	0f b6       	in	r0, 0x3f	; 63
     624:	0f 92       	push	r0
     626:	11 24       	eor	r1, r1
     628:	2f 93       	push	r18
     62a:	3f 93       	push	r19
     62c:	4f 93       	push	r20
     62e:	5f 93       	push	r21
     630:	6f 93       	push	r22
     632:	7f 93       	push	r23
     634:	8f 93       	push	r24
     636:	9f 93       	push	r25
     638:	af 93       	push	r26
     63a:	bf 93       	push	r27
     63c:	ef 93       	push	r30
     63e:	ff 93       	push	r31
	
	if (PADC_void_CallBack != 0)
     640:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <PADC_void_CallBack>
     644:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <PADC_void_CallBack+0x1>
     648:	30 97       	sbiw	r30, 0x00	; 0
     64a:	81 f0       	breq	.+32     	; 0x66c <__vector_21+0x4e>
	{
		u16 Local_Result = 0;
		if (PADC_Conversion_Resolution == ADC_8BIT)
     64c:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <PADC_Conversion_Resolution>
     650:	81 30       	cpi	r24, 0x01	; 1
     652:	21 f4       	brne	.+8      	; 0x65c <__vector_21+0x3e>
		{
			Local_Result = ADC_REG->ADC_ADCH;
     654:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	07 c0       	rjmp	.+14     	; 0x66a <__vector_21+0x4c>
		}
		else
		{
			Local_Result = ADC_REG->ADC_ADCL;
     65c:	a8 e7       	ldi	r26, 0x78	; 120
     65e:	b0 e0       	ldi	r27, 0x00	; 0
     660:	8c 91       	ld	r24, X
			Local_Result |= ((u16)ADC_REG->ADC_ADCH)<<8;
     662:	11 96       	adiw	r26, 0x01	; 1
     664:	2c 91       	ld	r18, X
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	92 2b       	or	r25, r18
		}
		
		PADC_void_CallBack(Local_Result);
     66a:	09 95       	icall
	}
	if (PADC_FREE_RUNNING_MODE)
     66c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
     670:	88 23       	and	r24, r24
     672:	29 f0       	breq	.+10     	; 0x67e <__vector_21+0x60>
		SET_BIT(ADC_REG->ADC_ADCSRA,6);
     674:	e8 e7       	ldi	r30, 0x78	; 120
     676:	f0 e0       	ldi	r31, 0x00	; 0
     678:	82 81       	ldd	r24, Z+2	; 0x02
     67a:	80 64       	ori	r24, 0x40	; 64
     67c:	82 83       	std	Z+2, r24	; 0x02
     67e:	ff 91       	pop	r31
     680:	ef 91       	pop	r30
     682:	bf 91       	pop	r27
     684:	af 91       	pop	r26
     686:	9f 91       	pop	r25
     688:	8f 91       	pop	r24
     68a:	7f 91       	pop	r23
     68c:	6f 91       	pop	r22
     68e:	5f 91       	pop	r21
     690:	4f 91       	pop	r20
     692:	3f 91       	pop	r19
     694:	2f 91       	pop	r18
     696:	0f 90       	pop	r0
     698:	0f be       	out	0x3f, r0	; 63
     69a:	0f 90       	pop	r0
     69c:	1f 90       	pop	r1
     69e:	18 95       	reti

000006a0 <MCLOCK_voidDelayMS>:
#include "CLOCK_private.h"
#include "CLOCK_config.h"



void MCLOCK_voidDelayMS(u32 ms){
     6a0:	9b 01       	movw	r18, r22
     6a2:	ac 01       	movw	r20, r24
	register u32 Ticks = (CLOCK_SYSTEM_FREQUENCY/7000)*ms - 10;
     6a4:	a6 e7       	ldi	r26, 0x76	; 118
     6a6:	b4 e0       	ldi	r27, 0x04	; 4
     6a8:	0e 94 8b 06 	call	0xd16	; 0xd16 <__muluhisi3>
     6ac:	ab 01       	movw	r20, r22
     6ae:	bc 01       	movw	r22, r24
	while(Ticks--)
     6b0:	db 01       	movw	r26, r22
     6b2:	ca 01       	movw	r24, r20
     6b4:	0b 97       	sbiw	r24, 0x0b	; 11
     6b6:	a1 09       	sbc	r26, r1
     6b8:	b1 09       	sbc	r27, r1
     6ba:	4a 30       	cpi	r20, 0x0A	; 10
     6bc:	51 05       	cpc	r21, r1
     6be:	61 05       	cpc	r22, r1
     6c0:	71 05       	cpc	r23, r1
     6c2:	29 f0       	breq	.+10     	; 0x6ce <MCLOCK_voidDelayMS+0x2e>
		__asm__ volatile("NOP");
     6c4:	00 00       	nop



void MCLOCK_voidDelayMS(u32 ms){
	register u32 Ticks = (CLOCK_SYSTEM_FREQUENCY/7000)*ms - 10;
	while(Ticks--)
     6c6:	01 97       	sbiw	r24, 0x01	; 1
     6c8:	a1 09       	sbc	r26, r1
     6ca:	b1 09       	sbc	r27, r1
     6cc:	d8 f7       	brcc	.-10     	; 0x6c4 <MCLOCK_voidDelayMS+0x24>
     6ce:	08 95       	ret

000006d0 <MEXTI_void_EnableInterrupt>:
			case PCINT_1:
			PEXTI_void_CallBacks[3] = CallBack;
			break;
			
			case PCINT_2:
			PEXTI_void_CallBacks[4] = CallBack;
     6d0:	82 30       	cpi	r24, 0x02	; 2
     6d2:	79 f0       	breq	.+30     	; 0x6f2 <MEXTI_void_EnableInterrupt+0x22>
     6d4:	28 f4       	brcc	.+10     	; 0x6e0 <MEXTI_void_EnableInterrupt+0x10>
     6d6:	88 23       	and	r24, r24
     6d8:	41 f0       	breq	.+16     	; 0x6ea <MEXTI_void_EnableInterrupt+0x1a>
     6da:	81 30       	cpi	r24, 0x01	; 1
     6dc:	41 f0       	breq	.+16     	; 0x6ee <MEXTI_void_EnableInterrupt+0x1e>
     6de:	08 95       	ret
     6e0:	83 30       	cpi	r24, 0x03	; 3
     6e2:	69 f0       	breq	.+26     	; 0x6fe <MEXTI_void_EnableInterrupt+0x2e>
     6e4:	84 30       	cpi	r24, 0x04	; 4
     6e6:	89 f0       	breq	.+34     	; 0x70a <MEXTI_void_EnableInterrupt+0x3a>
     6e8:	08 95       	ret
     6ea:	e8 9a       	sbi	0x1d, 0	; 29
     6ec:	13 c0       	rjmp	.+38     	; 0x714 <MEXTI_void_EnableInterrupt+0x44>
     6ee:	e9 9a       	sbi	0x1d, 1	; 29
     6f0:	11 c0       	rjmp	.+34     	; 0x714 <MEXTI_void_EnableInterrupt+0x44>
     6f2:	e8 e6       	ldi	r30, 0x68	; 104
     6f4:	f0 e0       	ldi	r31, 0x00	; 0
     6f6:	80 81       	ld	r24, Z
     6f8:	81 60       	ori	r24, 0x01	; 1
     6fa:	80 83       	st	Z, r24
     6fc:	0b c0       	rjmp	.+22     	; 0x714 <MEXTI_void_EnableInterrupt+0x44>
     6fe:	e8 e6       	ldi	r30, 0x68	; 104
     700:	f0 e0       	ldi	r31, 0x00	; 0
     702:	80 81       	ld	r24, Z
     704:	82 60       	ori	r24, 0x02	; 2
     706:	80 83       	st	Z, r24
     708:	05 c0       	rjmp	.+10     	; 0x714 <MEXTI_void_EnableInterrupt+0x44>
     70a:	e8 e6       	ldi	r30, 0x68	; 104
     70c:	f0 e0       	ldi	r31, 0x00	; 0
     70e:	80 81       	ld	r24, Z
     710:	84 60       	ori	r24, 0x04	; 4
     712:	80 83       	st	Z, r24
     714:	8f b7       	in	r24, 0x3f	; 63
     716:	80 68       	ori	r24, 0x80	; 128
     718:	8f bf       	out	0x3f, r24	; 63
     71a:	08 95       	ret

0000071c <MEXTI_void_SetTrigger>:
     71c:	88 23       	and	r24, r24
     71e:	19 f0       	breq	.+6      	; 0x726 <MEXTI_void_SetTrigger+0xa>
     720:	81 30       	cpi	r24, 0x01	; 1
     722:	51 f0       	breq	.+20     	; 0x738 <MEXTI_void_SetTrigger+0x1c>
     724:	08 95       	ret
     726:	e9 e6       	ldi	r30, 0x69	; 105
     728:	f0 e0       	ldi	r31, 0x00	; 0
     72a:	80 81       	ld	r24, Z
     72c:	8c 7f       	andi	r24, 0xFC	; 252
     72e:	80 83       	st	Z, r24
     730:	80 81       	ld	r24, Z
     732:	68 2b       	or	r22, r24
     734:	60 83       	st	Z, r22
     736:	08 95       	ret
     738:	e9 e6       	ldi	r30, 0x69	; 105
     73a:	f0 e0       	ldi	r31, 0x00	; 0
     73c:	80 81       	ld	r24, Z
     73e:	83 7f       	andi	r24, 0xF3	; 243
     740:	80 83       	st	Z, r24
     742:	80 81       	ld	r24, Z
     744:	66 0f       	add	r22, r22
     746:	66 0f       	add	r22, r22
     748:	68 2b       	or	r22, r24
     74a:	60 83       	st	Z, r22
     74c:	08 95       	ret

0000074e <__vector_1>:
		}
		
	}

void EXTI_VECTOR_ISR_EXTIO  (void)
{
     74e:	1f 92       	push	r1
     750:	0f 92       	push	r0
     752:	0f b6       	in	r0, 0x3f	; 63
     754:	0f 92       	push	r0
     756:	11 24       	eor	r1, r1
     758:	2f 93       	push	r18
     75a:	3f 93       	push	r19
     75c:	4f 93       	push	r20
     75e:	5f 93       	push	r21
     760:	6f 93       	push	r22
     762:	7f 93       	push	r23
     764:	8f 93       	push	r24
     766:	9f 93       	push	r25
     768:	af 93       	push	r26
     76a:	bf 93       	push	r27
     76c:	ef 93       	push	r30
     76e:	ff 93       	push	r31
	
	if(PEXTI_void_CallBacks[0] != 0)
     770:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <PEXTI_void_CallBacks>
     774:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <PEXTI_void_CallBacks+0x1>
     778:	30 97       	sbiw	r30, 0x00	; 0
     77a:	09 f0       	breq	.+2      	; 0x77e <__vector_1+0x30>
	{
		PEXTI_void_CallBacks[0]();
     77c:	09 95       	icall
	}
}
     77e:	ff 91       	pop	r31
     780:	ef 91       	pop	r30
     782:	bf 91       	pop	r27
     784:	af 91       	pop	r26
     786:	9f 91       	pop	r25
     788:	8f 91       	pop	r24
     78a:	7f 91       	pop	r23
     78c:	6f 91       	pop	r22
     78e:	5f 91       	pop	r21
     790:	4f 91       	pop	r20
     792:	3f 91       	pop	r19
     794:	2f 91       	pop	r18
     796:	0f 90       	pop	r0
     798:	0f be       	out	0x3f, r0	; 63
     79a:	0f 90       	pop	r0
     79c:	1f 90       	pop	r1
     79e:	18 95       	reti

000007a0 <__vector_2>:
void EXTI_VECTOR_ISR_EXTI1  (void)
{
     7a0:	1f 92       	push	r1
     7a2:	0f 92       	push	r0
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	0f 92       	push	r0
     7a8:	11 24       	eor	r1, r1
     7aa:	2f 93       	push	r18
     7ac:	3f 93       	push	r19
     7ae:	4f 93       	push	r20
     7b0:	5f 93       	push	r21
     7b2:	6f 93       	push	r22
     7b4:	7f 93       	push	r23
     7b6:	8f 93       	push	r24
     7b8:	9f 93       	push	r25
     7ba:	af 93       	push	r26
     7bc:	bf 93       	push	r27
     7be:	ef 93       	push	r30
     7c0:	ff 93       	push	r31
	
	if(PEXTI_void_CallBacks[1] != 0)
     7c2:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <PEXTI_void_CallBacks+0x2>
     7c6:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <PEXTI_void_CallBacks+0x3>
     7ca:	30 97       	sbiw	r30, 0x00	; 0
     7cc:	09 f0       	breq	.+2      	; 0x7d0 <__vector_2+0x30>
	{
		PEXTI_void_CallBacks[1]();
     7ce:	09 95       	icall
	}
}
     7d0:	ff 91       	pop	r31
     7d2:	ef 91       	pop	r30
     7d4:	bf 91       	pop	r27
     7d6:	af 91       	pop	r26
     7d8:	9f 91       	pop	r25
     7da:	8f 91       	pop	r24
     7dc:	7f 91       	pop	r23
     7de:	6f 91       	pop	r22
     7e0:	5f 91       	pop	r21
     7e2:	4f 91       	pop	r20
     7e4:	3f 91       	pop	r19
     7e6:	2f 91       	pop	r18
     7e8:	0f 90       	pop	r0
     7ea:	0f be       	out	0x3f, r0	; 63
     7ec:	0f 90       	pop	r0
     7ee:	1f 90       	pop	r1
     7f0:	18 95       	reti

000007f2 <__vector_3>:
void EXTI_VECTOR_ISR_PCINT0 (void)
{
     7f2:	1f 92       	push	r1
     7f4:	0f 92       	push	r0
     7f6:	0f b6       	in	r0, 0x3f	; 63
     7f8:	0f 92       	push	r0
     7fa:	11 24       	eor	r1, r1
     7fc:	2f 93       	push	r18
     7fe:	3f 93       	push	r19
     800:	4f 93       	push	r20
     802:	5f 93       	push	r21
     804:	6f 93       	push	r22
     806:	7f 93       	push	r23
     808:	8f 93       	push	r24
     80a:	9f 93       	push	r25
     80c:	af 93       	push	r26
     80e:	bf 93       	push	r27
     810:	ef 93       	push	r30
     812:	ff 93       	push	r31
	
	if(PEXTI_void_CallBacks[2] != 0)
     814:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <PEXTI_void_CallBacks+0x4>
     818:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <PEXTI_void_CallBacks+0x5>
     81c:	30 97       	sbiw	r30, 0x00	; 0
     81e:	09 f0       	breq	.+2      	; 0x822 <__DATA_REGION_LENGTH__+0x22>
	{
		PEXTI_void_CallBacks[2]();
     820:	09 95       	icall
	}
}
     822:	ff 91       	pop	r31
     824:	ef 91       	pop	r30
     826:	bf 91       	pop	r27
     828:	af 91       	pop	r26
     82a:	9f 91       	pop	r25
     82c:	8f 91       	pop	r24
     82e:	7f 91       	pop	r23
     830:	6f 91       	pop	r22
     832:	5f 91       	pop	r21
     834:	4f 91       	pop	r20
     836:	3f 91       	pop	r19
     838:	2f 91       	pop	r18
     83a:	0f 90       	pop	r0
     83c:	0f be       	out	0x3f, r0	; 63
     83e:	0f 90       	pop	r0
     840:	1f 90       	pop	r1
     842:	18 95       	reti

00000844 <__vector_4>:
void EXTI_VECTOR_ISR_PCINT1 (void)
{
     844:	1f 92       	push	r1
     846:	0f 92       	push	r0
     848:	0f b6       	in	r0, 0x3f	; 63
     84a:	0f 92       	push	r0
     84c:	11 24       	eor	r1, r1
     84e:	2f 93       	push	r18
     850:	3f 93       	push	r19
     852:	4f 93       	push	r20
     854:	5f 93       	push	r21
     856:	6f 93       	push	r22
     858:	7f 93       	push	r23
     85a:	8f 93       	push	r24
     85c:	9f 93       	push	r25
     85e:	af 93       	push	r26
     860:	bf 93       	push	r27
     862:	ef 93       	push	r30
     864:	ff 93       	push	r31
	
	if(PEXTI_void_CallBacks[3] != 0)
     866:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <PEXTI_void_CallBacks+0x6>
     86a:	f0 91 1f 01 	lds	r31, 0x011F	; 0x80011f <PEXTI_void_CallBacks+0x7>
     86e:	30 97       	sbiw	r30, 0x00	; 0
     870:	09 f0       	breq	.+2      	; 0x874 <__vector_4+0x30>
	{
		PEXTI_void_CallBacks[3]();
     872:	09 95       	icall
	}
}
     874:	ff 91       	pop	r31
     876:	ef 91       	pop	r30
     878:	bf 91       	pop	r27
     87a:	af 91       	pop	r26
     87c:	9f 91       	pop	r25
     87e:	8f 91       	pop	r24
     880:	7f 91       	pop	r23
     882:	6f 91       	pop	r22
     884:	5f 91       	pop	r21
     886:	4f 91       	pop	r20
     888:	3f 91       	pop	r19
     88a:	2f 91       	pop	r18
     88c:	0f 90       	pop	r0
     88e:	0f be       	out	0x3f, r0	; 63
     890:	0f 90       	pop	r0
     892:	1f 90       	pop	r1
     894:	18 95       	reti

00000896 <__vector_5>:
void EXTI_VECTOR_ISR_PCINT2 (void)
{
     896:	1f 92       	push	r1
     898:	0f 92       	push	r0
     89a:	0f b6       	in	r0, 0x3f	; 63
     89c:	0f 92       	push	r0
     89e:	11 24       	eor	r1, r1
     8a0:	2f 93       	push	r18
     8a2:	3f 93       	push	r19
     8a4:	4f 93       	push	r20
     8a6:	5f 93       	push	r21
     8a8:	6f 93       	push	r22
     8aa:	7f 93       	push	r23
     8ac:	8f 93       	push	r24
     8ae:	9f 93       	push	r25
     8b0:	af 93       	push	r26
     8b2:	bf 93       	push	r27
     8b4:	ef 93       	push	r30
     8b6:	ff 93       	push	r31
	
	if(PEXTI_void_CallBacks[4] != 0)
     8b8:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <PEXTI_void_CallBacks+0x8>
     8bc:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <PEXTI_void_CallBacks+0x9>
     8c0:	30 97       	sbiw	r30, 0x00	; 0
     8c2:	09 f0       	breq	.+2      	; 0x8c6 <__vector_5+0x30>
	{
		PEXTI_void_CallBacks[4]();
     8c4:	09 95       	icall
	}
     8c6:	ff 91       	pop	r31
     8c8:	ef 91       	pop	r30
     8ca:	bf 91       	pop	r27
     8cc:	af 91       	pop	r26
     8ce:	9f 91       	pop	r25
     8d0:	8f 91       	pop	r24
     8d2:	7f 91       	pop	r23
     8d4:	6f 91       	pop	r22
     8d6:	5f 91       	pop	r21
     8d8:	4f 91       	pop	r20
     8da:	3f 91       	pop	r19
     8dc:	2f 91       	pop	r18
     8de:	0f 90       	pop	r0
     8e0:	0f be       	out	0x3f, r0	; 63
     8e2:	0f 90       	pop	r0
     8e4:	1f 90       	pop	r1
     8e6:	18 95       	reti

000008e8 <PGPIO_PRegister_t_GetPtrToReg>:
			CLR_REG(local_PReg->DDR);
			SET_REG(local_PReg->PORT);
			break;

	}
	}
     8e8:	81 30       	cpi	r24, 0x01	; 1
     8ea:	21 f0       	breq	.+8      	; 0x8f4 <PGPIO_PRegister_t_GetPtrToReg+0xc>
     8ec:	60 f0       	brcs	.+24     	; 0x906 <__stack+0x7>
     8ee:	82 30       	cpi	r24, 0x02	; 2
     8f0:	21 f0       	breq	.+8      	; 0x8fa <PGPIO_PRegister_t_GetPtrToReg+0x12>
     8f2:	06 c0       	rjmp	.+12     	; 0x900 <__stack+0x1>
     8f4:	86 e2       	ldi	r24, 0x26	; 38
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	08 95       	ret
     8fa:	89 e2       	ldi	r24, 0x29	; 41
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	08 95       	ret
     900:	80 e0       	ldi	r24, 0x00	; 0
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	08 95       	ret
     906:	83 e2       	ldi	r24, 0x23	; 35
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	08 95       	ret

0000090c <MGPIO_void_SetPinDirection>:
     90c:	cf 93       	push	r28
     90e:	df 93       	push	r29
     910:	d6 2f       	mov	r29, r22
     912:	c4 2f       	mov	r28, r20
     914:	0e 94 74 04 	call	0x8e8	; 0x8e8 <PGPIO_PRegister_t_GetPtrToReg>
     918:	fc 01       	movw	r30, r24
     91a:	89 2b       	or	r24, r25
     91c:	a9 f1       	breq	.+106    	; 0x988 <MGPIO_void_SetPinDirection+0x7c>
     91e:	c1 30       	cpi	r28, 0x01	; 1
     920:	a1 f0       	breq	.+40     	; 0x94a <MGPIO_void_SetPinDirection+0x3e>
     922:	18 f0       	brcs	.+6      	; 0x92a <MGPIO_void_SetPinDirection+0x1e>
     924:	c2 30       	cpi	r28, 0x02	; 2
     926:	09 f1       	breq	.+66     	; 0x96a <MGPIO_void_SetPinDirection+0x5e>
     928:	2f c0       	rjmp	.+94     	; 0x988 <MGPIO_void_SetPinDirection+0x7c>
     92a:	21 81       	ldd	r18, Z+1	; 0x01
     92c:	81 e0       	ldi	r24, 0x01	; 1
     92e:	90 e0       	ldi	r25, 0x00	; 0
     930:	02 c0       	rjmp	.+4      	; 0x936 <MGPIO_void_SetPinDirection+0x2a>
     932:	88 0f       	add	r24, r24
     934:	99 1f       	adc	r25, r25
     936:	da 95       	dec	r29
     938:	e2 f7       	brpl	.-8      	; 0x932 <MGPIO_void_SetPinDirection+0x26>
     93a:	80 95       	com	r24
     93c:	92 2f       	mov	r25, r18
     93e:	98 23       	and	r25, r24
     940:	91 83       	std	Z+1, r25	; 0x01
     942:	92 81       	ldd	r25, Z+2	; 0x02
     944:	89 23       	and	r24, r25
     946:	82 83       	std	Z+2, r24	; 0x02
     948:	1f c0       	rjmp	.+62     	; 0x988 <MGPIO_void_SetPinDirection+0x7c>
     94a:	21 81       	ldd	r18, Z+1	; 0x01
     94c:	81 e0       	ldi	r24, 0x01	; 1
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	02 c0       	rjmp	.+4      	; 0x956 <MGPIO_void_SetPinDirection+0x4a>
     952:	88 0f       	add	r24, r24
     954:	99 1f       	adc	r25, r25
     956:	da 95       	dec	r29
     958:	e2 f7       	brpl	.-8      	; 0x952 <MGPIO_void_SetPinDirection+0x46>
     95a:	92 2f       	mov	r25, r18
     95c:	98 2b       	or	r25, r24
     95e:	91 83       	std	Z+1, r25	; 0x01
     960:	92 81       	ldd	r25, Z+2	; 0x02
     962:	80 95       	com	r24
     964:	89 23       	and	r24, r25
     966:	82 83       	std	Z+2, r24	; 0x02
     968:	0f c0       	rjmp	.+30     	; 0x988 <MGPIO_void_SetPinDirection+0x7c>
     96a:	21 81       	ldd	r18, Z+1	; 0x01
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	02 c0       	rjmp	.+4      	; 0x976 <MGPIO_void_SetPinDirection+0x6a>
     972:	88 0f       	add	r24, r24
     974:	99 1f       	adc	r25, r25
     976:	da 95       	dec	r29
     978:	e2 f7       	brpl	.-8      	; 0x972 <MGPIO_void_SetPinDirection+0x66>
     97a:	98 2f       	mov	r25, r24
     97c:	90 95       	com	r25
     97e:	92 23       	and	r25, r18
     980:	91 83       	std	Z+1, r25	; 0x01
     982:	92 81       	ldd	r25, Z+2	; 0x02
     984:	89 2b       	or	r24, r25
     986:	82 83       	std	Z+2, r24	; 0x02
     988:	df 91       	pop	r29
     98a:	cf 91       	pop	r28
     98c:	08 95       	ret

0000098e <MGPIO_void_SetPinValue>:

void MGPIO_void_SetPinValue (enum GPIOPORT_t PortID, u8 PinNumber, enum GPIOSTATE_t Value)
{
     98e:	cf 93       	push	r28
     990:	df 93       	push	r29
     992:	d6 2f       	mov	r29, r22
     994:	c4 2f       	mov	r28, r20
	volatile REGISTER_t* local_PReg =0;
	local_PReg = PGPIO_PRegister_t_GetPtrToReg(PortID);
     996:	0e 94 74 04 	call	0x8e8	; 0x8e8 <PGPIO_PRegister_t_GetPtrToReg>
	if (local_PReg == 0)
     99a:	00 97       	sbiw	r24, 0x00	; 0
     99c:	e9 f0       	breq	.+58     	; 0x9d8 <MGPIO_void_SetPinValue+0x4a>
		return;
	switch (Value)
     99e:	cc 23       	and	r28, r28
     9a0:	19 f0       	breq	.+6      	; 0x9a8 <MGPIO_void_SetPinValue+0x1a>
     9a2:	c1 30       	cpi	r28, 0x01	; 1
     9a4:	71 f0       	breq	.+28     	; 0x9c2 <MGPIO_void_SetPinValue+0x34>
     9a6:	18 c0       	rjmp	.+48     	; 0x9d8 <MGPIO_void_SetPinValue+0x4a>
	{
		case  GPIO_LOW:
			CLR_BIT(local_PReg->PORT,PinNumber);
     9a8:	fc 01       	movw	r30, r24
     9aa:	42 81       	ldd	r20, Z+2	; 0x02
     9ac:	21 e0       	ldi	r18, 0x01	; 1
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	02 c0       	rjmp	.+4      	; 0x9b6 <MGPIO_void_SetPinValue+0x28>
     9b2:	22 0f       	add	r18, r18
     9b4:	33 1f       	adc	r19, r19
     9b6:	da 95       	dec	r29
     9b8:	e2 f7       	brpl	.-8      	; 0x9b2 <MGPIO_void_SetPinValue+0x24>
     9ba:	20 95       	com	r18
     9bc:	24 23       	and	r18, r20
     9be:	22 83       	std	Z+2, r18	; 0x02
			break;
     9c0:	0b c0       	rjmp	.+22     	; 0x9d8 <MGPIO_void_SetPinValue+0x4a>
		case  GPIO_HIGH:
			SET_BIT(local_PReg->PORT,PinNumber);
     9c2:	fc 01       	movw	r30, r24
     9c4:	42 81       	ldd	r20, Z+2	; 0x02
     9c6:	21 e0       	ldi	r18, 0x01	; 1
     9c8:	30 e0       	ldi	r19, 0x00	; 0
     9ca:	02 c0       	rjmp	.+4      	; 0x9d0 <MGPIO_void_SetPinValue+0x42>
     9cc:	22 0f       	add	r18, r18
     9ce:	33 1f       	adc	r19, r19
     9d0:	da 95       	dec	r29
     9d2:	e2 f7       	brpl	.-8      	; 0x9cc <MGPIO_void_SetPinValue+0x3e>
     9d4:	24 2b       	or	r18, r20
     9d6:	22 83       	std	Z+2, r18	; 0x02
			break;

	}

	}
     9d8:	df 91       	pop	r29
     9da:	cf 91       	pop	r28
     9dc:	08 95       	ret

000009de <__divsf3>:
     9de:	0e 94 03 05 	call	0xa06	; 0xa06 <__divsf3x>
     9e2:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_round>
     9e6:	0e 94 dd 05 	call	0xbba	; 0xbba <__fp_pscB>
     9ea:	58 f0       	brcs	.+22     	; 0xa02 <__divsf3+0x24>
     9ec:	0e 94 d6 05 	call	0xbac	; 0xbac <__fp_pscA>
     9f0:	40 f0       	brcs	.+16     	; 0xa02 <__divsf3+0x24>
     9f2:	29 f4       	brne	.+10     	; 0x9fe <__divsf3+0x20>
     9f4:	5f 3f       	cpi	r21, 0xFF	; 255
     9f6:	29 f0       	breq	.+10     	; 0xa02 <__divsf3+0x24>
     9f8:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_inf>
     9fc:	51 11       	cpse	r21, r1
     9fe:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__fp_szero>
     a02:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__fp_nan>

00000a06 <__divsf3x>:
     a06:	0e 94 f5 05 	call	0xbea	; 0xbea <__fp_split3>
     a0a:	68 f3       	brcs	.-38     	; 0x9e6 <__divsf3+0x8>

00000a0c <__divsf3_pse>:
     a0c:	99 23       	and	r25, r25
     a0e:	b1 f3       	breq	.-20     	; 0x9fc <__divsf3+0x1e>
     a10:	55 23       	and	r21, r21
     a12:	91 f3       	breq	.-28     	; 0x9f8 <__divsf3+0x1a>
     a14:	95 1b       	sub	r25, r21
     a16:	55 0b       	sbc	r21, r21
     a18:	bb 27       	eor	r27, r27
     a1a:	aa 27       	eor	r26, r26
     a1c:	62 17       	cp	r22, r18
     a1e:	73 07       	cpc	r23, r19
     a20:	84 07       	cpc	r24, r20
     a22:	38 f0       	brcs	.+14     	; 0xa32 <__divsf3_pse+0x26>
     a24:	9f 5f       	subi	r25, 0xFF	; 255
     a26:	5f 4f       	sbci	r21, 0xFF	; 255
     a28:	22 0f       	add	r18, r18
     a2a:	33 1f       	adc	r19, r19
     a2c:	44 1f       	adc	r20, r20
     a2e:	aa 1f       	adc	r26, r26
     a30:	a9 f3       	breq	.-22     	; 0xa1c <__divsf3_pse+0x10>
     a32:	35 d0       	rcall	.+106    	; 0xa9e <__divsf3_pse+0x92>
     a34:	0e 2e       	mov	r0, r30
     a36:	3a f0       	brmi	.+14     	; 0xa46 <__divsf3_pse+0x3a>
     a38:	e0 e8       	ldi	r30, 0x80	; 128
     a3a:	32 d0       	rcall	.+100    	; 0xaa0 <__divsf3_pse+0x94>
     a3c:	91 50       	subi	r25, 0x01	; 1
     a3e:	50 40       	sbci	r21, 0x00	; 0
     a40:	e6 95       	lsr	r30
     a42:	00 1c       	adc	r0, r0
     a44:	ca f7       	brpl	.-14     	; 0xa38 <__divsf3_pse+0x2c>
     a46:	2b d0       	rcall	.+86     	; 0xa9e <__divsf3_pse+0x92>
     a48:	fe 2f       	mov	r31, r30
     a4a:	29 d0       	rcall	.+82     	; 0xa9e <__divsf3_pse+0x92>
     a4c:	66 0f       	add	r22, r22
     a4e:	77 1f       	adc	r23, r23
     a50:	88 1f       	adc	r24, r24
     a52:	bb 1f       	adc	r27, r27
     a54:	26 17       	cp	r18, r22
     a56:	37 07       	cpc	r19, r23
     a58:	48 07       	cpc	r20, r24
     a5a:	ab 07       	cpc	r26, r27
     a5c:	b0 e8       	ldi	r27, 0x80	; 128
     a5e:	09 f0       	breq	.+2      	; 0xa62 <__divsf3_pse+0x56>
     a60:	bb 0b       	sbc	r27, r27
     a62:	80 2d       	mov	r24, r0
     a64:	bf 01       	movw	r22, r30
     a66:	ff 27       	eor	r31, r31
     a68:	93 58       	subi	r25, 0x83	; 131
     a6a:	5f 4f       	sbci	r21, 0xFF	; 255
     a6c:	3a f0       	brmi	.+14     	; 0xa7c <__divsf3_pse+0x70>
     a6e:	9e 3f       	cpi	r25, 0xFE	; 254
     a70:	51 05       	cpc	r21, r1
     a72:	78 f0       	brcs	.+30     	; 0xa92 <__divsf3_pse+0x86>
     a74:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_inf>
     a78:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__fp_szero>
     a7c:	5f 3f       	cpi	r21, 0xFF	; 255
     a7e:	e4 f3       	brlt	.-8      	; 0xa78 <__divsf3_pse+0x6c>
     a80:	98 3e       	cpi	r25, 0xE8	; 232
     a82:	d4 f3       	brlt	.-12     	; 0xa78 <__divsf3_pse+0x6c>
     a84:	86 95       	lsr	r24
     a86:	77 95       	ror	r23
     a88:	67 95       	ror	r22
     a8a:	b7 95       	ror	r27
     a8c:	f7 95       	ror	r31
     a8e:	9f 5f       	subi	r25, 0xFF	; 255
     a90:	c9 f7       	brne	.-14     	; 0xa84 <__divsf3_pse+0x78>
     a92:	88 0f       	add	r24, r24
     a94:	91 1d       	adc	r25, r1
     a96:	96 95       	lsr	r25
     a98:	87 95       	ror	r24
     a9a:	97 f9       	bld	r25, 7
     a9c:	08 95       	ret
     a9e:	e1 e0       	ldi	r30, 0x01	; 1
     aa0:	66 0f       	add	r22, r22
     aa2:	77 1f       	adc	r23, r23
     aa4:	88 1f       	adc	r24, r24
     aa6:	bb 1f       	adc	r27, r27
     aa8:	62 17       	cp	r22, r18
     aaa:	73 07       	cpc	r23, r19
     aac:	84 07       	cpc	r24, r20
     aae:	ba 07       	cpc	r27, r26
     ab0:	20 f0       	brcs	.+8      	; 0xaba <__divsf3_pse+0xae>
     ab2:	62 1b       	sub	r22, r18
     ab4:	73 0b       	sbc	r23, r19
     ab6:	84 0b       	sbc	r24, r20
     ab8:	ba 0b       	sbc	r27, r26
     aba:	ee 1f       	adc	r30, r30
     abc:	88 f7       	brcc	.-30     	; 0xaa0 <__divsf3_pse+0x94>
     abe:	e0 95       	com	r30
     ac0:	08 95       	ret

00000ac2 <__fixunssfsi>:
     ac2:	0e 94 fd 05 	call	0xbfa	; 0xbfa <__fp_splitA>
     ac6:	88 f0       	brcs	.+34     	; 0xaea <__fixunssfsi+0x28>
     ac8:	9f 57       	subi	r25, 0x7F	; 127
     aca:	98 f0       	brcs	.+38     	; 0xaf2 <__fixunssfsi+0x30>
     acc:	b9 2f       	mov	r27, r25
     ace:	99 27       	eor	r25, r25
     ad0:	b7 51       	subi	r27, 0x17	; 23
     ad2:	b0 f0       	brcs	.+44     	; 0xb00 <__fixunssfsi+0x3e>
     ad4:	e1 f0       	breq	.+56     	; 0xb0e <__fixunssfsi+0x4c>
     ad6:	66 0f       	add	r22, r22
     ad8:	77 1f       	adc	r23, r23
     ada:	88 1f       	adc	r24, r24
     adc:	99 1f       	adc	r25, r25
     ade:	1a f0       	brmi	.+6      	; 0xae6 <__fixunssfsi+0x24>
     ae0:	ba 95       	dec	r27
     ae2:	c9 f7       	brne	.-14     	; 0xad6 <__fixunssfsi+0x14>
     ae4:	14 c0       	rjmp	.+40     	; 0xb0e <__fixunssfsi+0x4c>
     ae6:	b1 30       	cpi	r27, 0x01	; 1
     ae8:	91 f0       	breq	.+36     	; 0xb0e <__fixunssfsi+0x4c>
     aea:	0e 94 17 06 	call	0xc2e	; 0xc2e <__fp_zero>
     aee:	b1 e0       	ldi	r27, 0x01	; 1
     af0:	08 95       	ret
     af2:	0c 94 17 06 	jmp	0xc2e	; 0xc2e <__fp_zero>
     af6:	67 2f       	mov	r22, r23
     af8:	78 2f       	mov	r23, r24
     afa:	88 27       	eor	r24, r24
     afc:	b8 5f       	subi	r27, 0xF8	; 248
     afe:	39 f0       	breq	.+14     	; 0xb0e <__fixunssfsi+0x4c>
     b00:	b9 3f       	cpi	r27, 0xF9	; 249
     b02:	cc f3       	brlt	.-14     	; 0xaf6 <__fixunssfsi+0x34>
     b04:	86 95       	lsr	r24
     b06:	77 95       	ror	r23
     b08:	67 95       	ror	r22
     b0a:	b3 95       	inc	r27
     b0c:	d9 f7       	brne	.-10     	; 0xb04 <__fixunssfsi+0x42>
     b0e:	3e f4       	brtc	.+14     	; 0xb1e <__fixunssfsi+0x5c>
     b10:	90 95       	com	r25
     b12:	80 95       	com	r24
     b14:	70 95       	com	r23
     b16:	61 95       	neg	r22
     b18:	7f 4f       	sbci	r23, 0xFF	; 255
     b1a:	8f 4f       	sbci	r24, 0xFF	; 255
     b1c:	9f 4f       	sbci	r25, 0xFF	; 255
     b1e:	08 95       	ret

00000b20 <__floatunsisf>:
     b20:	e8 94       	clt
     b22:	09 c0       	rjmp	.+18     	; 0xb36 <__floatsisf+0x12>

00000b24 <__floatsisf>:
     b24:	97 fb       	bst	r25, 7
     b26:	3e f4       	brtc	.+14     	; 0xb36 <__floatsisf+0x12>
     b28:	90 95       	com	r25
     b2a:	80 95       	com	r24
     b2c:	70 95       	com	r23
     b2e:	61 95       	neg	r22
     b30:	7f 4f       	sbci	r23, 0xFF	; 255
     b32:	8f 4f       	sbci	r24, 0xFF	; 255
     b34:	9f 4f       	sbci	r25, 0xFF	; 255
     b36:	99 23       	and	r25, r25
     b38:	a9 f0       	breq	.+42     	; 0xb64 <__floatsisf+0x40>
     b3a:	f9 2f       	mov	r31, r25
     b3c:	96 e9       	ldi	r25, 0x96	; 150
     b3e:	bb 27       	eor	r27, r27
     b40:	93 95       	inc	r25
     b42:	f6 95       	lsr	r31
     b44:	87 95       	ror	r24
     b46:	77 95       	ror	r23
     b48:	67 95       	ror	r22
     b4a:	b7 95       	ror	r27
     b4c:	f1 11       	cpse	r31, r1
     b4e:	f8 cf       	rjmp	.-16     	; 0xb40 <__floatsisf+0x1c>
     b50:	fa f4       	brpl	.+62     	; 0xb90 <__floatsisf+0x6c>
     b52:	bb 0f       	add	r27, r27
     b54:	11 f4       	brne	.+4      	; 0xb5a <__floatsisf+0x36>
     b56:	60 ff       	sbrs	r22, 0
     b58:	1b c0       	rjmp	.+54     	; 0xb90 <__floatsisf+0x6c>
     b5a:	6f 5f       	subi	r22, 0xFF	; 255
     b5c:	7f 4f       	sbci	r23, 0xFF	; 255
     b5e:	8f 4f       	sbci	r24, 0xFF	; 255
     b60:	9f 4f       	sbci	r25, 0xFF	; 255
     b62:	16 c0       	rjmp	.+44     	; 0xb90 <__floatsisf+0x6c>
     b64:	88 23       	and	r24, r24
     b66:	11 f0       	breq	.+4      	; 0xb6c <__floatsisf+0x48>
     b68:	96 e9       	ldi	r25, 0x96	; 150
     b6a:	11 c0       	rjmp	.+34     	; 0xb8e <__floatsisf+0x6a>
     b6c:	77 23       	and	r23, r23
     b6e:	21 f0       	breq	.+8      	; 0xb78 <__floatsisf+0x54>
     b70:	9e e8       	ldi	r25, 0x8E	; 142
     b72:	87 2f       	mov	r24, r23
     b74:	76 2f       	mov	r23, r22
     b76:	05 c0       	rjmp	.+10     	; 0xb82 <__floatsisf+0x5e>
     b78:	66 23       	and	r22, r22
     b7a:	71 f0       	breq	.+28     	; 0xb98 <__floatsisf+0x74>
     b7c:	96 e8       	ldi	r25, 0x86	; 134
     b7e:	86 2f       	mov	r24, r22
     b80:	70 e0       	ldi	r23, 0x00	; 0
     b82:	60 e0       	ldi	r22, 0x00	; 0
     b84:	2a f0       	brmi	.+10     	; 0xb90 <__floatsisf+0x6c>
     b86:	9a 95       	dec	r25
     b88:	66 0f       	add	r22, r22
     b8a:	77 1f       	adc	r23, r23
     b8c:	88 1f       	adc	r24, r24
     b8e:	da f7       	brpl	.-10     	; 0xb86 <__floatsisf+0x62>
     b90:	88 0f       	add	r24, r24
     b92:	96 95       	lsr	r25
     b94:	87 95       	ror	r24
     b96:	97 f9       	bld	r25, 7
     b98:	08 95       	ret

00000b9a <__fp_inf>:
     b9a:	97 f9       	bld	r25, 7
     b9c:	9f 67       	ori	r25, 0x7F	; 127
     b9e:	80 e8       	ldi	r24, 0x80	; 128
     ba0:	70 e0       	ldi	r23, 0x00	; 0
     ba2:	60 e0       	ldi	r22, 0x00	; 0
     ba4:	08 95       	ret

00000ba6 <__fp_nan>:
     ba6:	9f ef       	ldi	r25, 0xFF	; 255
     ba8:	80 ec       	ldi	r24, 0xC0	; 192
     baa:	08 95       	ret

00000bac <__fp_pscA>:
     bac:	00 24       	eor	r0, r0
     bae:	0a 94       	dec	r0
     bb0:	16 16       	cp	r1, r22
     bb2:	17 06       	cpc	r1, r23
     bb4:	18 06       	cpc	r1, r24
     bb6:	09 06       	cpc	r0, r25
     bb8:	08 95       	ret

00000bba <__fp_pscB>:
     bba:	00 24       	eor	r0, r0
     bbc:	0a 94       	dec	r0
     bbe:	12 16       	cp	r1, r18
     bc0:	13 06       	cpc	r1, r19
     bc2:	14 06       	cpc	r1, r20
     bc4:	05 06       	cpc	r0, r21
     bc6:	08 95       	ret

00000bc8 <__fp_round>:
     bc8:	09 2e       	mov	r0, r25
     bca:	03 94       	inc	r0
     bcc:	00 0c       	add	r0, r0
     bce:	11 f4       	brne	.+4      	; 0xbd4 <__fp_round+0xc>
     bd0:	88 23       	and	r24, r24
     bd2:	52 f0       	brmi	.+20     	; 0xbe8 <__fp_round+0x20>
     bd4:	bb 0f       	add	r27, r27
     bd6:	40 f4       	brcc	.+16     	; 0xbe8 <__fp_round+0x20>
     bd8:	bf 2b       	or	r27, r31
     bda:	11 f4       	brne	.+4      	; 0xbe0 <__fp_round+0x18>
     bdc:	60 ff       	sbrs	r22, 0
     bde:	04 c0       	rjmp	.+8      	; 0xbe8 <__fp_round+0x20>
     be0:	6f 5f       	subi	r22, 0xFF	; 255
     be2:	7f 4f       	sbci	r23, 0xFF	; 255
     be4:	8f 4f       	sbci	r24, 0xFF	; 255
     be6:	9f 4f       	sbci	r25, 0xFF	; 255
     be8:	08 95       	ret

00000bea <__fp_split3>:
     bea:	57 fd       	sbrc	r21, 7
     bec:	90 58       	subi	r25, 0x80	; 128
     bee:	44 0f       	add	r20, r20
     bf0:	55 1f       	adc	r21, r21
     bf2:	59 f0       	breq	.+22     	; 0xc0a <__fp_splitA+0x10>
     bf4:	5f 3f       	cpi	r21, 0xFF	; 255
     bf6:	71 f0       	breq	.+28     	; 0xc14 <__fp_splitA+0x1a>
     bf8:	47 95       	ror	r20

00000bfa <__fp_splitA>:
     bfa:	88 0f       	add	r24, r24
     bfc:	97 fb       	bst	r25, 7
     bfe:	99 1f       	adc	r25, r25
     c00:	61 f0       	breq	.+24     	; 0xc1a <__fp_splitA+0x20>
     c02:	9f 3f       	cpi	r25, 0xFF	; 255
     c04:	79 f0       	breq	.+30     	; 0xc24 <__fp_splitA+0x2a>
     c06:	87 95       	ror	r24
     c08:	08 95       	ret
     c0a:	12 16       	cp	r1, r18
     c0c:	13 06       	cpc	r1, r19
     c0e:	14 06       	cpc	r1, r20
     c10:	55 1f       	adc	r21, r21
     c12:	f2 cf       	rjmp	.-28     	; 0xbf8 <__fp_split3+0xe>
     c14:	46 95       	lsr	r20
     c16:	f1 df       	rcall	.-30     	; 0xbfa <__fp_splitA>
     c18:	08 c0       	rjmp	.+16     	; 0xc2a <__fp_splitA+0x30>
     c1a:	16 16       	cp	r1, r22
     c1c:	17 06       	cpc	r1, r23
     c1e:	18 06       	cpc	r1, r24
     c20:	99 1f       	adc	r25, r25
     c22:	f1 cf       	rjmp	.-30     	; 0xc06 <__fp_splitA+0xc>
     c24:	86 95       	lsr	r24
     c26:	71 05       	cpc	r23, r1
     c28:	61 05       	cpc	r22, r1
     c2a:	08 94       	sec
     c2c:	08 95       	ret

00000c2e <__fp_zero>:
     c2e:	e8 94       	clt

00000c30 <__fp_szero>:
     c30:	bb 27       	eor	r27, r27
     c32:	66 27       	eor	r22, r22
     c34:	77 27       	eor	r23, r23
     c36:	cb 01       	movw	r24, r22
     c38:	97 f9       	bld	r25, 7
     c3a:	08 95       	ret

00000c3c <__mulsf3>:
     c3c:	0e 94 31 06 	call	0xc62	; 0xc62 <__mulsf3x>
     c40:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_round>
     c44:	0e 94 d6 05 	call	0xbac	; 0xbac <__fp_pscA>
     c48:	38 f0       	brcs	.+14     	; 0xc58 <__mulsf3+0x1c>
     c4a:	0e 94 dd 05 	call	0xbba	; 0xbba <__fp_pscB>
     c4e:	20 f0       	brcs	.+8      	; 0xc58 <__mulsf3+0x1c>
     c50:	95 23       	and	r25, r21
     c52:	11 f0       	breq	.+4      	; 0xc58 <__mulsf3+0x1c>
     c54:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_inf>
     c58:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__fp_nan>
     c5c:	11 24       	eor	r1, r1
     c5e:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__fp_szero>

00000c62 <__mulsf3x>:
     c62:	0e 94 f5 05 	call	0xbea	; 0xbea <__fp_split3>
     c66:	70 f3       	brcs	.-36     	; 0xc44 <__mulsf3+0x8>

00000c68 <__mulsf3_pse>:
     c68:	95 9f       	mul	r25, r21
     c6a:	c1 f3       	breq	.-16     	; 0xc5c <__mulsf3+0x20>
     c6c:	95 0f       	add	r25, r21
     c6e:	50 e0       	ldi	r21, 0x00	; 0
     c70:	55 1f       	adc	r21, r21
     c72:	62 9f       	mul	r22, r18
     c74:	f0 01       	movw	r30, r0
     c76:	72 9f       	mul	r23, r18
     c78:	bb 27       	eor	r27, r27
     c7a:	f0 0d       	add	r31, r0
     c7c:	b1 1d       	adc	r27, r1
     c7e:	63 9f       	mul	r22, r19
     c80:	aa 27       	eor	r26, r26
     c82:	f0 0d       	add	r31, r0
     c84:	b1 1d       	adc	r27, r1
     c86:	aa 1f       	adc	r26, r26
     c88:	64 9f       	mul	r22, r20
     c8a:	66 27       	eor	r22, r22
     c8c:	b0 0d       	add	r27, r0
     c8e:	a1 1d       	adc	r26, r1
     c90:	66 1f       	adc	r22, r22
     c92:	82 9f       	mul	r24, r18
     c94:	22 27       	eor	r18, r18
     c96:	b0 0d       	add	r27, r0
     c98:	a1 1d       	adc	r26, r1
     c9a:	62 1f       	adc	r22, r18
     c9c:	73 9f       	mul	r23, r19
     c9e:	b0 0d       	add	r27, r0
     ca0:	a1 1d       	adc	r26, r1
     ca2:	62 1f       	adc	r22, r18
     ca4:	83 9f       	mul	r24, r19
     ca6:	a0 0d       	add	r26, r0
     ca8:	61 1d       	adc	r22, r1
     caa:	22 1f       	adc	r18, r18
     cac:	74 9f       	mul	r23, r20
     cae:	33 27       	eor	r19, r19
     cb0:	a0 0d       	add	r26, r0
     cb2:	61 1d       	adc	r22, r1
     cb4:	23 1f       	adc	r18, r19
     cb6:	84 9f       	mul	r24, r20
     cb8:	60 0d       	add	r22, r0
     cba:	21 1d       	adc	r18, r1
     cbc:	82 2f       	mov	r24, r18
     cbe:	76 2f       	mov	r23, r22
     cc0:	6a 2f       	mov	r22, r26
     cc2:	11 24       	eor	r1, r1
     cc4:	9f 57       	subi	r25, 0x7F	; 127
     cc6:	50 40       	sbci	r21, 0x00	; 0
     cc8:	9a f0       	brmi	.+38     	; 0xcf0 <__mulsf3_pse+0x88>
     cca:	f1 f0       	breq	.+60     	; 0xd08 <__mulsf3_pse+0xa0>
     ccc:	88 23       	and	r24, r24
     cce:	4a f0       	brmi	.+18     	; 0xce2 <__mulsf3_pse+0x7a>
     cd0:	ee 0f       	add	r30, r30
     cd2:	ff 1f       	adc	r31, r31
     cd4:	bb 1f       	adc	r27, r27
     cd6:	66 1f       	adc	r22, r22
     cd8:	77 1f       	adc	r23, r23
     cda:	88 1f       	adc	r24, r24
     cdc:	91 50       	subi	r25, 0x01	; 1
     cde:	50 40       	sbci	r21, 0x00	; 0
     ce0:	a9 f7       	brne	.-22     	; 0xccc <__mulsf3_pse+0x64>
     ce2:	9e 3f       	cpi	r25, 0xFE	; 254
     ce4:	51 05       	cpc	r21, r1
     ce6:	80 f0       	brcs	.+32     	; 0xd08 <__mulsf3_pse+0xa0>
     ce8:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_inf>
     cec:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__fp_szero>
     cf0:	5f 3f       	cpi	r21, 0xFF	; 255
     cf2:	e4 f3       	brlt	.-8      	; 0xcec <__mulsf3_pse+0x84>
     cf4:	98 3e       	cpi	r25, 0xE8	; 232
     cf6:	d4 f3       	brlt	.-12     	; 0xcec <__mulsf3_pse+0x84>
     cf8:	86 95       	lsr	r24
     cfa:	77 95       	ror	r23
     cfc:	67 95       	ror	r22
     cfe:	b7 95       	ror	r27
     d00:	f7 95       	ror	r31
     d02:	e7 95       	ror	r30
     d04:	9f 5f       	subi	r25, 0xFF	; 255
     d06:	c1 f7       	brne	.-16     	; 0xcf8 <__mulsf3_pse+0x90>
     d08:	fe 2b       	or	r31, r30
     d0a:	88 0f       	add	r24, r24
     d0c:	91 1d       	adc	r25, r1
     d0e:	96 95       	lsr	r25
     d10:	87 95       	ror	r24
     d12:	97 f9       	bld	r25, 7
     d14:	08 95       	ret

00000d16 <__muluhisi3>:
     d16:	0e 94 96 06 	call	0xd2c	; 0xd2c <__umulhisi3>
     d1a:	a5 9f       	mul	r26, r21
     d1c:	90 0d       	add	r25, r0
     d1e:	b4 9f       	mul	r27, r20
     d20:	90 0d       	add	r25, r0
     d22:	a4 9f       	mul	r26, r20
     d24:	80 0d       	add	r24, r0
     d26:	91 1d       	adc	r25, r1
     d28:	11 24       	eor	r1, r1
     d2a:	08 95       	ret

00000d2c <__umulhisi3>:
     d2c:	a2 9f       	mul	r26, r18
     d2e:	b0 01       	movw	r22, r0
     d30:	b3 9f       	mul	r27, r19
     d32:	c0 01       	movw	r24, r0
     d34:	a3 9f       	mul	r26, r19
     d36:	70 0d       	add	r23, r0
     d38:	81 1d       	adc	r24, r1
     d3a:	11 24       	eor	r1, r1
     d3c:	91 1d       	adc	r25, r1
     d3e:	b2 9f       	mul	r27, r18
     d40:	70 0d       	add	r23, r0
     d42:	81 1d       	adc	r24, r1
     d44:	11 24       	eor	r1, r1
     d46:	91 1d       	adc	r25, r1
     d48:	08 95       	ret

00000d4a <sprintf>:
     d4a:	ae e0       	ldi	r26, 0x0E	; 14
     d4c:	b0 e0       	ldi	r27, 0x00	; 0
     d4e:	eb ea       	ldi	r30, 0xAB	; 171
     d50:	f6 e0       	ldi	r31, 0x06	; 6
     d52:	0c 94 66 09 	jmp	0x12cc	; 0x12cc <__prologue_saves__+0x1c>
     d56:	0d 89       	ldd	r16, Y+21	; 0x15
     d58:	1e 89       	ldd	r17, Y+22	; 0x16
     d5a:	86 e0       	ldi	r24, 0x06	; 6
     d5c:	8c 83       	std	Y+4, r24	; 0x04
     d5e:	1a 83       	std	Y+2, r17	; 0x02
     d60:	09 83       	std	Y+1, r16	; 0x01
     d62:	8f ef       	ldi	r24, 0xFF	; 255
     d64:	9f e7       	ldi	r25, 0x7F	; 127
     d66:	9e 83       	std	Y+6, r25	; 0x06
     d68:	8d 83       	std	Y+5, r24	; 0x05
     d6a:	ae 01       	movw	r20, r28
     d6c:	47 5e       	subi	r20, 0xE7	; 231
     d6e:	5f 4f       	sbci	r21, 0xFF	; 255
     d70:	6f 89       	ldd	r22, Y+23	; 0x17
     d72:	78 8d       	ldd	r23, Y+24	; 0x18
     d74:	ce 01       	movw	r24, r28
     d76:	01 96       	adiw	r24, 0x01	; 1
     d78:	0e 94 c7 06 	call	0xd8e	; 0xd8e <vfprintf>
     d7c:	ef 81       	ldd	r30, Y+7	; 0x07
     d7e:	f8 85       	ldd	r31, Y+8	; 0x08
     d80:	e0 0f       	add	r30, r16
     d82:	f1 1f       	adc	r31, r17
     d84:	10 82       	st	Z, r1
     d86:	2e 96       	adiw	r28, 0x0e	; 14
     d88:	e4 e0       	ldi	r30, 0x04	; 4
     d8a:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__epilogue_restores__+0x1c>

00000d8e <vfprintf>:
     d8e:	ab e0       	ldi	r26, 0x0B	; 11
     d90:	b0 e0       	ldi	r27, 0x00	; 0
     d92:	ed ec       	ldi	r30, 0xCD	; 205
     d94:	f6 e0       	ldi	r31, 0x06	; 6
     d96:	0c 94 58 09 	jmp	0x12b0	; 0x12b0 <__prologue_saves__>
     d9a:	6c 01       	movw	r12, r24
     d9c:	7b 01       	movw	r14, r22
     d9e:	8a 01       	movw	r16, r20
     da0:	fc 01       	movw	r30, r24
     da2:	17 82       	std	Z+7, r1	; 0x07
     da4:	16 82       	std	Z+6, r1	; 0x06
     da6:	83 81       	ldd	r24, Z+3	; 0x03
     da8:	81 ff       	sbrs	r24, 1
     daa:	cc c1       	rjmp	.+920    	; 0x1144 <vfprintf+0x3b6>
     dac:	ce 01       	movw	r24, r28
     dae:	01 96       	adiw	r24, 0x01	; 1
     db0:	3c 01       	movw	r6, r24
     db2:	f6 01       	movw	r30, r12
     db4:	93 81       	ldd	r25, Z+3	; 0x03
     db6:	f7 01       	movw	r30, r14
     db8:	93 fd       	sbrc	r25, 3
     dba:	85 91       	lpm	r24, Z+
     dbc:	93 ff       	sbrs	r25, 3
     dbe:	81 91       	ld	r24, Z+
     dc0:	7f 01       	movw	r14, r30
     dc2:	88 23       	and	r24, r24
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <vfprintf+0x3a>
     dc6:	ba c1       	rjmp	.+884    	; 0x113c <vfprintf+0x3ae>
     dc8:	85 32       	cpi	r24, 0x25	; 37
     dca:	39 f4       	brne	.+14     	; 0xdda <vfprintf+0x4c>
     dcc:	93 fd       	sbrc	r25, 3
     dce:	85 91       	lpm	r24, Z+
     dd0:	93 ff       	sbrs	r25, 3
     dd2:	81 91       	ld	r24, Z+
     dd4:	7f 01       	movw	r14, r30
     dd6:	85 32       	cpi	r24, 0x25	; 37
     dd8:	29 f4       	brne	.+10     	; 0xde4 <vfprintf+0x56>
     dda:	b6 01       	movw	r22, r12
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	0e 94 be 08 	call	0x117c	; 0x117c <fputc>
     de2:	e7 cf       	rjmp	.-50     	; 0xdb2 <vfprintf+0x24>
     de4:	91 2c       	mov	r9, r1
     de6:	21 2c       	mov	r2, r1
     de8:	31 2c       	mov	r3, r1
     dea:	ff e1       	ldi	r31, 0x1F	; 31
     dec:	f3 15       	cp	r31, r3
     dee:	d8 f0       	brcs	.+54     	; 0xe26 <vfprintf+0x98>
     df0:	8b 32       	cpi	r24, 0x2B	; 43
     df2:	79 f0       	breq	.+30     	; 0xe12 <vfprintf+0x84>
     df4:	38 f4       	brcc	.+14     	; 0xe04 <vfprintf+0x76>
     df6:	80 32       	cpi	r24, 0x20	; 32
     df8:	79 f0       	breq	.+30     	; 0xe18 <vfprintf+0x8a>
     dfa:	83 32       	cpi	r24, 0x23	; 35
     dfc:	a1 f4       	brne	.+40     	; 0xe26 <vfprintf+0x98>
     dfe:	23 2d       	mov	r18, r3
     e00:	20 61       	ori	r18, 0x10	; 16
     e02:	1d c0       	rjmp	.+58     	; 0xe3e <vfprintf+0xb0>
     e04:	8d 32       	cpi	r24, 0x2D	; 45
     e06:	61 f0       	breq	.+24     	; 0xe20 <vfprintf+0x92>
     e08:	80 33       	cpi	r24, 0x30	; 48
     e0a:	69 f4       	brne	.+26     	; 0xe26 <vfprintf+0x98>
     e0c:	23 2d       	mov	r18, r3
     e0e:	21 60       	ori	r18, 0x01	; 1
     e10:	16 c0       	rjmp	.+44     	; 0xe3e <vfprintf+0xb0>
     e12:	83 2d       	mov	r24, r3
     e14:	82 60       	ori	r24, 0x02	; 2
     e16:	38 2e       	mov	r3, r24
     e18:	e3 2d       	mov	r30, r3
     e1a:	e4 60       	ori	r30, 0x04	; 4
     e1c:	3e 2e       	mov	r3, r30
     e1e:	2a c0       	rjmp	.+84     	; 0xe74 <vfprintf+0xe6>
     e20:	f3 2d       	mov	r31, r3
     e22:	f8 60       	ori	r31, 0x08	; 8
     e24:	1d c0       	rjmp	.+58     	; 0xe60 <vfprintf+0xd2>
     e26:	37 fc       	sbrc	r3, 7
     e28:	2d c0       	rjmp	.+90     	; 0xe84 <vfprintf+0xf6>
     e2a:	20 ed       	ldi	r18, 0xD0	; 208
     e2c:	28 0f       	add	r18, r24
     e2e:	2a 30       	cpi	r18, 0x0A	; 10
     e30:	40 f0       	brcs	.+16     	; 0xe42 <vfprintf+0xb4>
     e32:	8e 32       	cpi	r24, 0x2E	; 46
     e34:	b9 f4       	brne	.+46     	; 0xe64 <vfprintf+0xd6>
     e36:	36 fc       	sbrc	r3, 6
     e38:	81 c1       	rjmp	.+770    	; 0x113c <vfprintf+0x3ae>
     e3a:	23 2d       	mov	r18, r3
     e3c:	20 64       	ori	r18, 0x40	; 64
     e3e:	32 2e       	mov	r3, r18
     e40:	19 c0       	rjmp	.+50     	; 0xe74 <vfprintf+0xe6>
     e42:	36 fe       	sbrs	r3, 6
     e44:	06 c0       	rjmp	.+12     	; 0xe52 <vfprintf+0xc4>
     e46:	8a e0       	ldi	r24, 0x0A	; 10
     e48:	98 9e       	mul	r9, r24
     e4a:	20 0d       	add	r18, r0
     e4c:	11 24       	eor	r1, r1
     e4e:	92 2e       	mov	r9, r18
     e50:	11 c0       	rjmp	.+34     	; 0xe74 <vfprintf+0xe6>
     e52:	ea e0       	ldi	r30, 0x0A	; 10
     e54:	2e 9e       	mul	r2, r30
     e56:	20 0d       	add	r18, r0
     e58:	11 24       	eor	r1, r1
     e5a:	22 2e       	mov	r2, r18
     e5c:	f3 2d       	mov	r31, r3
     e5e:	f0 62       	ori	r31, 0x20	; 32
     e60:	3f 2e       	mov	r3, r31
     e62:	08 c0       	rjmp	.+16     	; 0xe74 <vfprintf+0xe6>
     e64:	8c 36       	cpi	r24, 0x6C	; 108
     e66:	21 f4       	brne	.+8      	; 0xe70 <vfprintf+0xe2>
     e68:	83 2d       	mov	r24, r3
     e6a:	80 68       	ori	r24, 0x80	; 128
     e6c:	38 2e       	mov	r3, r24
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <vfprintf+0xe6>
     e70:	88 36       	cpi	r24, 0x68	; 104
     e72:	41 f4       	brne	.+16     	; 0xe84 <vfprintf+0xf6>
     e74:	f7 01       	movw	r30, r14
     e76:	93 fd       	sbrc	r25, 3
     e78:	85 91       	lpm	r24, Z+
     e7a:	93 ff       	sbrs	r25, 3
     e7c:	81 91       	ld	r24, Z+
     e7e:	7f 01       	movw	r14, r30
     e80:	81 11       	cpse	r24, r1
     e82:	b3 cf       	rjmp	.-154    	; 0xdea <vfprintf+0x5c>
     e84:	98 2f       	mov	r25, r24
     e86:	9f 7d       	andi	r25, 0xDF	; 223
     e88:	95 54       	subi	r25, 0x45	; 69
     e8a:	93 30       	cpi	r25, 0x03	; 3
     e8c:	28 f4       	brcc	.+10     	; 0xe98 <vfprintf+0x10a>
     e8e:	0c 5f       	subi	r16, 0xFC	; 252
     e90:	1f 4f       	sbci	r17, 0xFF	; 255
     e92:	9f e3       	ldi	r25, 0x3F	; 63
     e94:	99 83       	std	Y+1, r25	; 0x01
     e96:	0d c0       	rjmp	.+26     	; 0xeb2 <vfprintf+0x124>
     e98:	83 36       	cpi	r24, 0x63	; 99
     e9a:	31 f0       	breq	.+12     	; 0xea8 <vfprintf+0x11a>
     e9c:	83 37       	cpi	r24, 0x73	; 115
     e9e:	71 f0       	breq	.+28     	; 0xebc <vfprintf+0x12e>
     ea0:	83 35       	cpi	r24, 0x53	; 83
     ea2:	09 f0       	breq	.+2      	; 0xea6 <vfprintf+0x118>
     ea4:	59 c0       	rjmp	.+178    	; 0xf58 <vfprintf+0x1ca>
     ea6:	21 c0       	rjmp	.+66     	; 0xeea <vfprintf+0x15c>
     ea8:	f8 01       	movw	r30, r16
     eaa:	80 81       	ld	r24, Z
     eac:	89 83       	std	Y+1, r24	; 0x01
     eae:	0e 5f       	subi	r16, 0xFE	; 254
     eb0:	1f 4f       	sbci	r17, 0xFF	; 255
     eb2:	88 24       	eor	r8, r8
     eb4:	83 94       	inc	r8
     eb6:	91 2c       	mov	r9, r1
     eb8:	53 01       	movw	r10, r6
     eba:	13 c0       	rjmp	.+38     	; 0xee2 <vfprintf+0x154>
     ebc:	28 01       	movw	r4, r16
     ebe:	f2 e0       	ldi	r31, 0x02	; 2
     ec0:	4f 0e       	add	r4, r31
     ec2:	51 1c       	adc	r5, r1
     ec4:	f8 01       	movw	r30, r16
     ec6:	a0 80       	ld	r10, Z
     ec8:	b1 80       	ldd	r11, Z+1	; 0x01
     eca:	36 fe       	sbrs	r3, 6
     ecc:	03 c0       	rjmp	.+6      	; 0xed4 <vfprintf+0x146>
     ece:	69 2d       	mov	r22, r9
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <vfprintf+0x14a>
     ed4:	6f ef       	ldi	r22, 0xFF	; 255
     ed6:	7f ef       	ldi	r23, 0xFF	; 255
     ed8:	c5 01       	movw	r24, r10
     eda:	0e 94 b3 08 	call	0x1166	; 0x1166 <strnlen>
     ede:	4c 01       	movw	r8, r24
     ee0:	82 01       	movw	r16, r4
     ee2:	f3 2d       	mov	r31, r3
     ee4:	ff 77       	andi	r31, 0x7F	; 127
     ee6:	3f 2e       	mov	r3, r31
     ee8:	16 c0       	rjmp	.+44     	; 0xf16 <vfprintf+0x188>
     eea:	28 01       	movw	r4, r16
     eec:	22 e0       	ldi	r18, 0x02	; 2
     eee:	42 0e       	add	r4, r18
     ef0:	51 1c       	adc	r5, r1
     ef2:	f8 01       	movw	r30, r16
     ef4:	a0 80       	ld	r10, Z
     ef6:	b1 80       	ldd	r11, Z+1	; 0x01
     ef8:	36 fe       	sbrs	r3, 6
     efa:	03 c0       	rjmp	.+6      	; 0xf02 <vfprintf+0x174>
     efc:	69 2d       	mov	r22, r9
     efe:	70 e0       	ldi	r23, 0x00	; 0
     f00:	02 c0       	rjmp	.+4      	; 0xf06 <vfprintf+0x178>
     f02:	6f ef       	ldi	r22, 0xFF	; 255
     f04:	7f ef       	ldi	r23, 0xFF	; 255
     f06:	c5 01       	movw	r24, r10
     f08:	0e 94 a8 08 	call	0x1150	; 0x1150 <strnlen_P>
     f0c:	4c 01       	movw	r8, r24
     f0e:	f3 2d       	mov	r31, r3
     f10:	f0 68       	ori	r31, 0x80	; 128
     f12:	3f 2e       	mov	r3, r31
     f14:	82 01       	movw	r16, r4
     f16:	33 fc       	sbrc	r3, 3
     f18:	1b c0       	rjmp	.+54     	; 0xf50 <vfprintf+0x1c2>
     f1a:	82 2d       	mov	r24, r2
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	88 16       	cp	r8, r24
     f20:	99 06       	cpc	r9, r25
     f22:	b0 f4       	brcc	.+44     	; 0xf50 <vfprintf+0x1c2>
     f24:	b6 01       	movw	r22, r12
     f26:	80 e2       	ldi	r24, 0x20	; 32
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	0e 94 be 08 	call	0x117c	; 0x117c <fputc>
     f2e:	2a 94       	dec	r2
     f30:	f4 cf       	rjmp	.-24     	; 0xf1a <vfprintf+0x18c>
     f32:	f5 01       	movw	r30, r10
     f34:	37 fc       	sbrc	r3, 7
     f36:	85 91       	lpm	r24, Z+
     f38:	37 fe       	sbrs	r3, 7
     f3a:	81 91       	ld	r24, Z+
     f3c:	5f 01       	movw	r10, r30
     f3e:	b6 01       	movw	r22, r12
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	0e 94 be 08 	call	0x117c	; 0x117c <fputc>
     f46:	21 10       	cpse	r2, r1
     f48:	2a 94       	dec	r2
     f4a:	21 e0       	ldi	r18, 0x01	; 1
     f4c:	82 1a       	sub	r8, r18
     f4e:	91 08       	sbc	r9, r1
     f50:	81 14       	cp	r8, r1
     f52:	91 04       	cpc	r9, r1
     f54:	71 f7       	brne	.-36     	; 0xf32 <vfprintf+0x1a4>
     f56:	e8 c0       	rjmp	.+464    	; 0x1128 <vfprintf+0x39a>
     f58:	84 36       	cpi	r24, 0x64	; 100
     f5a:	11 f0       	breq	.+4      	; 0xf60 <vfprintf+0x1d2>
     f5c:	89 36       	cpi	r24, 0x69	; 105
     f5e:	41 f5       	brne	.+80     	; 0xfb0 <vfprintf+0x222>
     f60:	f8 01       	movw	r30, r16
     f62:	37 fe       	sbrs	r3, 7
     f64:	07 c0       	rjmp	.+14     	; 0xf74 <vfprintf+0x1e6>
     f66:	60 81       	ld	r22, Z
     f68:	71 81       	ldd	r23, Z+1	; 0x01
     f6a:	82 81       	ldd	r24, Z+2	; 0x02
     f6c:	93 81       	ldd	r25, Z+3	; 0x03
     f6e:	0c 5f       	subi	r16, 0xFC	; 252
     f70:	1f 4f       	sbci	r17, 0xFF	; 255
     f72:	08 c0       	rjmp	.+16     	; 0xf84 <vfprintf+0x1f6>
     f74:	60 81       	ld	r22, Z
     f76:	71 81       	ldd	r23, Z+1	; 0x01
     f78:	07 2e       	mov	r0, r23
     f7a:	00 0c       	add	r0, r0
     f7c:	88 0b       	sbc	r24, r24
     f7e:	99 0b       	sbc	r25, r25
     f80:	0e 5f       	subi	r16, 0xFE	; 254
     f82:	1f 4f       	sbci	r17, 0xFF	; 255
     f84:	f3 2d       	mov	r31, r3
     f86:	ff 76       	andi	r31, 0x6F	; 111
     f88:	3f 2e       	mov	r3, r31
     f8a:	97 ff       	sbrs	r25, 7
     f8c:	09 c0       	rjmp	.+18     	; 0xfa0 <vfprintf+0x212>
     f8e:	90 95       	com	r25
     f90:	80 95       	com	r24
     f92:	70 95       	com	r23
     f94:	61 95       	neg	r22
     f96:	7f 4f       	sbci	r23, 0xFF	; 255
     f98:	8f 4f       	sbci	r24, 0xFF	; 255
     f9a:	9f 4f       	sbci	r25, 0xFF	; 255
     f9c:	f0 68       	ori	r31, 0x80	; 128
     f9e:	3f 2e       	mov	r3, r31
     fa0:	2a e0       	ldi	r18, 0x0A	; 10
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	a3 01       	movw	r20, r6
     fa6:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__ultoa_invert>
     faa:	88 2e       	mov	r8, r24
     fac:	86 18       	sub	r8, r6
     fae:	45 c0       	rjmp	.+138    	; 0x103a <vfprintf+0x2ac>
     fb0:	85 37       	cpi	r24, 0x75	; 117
     fb2:	31 f4       	brne	.+12     	; 0xfc0 <vfprintf+0x232>
     fb4:	23 2d       	mov	r18, r3
     fb6:	2f 7e       	andi	r18, 0xEF	; 239
     fb8:	b2 2e       	mov	r11, r18
     fba:	2a e0       	ldi	r18, 0x0A	; 10
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	25 c0       	rjmp	.+74     	; 0x100a <vfprintf+0x27c>
     fc0:	93 2d       	mov	r25, r3
     fc2:	99 7f       	andi	r25, 0xF9	; 249
     fc4:	b9 2e       	mov	r11, r25
     fc6:	8f 36       	cpi	r24, 0x6F	; 111
     fc8:	c1 f0       	breq	.+48     	; 0xffa <vfprintf+0x26c>
     fca:	18 f4       	brcc	.+6      	; 0xfd2 <vfprintf+0x244>
     fcc:	88 35       	cpi	r24, 0x58	; 88
     fce:	79 f0       	breq	.+30     	; 0xfee <vfprintf+0x260>
     fd0:	b5 c0       	rjmp	.+362    	; 0x113c <vfprintf+0x3ae>
     fd2:	80 37       	cpi	r24, 0x70	; 112
     fd4:	19 f0       	breq	.+6      	; 0xfdc <vfprintf+0x24e>
     fd6:	88 37       	cpi	r24, 0x78	; 120
     fd8:	21 f0       	breq	.+8      	; 0xfe2 <vfprintf+0x254>
     fda:	b0 c0       	rjmp	.+352    	; 0x113c <vfprintf+0x3ae>
     fdc:	e9 2f       	mov	r30, r25
     fde:	e0 61       	ori	r30, 0x10	; 16
     fe0:	be 2e       	mov	r11, r30
     fe2:	b4 fe       	sbrs	r11, 4
     fe4:	0d c0       	rjmp	.+26     	; 0x1000 <vfprintf+0x272>
     fe6:	fb 2d       	mov	r31, r11
     fe8:	f4 60       	ori	r31, 0x04	; 4
     fea:	bf 2e       	mov	r11, r31
     fec:	09 c0       	rjmp	.+18     	; 0x1000 <vfprintf+0x272>
     fee:	34 fe       	sbrs	r3, 4
     ff0:	0a c0       	rjmp	.+20     	; 0x1006 <vfprintf+0x278>
     ff2:	29 2f       	mov	r18, r25
     ff4:	26 60       	ori	r18, 0x06	; 6
     ff6:	b2 2e       	mov	r11, r18
     ff8:	06 c0       	rjmp	.+12     	; 0x1006 <vfprintf+0x278>
     ffa:	28 e0       	ldi	r18, 0x08	; 8
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	05 c0       	rjmp	.+10     	; 0x100a <vfprintf+0x27c>
    1000:	20 e1       	ldi	r18, 0x10	; 16
    1002:	30 e0       	ldi	r19, 0x00	; 0
    1004:	02 c0       	rjmp	.+4      	; 0x100a <vfprintf+0x27c>
    1006:	20 e1       	ldi	r18, 0x10	; 16
    1008:	32 e0       	ldi	r19, 0x02	; 2
    100a:	f8 01       	movw	r30, r16
    100c:	b7 fe       	sbrs	r11, 7
    100e:	07 c0       	rjmp	.+14     	; 0x101e <vfprintf+0x290>
    1010:	60 81       	ld	r22, Z
    1012:	71 81       	ldd	r23, Z+1	; 0x01
    1014:	82 81       	ldd	r24, Z+2	; 0x02
    1016:	93 81       	ldd	r25, Z+3	; 0x03
    1018:	0c 5f       	subi	r16, 0xFC	; 252
    101a:	1f 4f       	sbci	r17, 0xFF	; 255
    101c:	06 c0       	rjmp	.+12     	; 0x102a <vfprintf+0x29c>
    101e:	60 81       	ld	r22, Z
    1020:	71 81       	ldd	r23, Z+1	; 0x01
    1022:	80 e0       	ldi	r24, 0x00	; 0
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	0e 5f       	subi	r16, 0xFE	; 254
    1028:	1f 4f       	sbci	r17, 0xFF	; 255
    102a:	a3 01       	movw	r20, r6
    102c:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__ultoa_invert>
    1030:	88 2e       	mov	r8, r24
    1032:	86 18       	sub	r8, r6
    1034:	fb 2d       	mov	r31, r11
    1036:	ff 77       	andi	r31, 0x7F	; 127
    1038:	3f 2e       	mov	r3, r31
    103a:	36 fe       	sbrs	r3, 6
    103c:	0d c0       	rjmp	.+26     	; 0x1058 <vfprintf+0x2ca>
    103e:	23 2d       	mov	r18, r3
    1040:	2e 7f       	andi	r18, 0xFE	; 254
    1042:	a2 2e       	mov	r10, r18
    1044:	89 14       	cp	r8, r9
    1046:	58 f4       	brcc	.+22     	; 0x105e <vfprintf+0x2d0>
    1048:	34 fe       	sbrs	r3, 4
    104a:	0b c0       	rjmp	.+22     	; 0x1062 <vfprintf+0x2d4>
    104c:	32 fc       	sbrc	r3, 2
    104e:	09 c0       	rjmp	.+18     	; 0x1062 <vfprintf+0x2d4>
    1050:	83 2d       	mov	r24, r3
    1052:	8e 7e       	andi	r24, 0xEE	; 238
    1054:	a8 2e       	mov	r10, r24
    1056:	05 c0       	rjmp	.+10     	; 0x1062 <vfprintf+0x2d4>
    1058:	b8 2c       	mov	r11, r8
    105a:	a3 2c       	mov	r10, r3
    105c:	03 c0       	rjmp	.+6      	; 0x1064 <vfprintf+0x2d6>
    105e:	b8 2c       	mov	r11, r8
    1060:	01 c0       	rjmp	.+2      	; 0x1064 <vfprintf+0x2d6>
    1062:	b9 2c       	mov	r11, r9
    1064:	a4 fe       	sbrs	r10, 4
    1066:	0f c0       	rjmp	.+30     	; 0x1086 <vfprintf+0x2f8>
    1068:	fe 01       	movw	r30, r28
    106a:	e8 0d       	add	r30, r8
    106c:	f1 1d       	adc	r31, r1
    106e:	80 81       	ld	r24, Z
    1070:	80 33       	cpi	r24, 0x30	; 48
    1072:	21 f4       	brne	.+8      	; 0x107c <vfprintf+0x2ee>
    1074:	9a 2d       	mov	r25, r10
    1076:	99 7e       	andi	r25, 0xE9	; 233
    1078:	a9 2e       	mov	r10, r25
    107a:	09 c0       	rjmp	.+18     	; 0x108e <vfprintf+0x300>
    107c:	a2 fe       	sbrs	r10, 2
    107e:	06 c0       	rjmp	.+12     	; 0x108c <vfprintf+0x2fe>
    1080:	b3 94       	inc	r11
    1082:	b3 94       	inc	r11
    1084:	04 c0       	rjmp	.+8      	; 0x108e <vfprintf+0x300>
    1086:	8a 2d       	mov	r24, r10
    1088:	86 78       	andi	r24, 0x86	; 134
    108a:	09 f0       	breq	.+2      	; 0x108e <vfprintf+0x300>
    108c:	b3 94       	inc	r11
    108e:	a3 fc       	sbrc	r10, 3
    1090:	11 c0       	rjmp	.+34     	; 0x10b4 <vfprintf+0x326>
    1092:	a0 fe       	sbrs	r10, 0
    1094:	06 c0       	rjmp	.+12     	; 0x10a2 <vfprintf+0x314>
    1096:	b2 14       	cp	r11, r2
    1098:	88 f4       	brcc	.+34     	; 0x10bc <vfprintf+0x32e>
    109a:	28 0c       	add	r2, r8
    109c:	92 2c       	mov	r9, r2
    109e:	9b 18       	sub	r9, r11
    10a0:	0e c0       	rjmp	.+28     	; 0x10be <vfprintf+0x330>
    10a2:	b2 14       	cp	r11, r2
    10a4:	60 f4       	brcc	.+24     	; 0x10be <vfprintf+0x330>
    10a6:	b6 01       	movw	r22, r12
    10a8:	80 e2       	ldi	r24, 0x20	; 32
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	0e 94 be 08 	call	0x117c	; 0x117c <fputc>
    10b0:	b3 94       	inc	r11
    10b2:	f7 cf       	rjmp	.-18     	; 0x10a2 <vfprintf+0x314>
    10b4:	b2 14       	cp	r11, r2
    10b6:	18 f4       	brcc	.+6      	; 0x10be <vfprintf+0x330>
    10b8:	2b 18       	sub	r2, r11
    10ba:	02 c0       	rjmp	.+4      	; 0x10c0 <vfprintf+0x332>
    10bc:	98 2c       	mov	r9, r8
    10be:	21 2c       	mov	r2, r1
    10c0:	a4 fe       	sbrs	r10, 4
    10c2:	10 c0       	rjmp	.+32     	; 0x10e4 <vfprintf+0x356>
    10c4:	b6 01       	movw	r22, r12
    10c6:	80 e3       	ldi	r24, 0x30	; 48
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	0e 94 be 08 	call	0x117c	; 0x117c <fputc>
    10ce:	a2 fe       	sbrs	r10, 2
    10d0:	17 c0       	rjmp	.+46     	; 0x1100 <vfprintf+0x372>
    10d2:	a1 fc       	sbrc	r10, 1
    10d4:	03 c0       	rjmp	.+6      	; 0x10dc <vfprintf+0x34e>
    10d6:	88 e7       	ldi	r24, 0x78	; 120
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	02 c0       	rjmp	.+4      	; 0x10e0 <vfprintf+0x352>
    10dc:	88 e5       	ldi	r24, 0x58	; 88
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	b6 01       	movw	r22, r12
    10e2:	0c c0       	rjmp	.+24     	; 0x10fc <vfprintf+0x36e>
    10e4:	8a 2d       	mov	r24, r10
    10e6:	86 78       	andi	r24, 0x86	; 134
    10e8:	59 f0       	breq	.+22     	; 0x1100 <vfprintf+0x372>
    10ea:	a1 fe       	sbrs	r10, 1
    10ec:	02 c0       	rjmp	.+4      	; 0x10f2 <vfprintf+0x364>
    10ee:	8b e2       	ldi	r24, 0x2B	; 43
    10f0:	01 c0       	rjmp	.+2      	; 0x10f4 <vfprintf+0x366>
    10f2:	80 e2       	ldi	r24, 0x20	; 32
    10f4:	a7 fc       	sbrc	r10, 7
    10f6:	8d e2       	ldi	r24, 0x2D	; 45
    10f8:	b6 01       	movw	r22, r12
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 be 08 	call	0x117c	; 0x117c <fputc>
    1100:	89 14       	cp	r8, r9
    1102:	38 f4       	brcc	.+14     	; 0x1112 <vfprintf+0x384>
    1104:	b6 01       	movw	r22, r12
    1106:	80 e3       	ldi	r24, 0x30	; 48
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	0e 94 be 08 	call	0x117c	; 0x117c <fputc>
    110e:	9a 94       	dec	r9
    1110:	f7 cf       	rjmp	.-18     	; 0x1100 <vfprintf+0x372>
    1112:	8a 94       	dec	r8
    1114:	f3 01       	movw	r30, r6
    1116:	e8 0d       	add	r30, r8
    1118:	f1 1d       	adc	r31, r1
    111a:	80 81       	ld	r24, Z
    111c:	b6 01       	movw	r22, r12
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	0e 94 be 08 	call	0x117c	; 0x117c <fputc>
    1124:	81 10       	cpse	r8, r1
    1126:	f5 cf       	rjmp	.-22     	; 0x1112 <vfprintf+0x384>
    1128:	22 20       	and	r2, r2
    112a:	09 f4       	brne	.+2      	; 0x112e <vfprintf+0x3a0>
    112c:	42 ce       	rjmp	.-892    	; 0xdb2 <vfprintf+0x24>
    112e:	b6 01       	movw	r22, r12
    1130:	80 e2       	ldi	r24, 0x20	; 32
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	0e 94 be 08 	call	0x117c	; 0x117c <fputc>
    1138:	2a 94       	dec	r2
    113a:	f6 cf       	rjmp	.-20     	; 0x1128 <vfprintf+0x39a>
    113c:	f6 01       	movw	r30, r12
    113e:	86 81       	ldd	r24, Z+6	; 0x06
    1140:	97 81       	ldd	r25, Z+7	; 0x07
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <vfprintf+0x3ba>
    1144:	8f ef       	ldi	r24, 0xFF	; 255
    1146:	9f ef       	ldi	r25, 0xFF	; 255
    1148:	2b 96       	adiw	r28, 0x0b	; 11
    114a:	e2 e1       	ldi	r30, 0x12	; 18
    114c:	0c 94 74 09 	jmp	0x12e8	; 0x12e8 <__epilogue_restores__>

00001150 <strnlen_P>:
    1150:	fc 01       	movw	r30, r24
    1152:	05 90       	lpm	r0, Z+
    1154:	61 50       	subi	r22, 0x01	; 1
    1156:	70 40       	sbci	r23, 0x00	; 0
    1158:	01 10       	cpse	r0, r1
    115a:	d8 f7       	brcc	.-10     	; 0x1152 <strnlen_P+0x2>
    115c:	80 95       	com	r24
    115e:	90 95       	com	r25
    1160:	8e 0f       	add	r24, r30
    1162:	9f 1f       	adc	r25, r31
    1164:	08 95       	ret

00001166 <strnlen>:
    1166:	fc 01       	movw	r30, r24
    1168:	61 50       	subi	r22, 0x01	; 1
    116a:	70 40       	sbci	r23, 0x00	; 0
    116c:	01 90       	ld	r0, Z+
    116e:	01 10       	cpse	r0, r1
    1170:	d8 f7       	brcc	.-10     	; 0x1168 <strnlen+0x2>
    1172:	80 95       	com	r24
    1174:	90 95       	com	r25
    1176:	8e 0f       	add	r24, r30
    1178:	9f 1f       	adc	r25, r31
    117a:	08 95       	ret

0000117c <fputc>:
    117c:	0f 93       	push	r16
    117e:	1f 93       	push	r17
    1180:	cf 93       	push	r28
    1182:	df 93       	push	r29
    1184:	fb 01       	movw	r30, r22
    1186:	23 81       	ldd	r18, Z+3	; 0x03
    1188:	21 fd       	sbrc	r18, 1
    118a:	03 c0       	rjmp	.+6      	; 0x1192 <fputc+0x16>
    118c:	8f ef       	ldi	r24, 0xFF	; 255
    118e:	9f ef       	ldi	r25, 0xFF	; 255
    1190:	2c c0       	rjmp	.+88     	; 0x11ea <fputc+0x6e>
    1192:	22 ff       	sbrs	r18, 2
    1194:	16 c0       	rjmp	.+44     	; 0x11c2 <fputc+0x46>
    1196:	46 81       	ldd	r20, Z+6	; 0x06
    1198:	57 81       	ldd	r21, Z+7	; 0x07
    119a:	24 81       	ldd	r18, Z+4	; 0x04
    119c:	35 81       	ldd	r19, Z+5	; 0x05
    119e:	42 17       	cp	r20, r18
    11a0:	53 07       	cpc	r21, r19
    11a2:	44 f4       	brge	.+16     	; 0x11b4 <fputc+0x38>
    11a4:	a0 81       	ld	r26, Z
    11a6:	b1 81       	ldd	r27, Z+1	; 0x01
    11a8:	9d 01       	movw	r18, r26
    11aa:	2f 5f       	subi	r18, 0xFF	; 255
    11ac:	3f 4f       	sbci	r19, 0xFF	; 255
    11ae:	31 83       	std	Z+1, r19	; 0x01
    11b0:	20 83       	st	Z, r18
    11b2:	8c 93       	st	X, r24
    11b4:	26 81       	ldd	r18, Z+6	; 0x06
    11b6:	37 81       	ldd	r19, Z+7	; 0x07
    11b8:	2f 5f       	subi	r18, 0xFF	; 255
    11ba:	3f 4f       	sbci	r19, 0xFF	; 255
    11bc:	37 83       	std	Z+7, r19	; 0x07
    11be:	26 83       	std	Z+6, r18	; 0x06
    11c0:	14 c0       	rjmp	.+40     	; 0x11ea <fputc+0x6e>
    11c2:	8b 01       	movw	r16, r22
    11c4:	ec 01       	movw	r28, r24
    11c6:	fb 01       	movw	r30, r22
    11c8:	00 84       	ldd	r0, Z+8	; 0x08
    11ca:	f1 85       	ldd	r31, Z+9	; 0x09
    11cc:	e0 2d       	mov	r30, r0
    11ce:	09 95       	icall
    11d0:	89 2b       	or	r24, r25
    11d2:	e1 f6       	brne	.-72     	; 0x118c <fputc+0x10>
    11d4:	d8 01       	movw	r26, r16
    11d6:	16 96       	adiw	r26, 0x06	; 6
    11d8:	8d 91       	ld	r24, X+
    11da:	9c 91       	ld	r25, X
    11dc:	17 97       	sbiw	r26, 0x07	; 7
    11de:	01 96       	adiw	r24, 0x01	; 1
    11e0:	17 96       	adiw	r26, 0x07	; 7
    11e2:	9c 93       	st	X, r25
    11e4:	8e 93       	st	-X, r24
    11e6:	16 97       	sbiw	r26, 0x06	; 6
    11e8:	ce 01       	movw	r24, r28
    11ea:	df 91       	pop	r29
    11ec:	cf 91       	pop	r28
    11ee:	1f 91       	pop	r17
    11f0:	0f 91       	pop	r16
    11f2:	08 95       	ret

000011f4 <__ultoa_invert>:
    11f4:	fa 01       	movw	r30, r20
    11f6:	aa 27       	eor	r26, r26
    11f8:	28 30       	cpi	r18, 0x08	; 8
    11fa:	51 f1       	breq	.+84     	; 0x1250 <__ultoa_invert+0x5c>
    11fc:	20 31       	cpi	r18, 0x10	; 16
    11fe:	81 f1       	breq	.+96     	; 0x1260 <__ultoa_invert+0x6c>
    1200:	e8 94       	clt
    1202:	6f 93       	push	r22
    1204:	6e 7f       	andi	r22, 0xFE	; 254
    1206:	6e 5f       	subi	r22, 0xFE	; 254
    1208:	7f 4f       	sbci	r23, 0xFF	; 255
    120a:	8f 4f       	sbci	r24, 0xFF	; 255
    120c:	9f 4f       	sbci	r25, 0xFF	; 255
    120e:	af 4f       	sbci	r26, 0xFF	; 255
    1210:	b1 e0       	ldi	r27, 0x01	; 1
    1212:	3e d0       	rcall	.+124    	; 0x1290 <__ultoa_invert+0x9c>
    1214:	b4 e0       	ldi	r27, 0x04	; 4
    1216:	3c d0       	rcall	.+120    	; 0x1290 <__ultoa_invert+0x9c>
    1218:	67 0f       	add	r22, r23
    121a:	78 1f       	adc	r23, r24
    121c:	89 1f       	adc	r24, r25
    121e:	9a 1f       	adc	r25, r26
    1220:	a1 1d       	adc	r26, r1
    1222:	68 0f       	add	r22, r24
    1224:	79 1f       	adc	r23, r25
    1226:	8a 1f       	adc	r24, r26
    1228:	91 1d       	adc	r25, r1
    122a:	a1 1d       	adc	r26, r1
    122c:	6a 0f       	add	r22, r26
    122e:	71 1d       	adc	r23, r1
    1230:	81 1d       	adc	r24, r1
    1232:	91 1d       	adc	r25, r1
    1234:	a1 1d       	adc	r26, r1
    1236:	20 d0       	rcall	.+64     	; 0x1278 <__ultoa_invert+0x84>
    1238:	09 f4       	brne	.+2      	; 0x123c <__ultoa_invert+0x48>
    123a:	68 94       	set
    123c:	3f 91       	pop	r19
    123e:	2a e0       	ldi	r18, 0x0A	; 10
    1240:	26 9f       	mul	r18, r22
    1242:	11 24       	eor	r1, r1
    1244:	30 19       	sub	r19, r0
    1246:	30 5d       	subi	r19, 0xD0	; 208
    1248:	31 93       	st	Z+, r19
    124a:	de f6       	brtc	.-74     	; 0x1202 <__ultoa_invert+0xe>
    124c:	cf 01       	movw	r24, r30
    124e:	08 95       	ret
    1250:	46 2f       	mov	r20, r22
    1252:	47 70       	andi	r20, 0x07	; 7
    1254:	40 5d       	subi	r20, 0xD0	; 208
    1256:	41 93       	st	Z+, r20
    1258:	b3 e0       	ldi	r27, 0x03	; 3
    125a:	0f d0       	rcall	.+30     	; 0x127a <__ultoa_invert+0x86>
    125c:	c9 f7       	brne	.-14     	; 0x1250 <__ultoa_invert+0x5c>
    125e:	f6 cf       	rjmp	.-20     	; 0x124c <__ultoa_invert+0x58>
    1260:	46 2f       	mov	r20, r22
    1262:	4f 70       	andi	r20, 0x0F	; 15
    1264:	40 5d       	subi	r20, 0xD0	; 208
    1266:	4a 33       	cpi	r20, 0x3A	; 58
    1268:	18 f0       	brcs	.+6      	; 0x1270 <__ultoa_invert+0x7c>
    126a:	49 5d       	subi	r20, 0xD9	; 217
    126c:	31 fd       	sbrc	r19, 1
    126e:	40 52       	subi	r20, 0x20	; 32
    1270:	41 93       	st	Z+, r20
    1272:	02 d0       	rcall	.+4      	; 0x1278 <__ultoa_invert+0x84>
    1274:	a9 f7       	brne	.-22     	; 0x1260 <__ultoa_invert+0x6c>
    1276:	ea cf       	rjmp	.-44     	; 0x124c <__ultoa_invert+0x58>
    1278:	b4 e0       	ldi	r27, 0x04	; 4
    127a:	a6 95       	lsr	r26
    127c:	97 95       	ror	r25
    127e:	87 95       	ror	r24
    1280:	77 95       	ror	r23
    1282:	67 95       	ror	r22
    1284:	ba 95       	dec	r27
    1286:	c9 f7       	brne	.-14     	; 0x127a <__ultoa_invert+0x86>
    1288:	00 97       	sbiw	r24, 0x00	; 0
    128a:	61 05       	cpc	r22, r1
    128c:	71 05       	cpc	r23, r1
    128e:	08 95       	ret
    1290:	9b 01       	movw	r18, r22
    1292:	ac 01       	movw	r20, r24
    1294:	0a 2e       	mov	r0, r26
    1296:	06 94       	lsr	r0
    1298:	57 95       	ror	r21
    129a:	47 95       	ror	r20
    129c:	37 95       	ror	r19
    129e:	27 95       	ror	r18
    12a0:	ba 95       	dec	r27
    12a2:	c9 f7       	brne	.-14     	; 0x1296 <__ultoa_invert+0xa2>
    12a4:	62 0f       	add	r22, r18
    12a6:	73 1f       	adc	r23, r19
    12a8:	84 1f       	adc	r24, r20
    12aa:	95 1f       	adc	r25, r21
    12ac:	a0 1d       	adc	r26, r0
    12ae:	08 95       	ret

000012b0 <__prologue_saves__>:
    12b0:	2f 92       	push	r2
    12b2:	3f 92       	push	r3
    12b4:	4f 92       	push	r4
    12b6:	5f 92       	push	r5
    12b8:	6f 92       	push	r6
    12ba:	7f 92       	push	r7
    12bc:	8f 92       	push	r8
    12be:	9f 92       	push	r9
    12c0:	af 92       	push	r10
    12c2:	bf 92       	push	r11
    12c4:	cf 92       	push	r12
    12c6:	df 92       	push	r13
    12c8:	ef 92       	push	r14
    12ca:	ff 92       	push	r15
    12cc:	0f 93       	push	r16
    12ce:	1f 93       	push	r17
    12d0:	cf 93       	push	r28
    12d2:	df 93       	push	r29
    12d4:	cd b7       	in	r28, 0x3d	; 61
    12d6:	de b7       	in	r29, 0x3e	; 62
    12d8:	ca 1b       	sub	r28, r26
    12da:	db 0b       	sbc	r29, r27
    12dc:	0f b6       	in	r0, 0x3f	; 63
    12de:	f8 94       	cli
    12e0:	de bf       	out	0x3e, r29	; 62
    12e2:	0f be       	out	0x3f, r0	; 63
    12e4:	cd bf       	out	0x3d, r28	; 61
    12e6:	09 94       	ijmp

000012e8 <__epilogue_restores__>:
    12e8:	2a 88       	ldd	r2, Y+18	; 0x12
    12ea:	39 88       	ldd	r3, Y+17	; 0x11
    12ec:	48 88       	ldd	r4, Y+16	; 0x10
    12ee:	5f 84       	ldd	r5, Y+15	; 0x0f
    12f0:	6e 84       	ldd	r6, Y+14	; 0x0e
    12f2:	7d 84       	ldd	r7, Y+13	; 0x0d
    12f4:	8c 84       	ldd	r8, Y+12	; 0x0c
    12f6:	9b 84       	ldd	r9, Y+11	; 0x0b
    12f8:	aa 84       	ldd	r10, Y+10	; 0x0a
    12fa:	b9 84       	ldd	r11, Y+9	; 0x09
    12fc:	c8 84       	ldd	r12, Y+8	; 0x08
    12fe:	df 80       	ldd	r13, Y+7	; 0x07
    1300:	ee 80       	ldd	r14, Y+6	; 0x06
    1302:	fd 80       	ldd	r15, Y+5	; 0x05
    1304:	0c 81       	ldd	r16, Y+4	; 0x04
    1306:	1b 81       	ldd	r17, Y+3	; 0x03
    1308:	aa 81       	ldd	r26, Y+2	; 0x02
    130a:	b9 81       	ldd	r27, Y+1	; 0x01
    130c:	ce 0f       	add	r28, r30
    130e:	d1 1d       	adc	r29, r1
    1310:	0f b6       	in	r0, 0x3f	; 63
    1312:	f8 94       	cli
    1314:	de bf       	out	0x3e, r29	; 62
    1316:	0f be       	out	0x3f, r0	; 63
    1318:	cd bf       	out	0x3d, r28	; 61
    131a:	ed 01       	movw	r28, r26
    131c:	08 95       	ret

0000131e <_exit>:
    131e:	f8 94       	cli

00001320 <__stop_program>:
    1320:	ff cf       	rjmp	.-2      	; 0x1320 <__stop_program>
