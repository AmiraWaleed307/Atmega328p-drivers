
Timers_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000b64  00000bf8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b64  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000022  00800118  00800118  00000c10  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c10  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000c80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001641  00000000  00000000  00000df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009d5  00000000  00000000  00002431  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a92  00000000  00000000  00002e06  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000558  00000000  00000000  00003898  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b25  00000000  00000000  00003df0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013f3  00000000  00000000  00004915  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00005d08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__vector_7>
  20:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__vector_8>
  24:	0c 94 1f 03 	jmp	0x63e	; 0x63e <__vector_9>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 15 02 	jmp	0x42a	; 0x42a <__vector_14>
  3c:	0c 94 3e 02 	jmp	0x47c	; 0x47c <__vector_15>
  40:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e6       	ldi	r30, 0x64	; 100
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 31       	cpi	r26, 0x18	; 24
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e1       	ldi	r26, 0x18	; 24
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 33       	cpi	r26, 0x3A	; 58
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 58 00 	call	0xb0	; 0xb0 <main>
  9e:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Toggle_LED>:
{
	MGPIO_void_TogglePin(GPIO_PORTB,0);
}
void Toggle_LED2 (void)
{
	MGPIO_void_TogglePin(GPIO_PORTB,1);
  a6:	60 e0       	ldi	r22, 0x00	; 0
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	0e 94 df 00 	call	0x1be	; 0x1be <MGPIO_void_TogglePin>
  ae:	08 95       	ret

000000b0 <main>:
}
int main(void)
{
    MGPIO_void_SetPinDirection(GPIO_PORTB,0,GPIO_OUTPUT);
  b0:	41 e0       	ldi	r20, 0x01	; 1
  b2:	60 e0       	ldi	r22, 0x00	; 0
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	0e 94 9e 00 	call	0x13c	; 0x13c <MGPIO_void_SetPinDirection>
	MGPIO_void_SetPinDirection(GPIO_PORTB,1,GPIO_OUTPUT);
  ba:	41 e0       	ldi	r20, 0x01	; 1
  bc:	61 e0       	ldi	r22, 0x01	; 1
  be:	80 e0       	ldi	r24, 0x00	; 0
  c0:	0e 94 9e 00 	call	0x13c	; 0x13c <MGPIO_void_SetPinDirection>
    MGPIO_void_SetPinDirection(GPIO_PORTD,5,GPIO_OUTPUT);
  c4:	41 e0       	ldi	r20, 0x01	; 1
  c6:	65 e0       	ldi	r22, 0x05	; 5
  c8:	82 e0       	ldi	r24, 0x02	; 2
  ca:	0e 94 9e 00 	call	0x13c	; 0x13c <MGPIO_void_SetPinDirection>
    MGPIO_void_SetPinDirection(GPIO_PORTD,6,GPIO_OUTPUT);
  ce:	41 e0       	ldi	r20, 0x01	; 1
  d0:	66 e0       	ldi	r22, 0x06	; 6
  d2:	82 e0       	ldi	r24, 0x02	; 2
  d4:	0e 94 9e 00 	call	0x13c	; 0x13c <MGPIO_void_SetPinDirection>

	MTIM8_void_initialize (TIM0, TIM_FAST_PWM, TIM_FAST_PWM_NON_INVERTING,TIM_FAST_PWM_INVERTING,TIM_CS_1024_PRESCALER);
  d8:	05 e0       	ldi	r16, 0x05	; 5
  da:	23 e0       	ldi	r18, 0x03	; 3
  dc:	42 e0       	ldi	r20, 0x02	; 2
  de:	63 e0       	ldi	r22, 0x03	; 3
  e0:	80 e0       	ldi	r24, 0x00	; 0
  e2:	0e 94 ff 00 	call	0x1fe	; 0x1fe <MTIM8_void_initialize>
	//MTIM8_void_CTCSetFrequency(TIM0,1000);  //128

	//MTIM8_void_CTCSetFrequency(TIM0,TIM_CHANNEL_A,488); //51
	
	MTIM8_void_SetDutyCycle(TIM0,TIM_CHANNEL_A,100);
  e6:	44 e6       	ldi	r20, 0x64	; 100
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	80 e0       	ldi	r24, 0x00	; 0
  ec:	0e 94 00 02 	call	0x400	; 0x400 <MTIM8_void_SetDutyCycle>
	MTIM8_void_SetDutyCycle(TIM0,TIM_CHANNEL_B,50);
  f0:	42 e3       	ldi	r20, 0x32	; 50
  f2:	61 e0       	ldi	r22, 0x01	; 1
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	0e 94 00 02 	call	0x400	; 0x400 <MTIM8_void_SetDutyCycle>
	
	//MTIM8_void_initialize (TIM2, TIM_NORMAL_MODE, 0,0,TIM_CS_256_PRESCALER);

	MTIM8_void_SetPeriodicFunction (TIM0,1000000,Toggle_LED);
  fa:	23 e5       	ldi	r18, 0x53	; 83
  fc:	30 e0       	ldi	r19, 0x00	; 0
  fe:	40 e4       	ldi	r20, 0x40	; 64
 100:	52 e4       	ldi	r21, 0x42	; 66
 102:	6f e0       	ldi	r22, 0x0F	; 15
 104:	70 e0       	ldi	r23, 0x00	; 0
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	0e 94 41 01 	call	0x282	; 0x282 <MTIM8_void_SetPeriodicFunction>
 10c:	ff cf       	rjmp	.-2      	; 0x10c <main+0x5c>

0000010e <MCLOCK_u32GetSystemClock>:
		__asm__ volatile("NOP");
}

u32 MCLOCK_u32GetSystemClock(void){
	return CLOCK_SYSTEM_FREQUENCY;
 10e:	60 e0       	ldi	r22, 0x00	; 0
 110:	72 e1       	ldi	r23, 0x12	; 18
 112:	8a e7       	ldi	r24, 0x7A	; 122
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	08 95       	ret

00000118 <PGPIO_PRegister_t_GetPtrToReg>:
	volatile REGISTER_t* local_PReg =0;
		local_PReg = PGPIO_PRegister_t_GetPtrToReg(PortID);
		if (local_PReg == 0)
			return;
		local_PReg->PORT=Value;
	}
 118:	81 30       	cpi	r24, 0x01	; 1
 11a:	21 f0       	breq	.+8      	; 0x124 <PGPIO_PRegister_t_GetPtrToReg+0xc>
 11c:	60 f0       	brcs	.+24     	; 0x136 <PGPIO_PRegister_t_GetPtrToReg+0x1e>
 11e:	82 30       	cpi	r24, 0x02	; 2
 120:	21 f0       	breq	.+8      	; 0x12a <PGPIO_PRegister_t_GetPtrToReg+0x12>
 122:	06 c0       	rjmp	.+12     	; 0x130 <PGPIO_PRegister_t_GetPtrToReg+0x18>
 124:	86 e2       	ldi	r24, 0x26	; 38
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	08 95       	ret
 12a:	89 e2       	ldi	r24, 0x29	; 41
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	08 95       	ret
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	08 95       	ret
 136:	83 e2       	ldi	r24, 0x23	; 35
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	08 95       	ret

0000013c <MGPIO_void_SetPinDirection>:
 13c:	cf 93       	push	r28
 13e:	df 93       	push	r29
 140:	d6 2f       	mov	r29, r22
 142:	c4 2f       	mov	r28, r20
 144:	0e 94 8c 00 	call	0x118	; 0x118 <PGPIO_PRegister_t_GetPtrToReg>
 148:	fc 01       	movw	r30, r24
 14a:	89 2b       	or	r24, r25
 14c:	a9 f1       	breq	.+106    	; 0x1b8 <MGPIO_void_SetPinDirection+0x7c>
 14e:	c1 30       	cpi	r28, 0x01	; 1
 150:	a1 f0       	breq	.+40     	; 0x17a <MGPIO_void_SetPinDirection+0x3e>
 152:	18 f0       	brcs	.+6      	; 0x15a <MGPIO_void_SetPinDirection+0x1e>
 154:	c2 30       	cpi	r28, 0x02	; 2
 156:	09 f1       	breq	.+66     	; 0x19a <MGPIO_void_SetPinDirection+0x5e>
 158:	2f c0       	rjmp	.+94     	; 0x1b8 <MGPIO_void_SetPinDirection+0x7c>
 15a:	21 81       	ldd	r18, Z+1	; 0x01
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	02 c0       	rjmp	.+4      	; 0x166 <MGPIO_void_SetPinDirection+0x2a>
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	da 95       	dec	r29
 168:	e2 f7       	brpl	.-8      	; 0x162 <MGPIO_void_SetPinDirection+0x26>
 16a:	80 95       	com	r24
 16c:	92 2f       	mov	r25, r18
 16e:	98 23       	and	r25, r24
 170:	91 83       	std	Z+1, r25	; 0x01
 172:	92 81       	ldd	r25, Z+2	; 0x02
 174:	89 23       	and	r24, r25
 176:	82 83       	std	Z+2, r24	; 0x02
 178:	1f c0       	rjmp	.+62     	; 0x1b8 <MGPIO_void_SetPinDirection+0x7c>
 17a:	21 81       	ldd	r18, Z+1	; 0x01
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	02 c0       	rjmp	.+4      	; 0x186 <MGPIO_void_SetPinDirection+0x4a>
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	da 95       	dec	r29
 188:	e2 f7       	brpl	.-8      	; 0x182 <MGPIO_void_SetPinDirection+0x46>
 18a:	92 2f       	mov	r25, r18
 18c:	98 2b       	or	r25, r24
 18e:	91 83       	std	Z+1, r25	; 0x01
 190:	92 81       	ldd	r25, Z+2	; 0x02
 192:	80 95       	com	r24
 194:	89 23       	and	r24, r25
 196:	82 83       	std	Z+2, r24	; 0x02
 198:	0f c0       	rjmp	.+30     	; 0x1b8 <MGPIO_void_SetPinDirection+0x7c>
 19a:	21 81       	ldd	r18, Z+1	; 0x01
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <MGPIO_void_SetPinDirection+0x6a>
 1a2:	88 0f       	add	r24, r24
 1a4:	99 1f       	adc	r25, r25
 1a6:	da 95       	dec	r29
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <MGPIO_void_SetPinDirection+0x66>
 1aa:	98 2f       	mov	r25, r24
 1ac:	90 95       	com	r25
 1ae:	92 23       	and	r25, r18
 1b0:	91 83       	std	Z+1, r25	; 0x01
 1b2:	92 81       	ldd	r25, Z+2	; 0x02
 1b4:	89 2b       	or	r24, r25
 1b6:	82 83       	std	Z+2, r24	; 0x02
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	08 95       	ret

000001be <MGPIO_void_TogglePin>:

void MGPIO_void_TogglePin (enum GPIOPORT_t PortID, u8 PinNumber)
{
 1be:	cf 93       	push	r28
 1c0:	c6 2f       	mov	r28, r22
	volatile REGISTER_t* local_PReg =0;
	local_PReg = PGPIO_PRegister_t_GetPtrToReg(PortID);
 1c2:	0e 94 8c 00 	call	0x118	; 0x118 <PGPIO_PRegister_t_GetPtrToReg>
	if (local_PReg == 0)
 1c6:	00 97       	sbiw	r24, 0x00	; 0
 1c8:	59 f0       	breq	.+22     	; 0x1e0 <MGPIO_void_TogglePin+0x22>
		return;
	TOG_BIT(local_PReg->PORT,PinNumber);
 1ca:	fc 01       	movw	r30, r24
 1cc:	42 81       	ldd	r20, Z+2	; 0x02
 1ce:	21 e0       	ldi	r18, 0x01	; 1
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <MGPIO_void_TogglePin+0x1a>
 1d4:	22 0f       	add	r18, r18
 1d6:	33 1f       	adc	r19, r19
 1d8:	ca 95       	dec	r28
 1da:	e2 f7       	brpl	.-8      	; 0x1d4 <MGPIO_void_TogglePin+0x16>
 1dc:	24 27       	eor	r18, r20
 1de:	22 83       	std	Z+2, r18	; 0x02

	}
 1e0:	cf 91       	pop	r28
 1e2:	08 95       	ret

000001e4 <PTIM8_GetTimPointer>:
		return(GET_BIT(*TIFR2_REG,INTERRUPT_TYPE));
		break ;
	default :
		return 0 ;
	}
}
 1e4:	88 23       	and	r24, r24
 1e6:	41 f0       	breq	.+16     	; 0x1f8 <PTIM8_GetTimPointer+0x14>
 1e8:	81 30       	cpi	r24, 0x01	; 1
 1ea:	19 f4       	brne	.+6      	; 0x1f2 <PTIM8_GetTimPointer+0xe>
 1ec:	80 eb       	ldi	r24, 0xB0	; 176
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	08 95       	ret
 1f2:	80 e0       	ldi	r24, 0x00	; 0
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	08 95       	ret
 1f8:	84 e4       	ldi	r24, 0x44	; 68
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	08 95       	ret

000001fe <MTIM8_void_initialize>:
 1fe:	df 92       	push	r13
 200:	ef 92       	push	r14
 202:	ff 92       	push	r15
 204:	0f 93       	push	r16
 206:	1f 93       	push	r17
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	82 30       	cpi	r24, 0x02	; 2
 20e:	88 f5       	brcc	.+98     	; 0x272 <MTIM8_void_initialize+0x74>
 210:	d2 2f       	mov	r29, r18
 212:	c4 2f       	mov	r28, r20
 214:	16 2f       	mov	r17, r22
 216:	d8 2e       	mov	r13, r24
 218:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <PTIM8_GetTimPointer>
 21c:	fc 01       	movw	r30, r24
 21e:	10 82       	st	Z, r1
 220:	11 82       	std	Z+1, r1	; 0x01
 222:	80 81       	ld	r24, Z
 224:	21 2f       	mov	r18, r17
 226:	23 70       	andi	r18, 0x03	; 3
 228:	42 2f       	mov	r20, r18
 22a:	48 2b       	or	r20, r24
 22c:	80 e1       	ldi	r24, 0x10	; 16
 22e:	d8 9f       	mul	r29, r24
 230:	90 01       	movw	r18, r0
 232:	11 24       	eor	r1, r1
 234:	24 2b       	or	r18, r20
 236:	80 e4       	ldi	r24, 0x40	; 64
 238:	c8 9f       	mul	r28, r24
 23a:	a0 01       	movw	r20, r0
 23c:	11 24       	eor	r1, r1
 23e:	42 2b       	or	r20, r18
 240:	40 83       	st	Z, r20
 242:	81 81       	ldd	r24, Z+1	; 0x01
 244:	12 fb       	bst	r17, 2
 246:	ee 24       	eor	r14, r14
 248:	e0 f8       	bld	r14, 0
 24a:	f1 2c       	mov	r15, r1
 24c:	ee 0c       	add	r14, r14
 24e:	ff 1c       	adc	r15, r15
 250:	ee 0c       	add	r14, r14
 252:	ff 1c       	adc	r15, r15
 254:	ee 0c       	add	r14, r14
 256:	ff 1c       	adc	r15, r15
 258:	80 2b       	or	r24, r16
 25a:	e8 2a       	or	r14, r24
 25c:	e1 82       	std	Z+1, r14	; 0x01
 25e:	8d 2d       	mov	r24, r13
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	fc 01       	movw	r30, r24
 264:	e8 5c       	subi	r30, 0xC8	; 200
 266:	fe 4f       	sbci	r31, 0xFE	; 254
 268:	00 83       	st	Z, r16
 26a:	fc 01       	movw	r30, r24
 26c:	ec 5d       	subi	r30, 0xDC	; 220
 26e:	fe 4f       	sbci	r31, 0xFE	; 254
 270:	10 83       	st	Z, r17
 272:	df 91       	pop	r29
 274:	cf 91       	pop	r28
 276:	1f 91       	pop	r17
 278:	0f 91       	pop	r16
 27a:	ff 90       	pop	r15
 27c:	ef 90       	pop	r14
 27e:	df 90       	pop	r13
 280:	08 95       	ret

00000282 <MTIM8_void_SetPeriodicFunction>:
 282:	2f 92       	push	r2
 284:	3f 92       	push	r3
 286:	4f 92       	push	r4
 288:	5f 92       	push	r5
 28a:	6f 92       	push	r6
 28c:	7f 92       	push	r7
 28e:	8f 92       	push	r8
 290:	9f 92       	push	r9
 292:	af 92       	push	r10
 294:	bf 92       	push	r11
 296:	cf 92       	push	r12
 298:	df 92       	push	r13
 29a:	ef 92       	push	r14
 29c:	ff 92       	push	r15
 29e:	0f 93       	push	r16
 2a0:	1f 93       	push	r17
 2a2:	cf 93       	push	r28
 2a4:	c8 2f       	mov	r28, r24
 2a6:	6a 01       	movw	r12, r20
 2a8:	7b 01       	movw	r14, r22
 2aa:	59 01       	movw	r10, r18
 2ac:	82 30       	cpi	r24, 0x02	; 2
 2ae:	08 f0       	brcs	.+2      	; 0x2b2 <MTIM8_void_SetPeriodicFunction+0x30>
 2b0:	95 c0       	rjmp	.+298    	; 0x3dc <MTIM8_void_SetPeriodicFunction+0x15a>
 2b2:	08 2f       	mov	r16, r24
 2b4:	10 e0       	ldi	r17, 0x00	; 0
 2b6:	f8 01       	movw	r30, r16
 2b8:	e8 5c       	subi	r30, 0xC8	; 200
 2ba:	fe 4f       	sbci	r31, 0xFE	; 254
 2bc:	90 80       	ld	r9, Z
 2be:	8f ef       	ldi	r24, 0xFF	; 255
 2c0:	89 0d       	add	r24, r9
 2c2:	85 30       	cpi	r24, 0x05	; 5
 2c4:	08 f0       	brcs	.+2      	; 0x2c8 <MTIM8_void_SetPeriodicFunction+0x46>
 2c6:	8a c0       	rjmp	.+276    	; 0x3dc <MTIM8_void_SetPeriodicFunction+0x15a>
 2c8:	f8 01       	movw	r30, r16
 2ca:	ec 5d       	subi	r30, 0xDC	; 220
 2cc:	fe 4f       	sbci	r31, 0xFE	; 254
 2ce:	80 81       	ld	r24, Z
 2d0:	81 30       	cpi	r24, 0x01	; 1
 2d2:	21 f4       	brne	.+8      	; 0x2dc <MTIM8_void_SetPeriodicFunction+0x5a>
 2d4:	f6 94       	lsr	r15
 2d6:	e7 94       	ror	r14
 2d8:	d7 94       	ror	r13
 2da:	c7 94       	ror	r12
 2dc:	8c 2f       	mov	r24, r28
 2de:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <PTIM8_GetTimPointer>
 2e2:	1c 01       	movw	r2, r24
 2e4:	f8 01       	movw	r30, r16
 2e6:	ee 0f       	add	r30, r30
 2e8:	ff 1f       	adc	r31, r31
 2ea:	e0 5e       	subi	r30, 0xE0	; 224
 2ec:	fe 4f       	sbci	r31, 0xFE	; 254
 2ee:	b1 82       	std	Z+1, r11	; 0x01
 2f0:	a0 82       	st	Z, r10
 2f2:	e9 2d       	mov	r30, r9
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	ee 0f       	add	r30, r30
 2f8:	ff 1f       	adc	r31, r31
 2fa:	ee 0f       	add	r30, r30
 2fc:	ff 1f       	adc	r31, r31
 2fe:	e0 50       	subi	r30, 0x00	; 0
 300:	ff 4f       	sbci	r31, 0xFF	; 255
 302:	40 80       	ld	r4, Z
 304:	51 80       	ldd	r5, Z+1	; 0x01
 306:	62 80       	ldd	r6, Z+2	; 0x02
 308:	73 80       	ldd	r7, Z+3	; 0x03
 30a:	76 2c       	mov	r7, r6
 30c:	65 2c       	mov	r6, r5
 30e:	54 2c       	mov	r5, r4
 310:	44 24       	eor	r4, r4
 312:	0e 94 87 00 	call	0x10e	; 0x10e <MCLOCK_u32GetSystemClock>
 316:	4b 01       	movw	r8, r22
 318:	5c 01       	movw	r10, r24
 31a:	c7 01       	movw	r24, r14
 31c:	b6 01       	movw	r22, r12
 31e:	0e 94 93 04 	call	0x926	; 0x926 <__floatunsisf>
 322:	6b 01       	movw	r12, r22
 324:	7c 01       	movw	r14, r24
 326:	c5 01       	movw	r24, r10
 328:	b4 01       	movw	r22, r8
 32a:	20 e4       	ldi	r18, 0x40	; 64
 32c:	32 e4       	ldi	r19, 0x42	; 66
 32e:	4f e0       	ldi	r20, 0x0F	; 15
 330:	50 e0       	ldi	r21, 0x00	; 0
 332:	0e 94 8e 05 	call	0xb1c	; 0xb1c <__udivmodsi4>
 336:	c3 01       	movw	r24, r6
 338:	b2 01       	movw	r22, r4
 33a:	0e 94 8e 05 	call	0xb1c	; 0xb1c <__udivmodsi4>
 33e:	ca 01       	movw	r24, r20
 340:	b9 01       	movw	r22, r18
 342:	0e 94 93 04 	call	0x926	; 0x926 <__floatunsisf>
 346:	9b 01       	movw	r18, r22
 348:	ac 01       	movw	r20, r24
 34a:	c7 01       	movw	r24, r14
 34c:	b6 01       	movw	r22, r12
 34e:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <__divsf3>
 352:	4b 01       	movw	r8, r22
 354:	5c 01       	movw	r10, r24
 356:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__fixunssfsi>
 35a:	6b 01       	movw	r12, r22
 35c:	7c 01       	movw	r14, r24
 35e:	0e 94 93 04 	call	0x926	; 0x926 <__floatunsisf>
 362:	9b 01       	movw	r18, r22
 364:	ac 01       	movw	r20, r24
 366:	c5 01       	movw	r24, r10
 368:	b4 01       	movw	r22, r8
 36a:	0e 94 85 03 	call	0x70a	; 0x70a <__subsf3>
 36e:	20 e0       	ldi	r18, 0x00	; 0
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	40 e8       	ldi	r20, 0x80	; 128
 374:	53 e4       	ldi	r21, 0x43	; 67
 376:	0e 94 21 05 	call	0xa42	; 0xa42 <__mulsf3>
 37a:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__fixunssfsi>
 37e:	66 23       	and	r22, r22
 380:	61 f0       	breq	.+24     	; 0x39a <MTIM8_void_SetPeriodicFunction+0x118>
 382:	8f ef       	ldi	r24, 0xFF	; 255
 384:	c8 1a       	sub	r12, r24
 386:	d8 0a       	sbc	r13, r24
 388:	e8 0a       	sbc	r14, r24
 38a:	f8 0a       	sbc	r15, r24
 38c:	60 95       	com	r22
 38e:	f1 01       	movw	r30, r2
 390:	62 83       	std	Z+2, r22	; 0x02
 392:	f8 01       	movw	r30, r16
 394:	ea 5c       	subi	r30, 0xCA	; 202
 396:	fe 4f       	sbci	r31, 0xFE	; 254
 398:	60 83       	st	Z, r22
 39a:	00 0f       	add	r16, r16
 39c:	11 1f       	adc	r17, r17
 39e:	00 0f       	add	r16, r16
 3a0:	11 1f       	adc	r17, r17
 3a2:	f8 01       	movw	r30, r16
 3a4:	e2 5d       	subi	r30, 0xD2	; 210
 3a6:	fe 4f       	sbci	r31, 0xFE	; 254
 3a8:	c0 82       	st	Z, r12
 3aa:	d1 82       	std	Z+1, r13	; 0x01
 3ac:	e2 82       	std	Z+2, r14	; 0x02
 3ae:	f3 82       	std	Z+3, r15	; 0x03
 3b0:	cc 23       	and	r28, r28
 3b2:	19 f0       	breq	.+6      	; 0x3ba <MTIM8_void_SetPeriodicFunction+0x138>
 3b4:	c1 30       	cpi	r28, 0x01	; 1
 3b6:	51 f0       	breq	.+20     	; 0x3cc <MTIM8_void_SetPeriodicFunction+0x14a>
 3b8:	11 c0       	rjmp	.+34     	; 0x3dc <MTIM8_void_SetPeriodicFunction+0x15a>
 3ba:	ee e6       	ldi	r30, 0x6E	; 110
 3bc:	f0 e0       	ldi	r31, 0x00	; 0
 3be:	80 81       	ld	r24, Z
 3c0:	81 60       	ori	r24, 0x01	; 1
 3c2:	80 83       	st	Z, r24
 3c4:	8f b7       	in	r24, 0x3f	; 63
 3c6:	80 68       	ori	r24, 0x80	; 128
 3c8:	8f bf       	out	0x3f, r24	; 63
 3ca:	08 c0       	rjmp	.+16     	; 0x3dc <MTIM8_void_SetPeriodicFunction+0x15a>
 3cc:	e0 e7       	ldi	r30, 0x70	; 112
 3ce:	f0 e0       	ldi	r31, 0x00	; 0
 3d0:	80 81       	ld	r24, Z
 3d2:	81 60       	ori	r24, 0x01	; 1
 3d4:	80 83       	st	Z, r24
 3d6:	8f b7       	in	r24, 0x3f	; 63
 3d8:	80 68       	ori	r24, 0x80	; 128
 3da:	8f bf       	out	0x3f, r24	; 63
 3dc:	cf 91       	pop	r28
 3de:	1f 91       	pop	r17
 3e0:	0f 91       	pop	r16
 3e2:	ff 90       	pop	r15
 3e4:	ef 90       	pop	r14
 3e6:	df 90       	pop	r13
 3e8:	cf 90       	pop	r12
 3ea:	bf 90       	pop	r11
 3ec:	af 90       	pop	r10
 3ee:	9f 90       	pop	r9
 3f0:	8f 90       	pop	r8
 3f2:	7f 90       	pop	r7
 3f4:	6f 90       	pop	r6
 3f6:	5f 90       	pop	r5
 3f8:	4f 90       	pop	r4
 3fa:	3f 90       	pop	r3
 3fc:	2f 90       	pop	r2
 3fe:	08 95       	ret

00000400 <MTIM8_void_SetDutyCycle>:
 400:	cf 93       	push	r28
 402:	df 93       	push	r29
 404:	82 30       	cpi	r24, 0x02	; 2
 406:	70 f4       	brcc	.+28     	; 0x424 <MTIM8_void_SetDutyCycle+0x24>
 408:	d4 2f       	mov	r29, r20
 40a:	c6 2f       	mov	r28, r22
 40c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <PTIM8_GetTimPointer>
 410:	cc 23       	and	r28, r28
 412:	19 f0       	breq	.+6      	; 0x41a <MTIM8_void_SetDutyCycle+0x1a>
 414:	c1 30       	cpi	r28, 0x01	; 1
 416:	21 f0       	breq	.+8      	; 0x420 <MTIM8_void_SetDutyCycle+0x20>
 418:	05 c0       	rjmp	.+10     	; 0x424 <MTIM8_void_SetDutyCycle+0x24>
 41a:	fc 01       	movw	r30, r24
 41c:	d3 83       	std	Z+3, r29	; 0x03
 41e:	02 c0       	rjmp	.+4      	; 0x424 <MTIM8_void_SetDutyCycle+0x24>
 420:	fc 01       	movw	r30, r24
 422:	d4 83       	std	Z+4, r29	; 0x04
 424:	df 91       	pop	r29
 426:	cf 91       	pop	r28
 428:	08 95       	ret

0000042a <__vector_14>:

void TIM0_VECTOR_ISR_TIM0_COMPA  (void)
{
 42a:	1f 92       	push	r1
 42c:	0f 92       	push	r0
 42e:	0f b6       	in	r0, 0x3f	; 63
 430:	0f 92       	push	r0
 432:	11 24       	eor	r1, r1
 434:	2f 93       	push	r18
 436:	3f 93       	push	r19
 438:	4f 93       	push	r20
 43a:	5f 93       	push	r21
 43c:	6f 93       	push	r22
 43e:	7f 93       	push	r23
 440:	8f 93       	push	r24
 442:	9f 93       	push	r25
 444:	af 93       	push	r26
 446:	bf 93       	push	r27
 448:	ef 93       	push	r30
 44a:	ff 93       	push	r31
	if (p_8OutCompareMatchACallBack[TIM0]!=0)
 44c:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <p_8OutCompareMatchACallBack>
 450:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <p_8OutCompareMatchACallBack+0x1>
 454:	30 97       	sbiw	r30, 0x00	; 0
 456:	09 f0       	breq	.+2      	; 0x45a <__vector_14+0x30>
	{
		p_8OutCompareMatchACallBack[TIM0]() ;
 458:	09 95       	icall
	}
}
 45a:	ff 91       	pop	r31
 45c:	ef 91       	pop	r30
 45e:	bf 91       	pop	r27
 460:	af 91       	pop	r26
 462:	9f 91       	pop	r25
 464:	8f 91       	pop	r24
 466:	7f 91       	pop	r23
 468:	6f 91       	pop	r22
 46a:	5f 91       	pop	r21
 46c:	4f 91       	pop	r20
 46e:	3f 91       	pop	r19
 470:	2f 91       	pop	r18
 472:	0f 90       	pop	r0
 474:	0f be       	out	0x3f, r0	; 63
 476:	0f 90       	pop	r0
 478:	1f 90       	pop	r1
 47a:	18 95       	reti

0000047c <__vector_15>:


void TIM0_VECTOR_ISR_TIM0_COMPB  (void)
{
 47c:	1f 92       	push	r1
 47e:	0f 92       	push	r0
 480:	0f b6       	in	r0, 0x3f	; 63
 482:	0f 92       	push	r0
 484:	11 24       	eor	r1, r1
 486:	2f 93       	push	r18
 488:	3f 93       	push	r19
 48a:	4f 93       	push	r20
 48c:	5f 93       	push	r21
 48e:	6f 93       	push	r22
 490:	7f 93       	push	r23
 492:	8f 93       	push	r24
 494:	9f 93       	push	r25
 496:	af 93       	push	r26
 498:	bf 93       	push	r27
 49a:	ef 93       	push	r30
 49c:	ff 93       	push	r31
	if (p_8OutCompareMatchBCallBack[TIM0]!=0)
 49e:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <__data_end>
 4a2:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <__data_end+0x1>
 4a6:	30 97       	sbiw	r30, 0x00	; 0
 4a8:	09 f0       	breq	.+2      	; 0x4ac <__vector_15+0x30>
	{
		p_8OutCompareMatchBCallBack[TIM0]() ;
 4aa:	09 95       	icall
	}
}
 4ac:	ff 91       	pop	r31
 4ae:	ef 91       	pop	r30
 4b0:	bf 91       	pop	r27
 4b2:	af 91       	pop	r26
 4b4:	9f 91       	pop	r25
 4b6:	8f 91       	pop	r24
 4b8:	7f 91       	pop	r23
 4ba:	6f 91       	pop	r22
 4bc:	5f 91       	pop	r21
 4be:	4f 91       	pop	r20
 4c0:	3f 91       	pop	r19
 4c2:	2f 91       	pop	r18
 4c4:	0f 90       	pop	r0
 4c6:	0f be       	out	0x3f, r0	; 63
 4c8:	0f 90       	pop	r0
 4ca:	1f 90       	pop	r1
 4cc:	18 95       	reti

000004ce <__vector_16>:


void TIM0_VECTOR_ISR_TIM0_OVF  (void)
{
 4ce:	1f 92       	push	r1
 4d0:	0f 92       	push	r0
 4d2:	0f b6       	in	r0, 0x3f	; 63
 4d4:	0f 92       	push	r0
 4d6:	11 24       	eor	r1, r1
 4d8:	2f 93       	push	r18
 4da:	3f 93       	push	r19
 4dc:	4f 93       	push	r20
 4de:	5f 93       	push	r21
 4e0:	6f 93       	push	r22
 4e2:	7f 93       	push	r23
 4e4:	8f 93       	push	r24
 4e6:	9f 93       	push	r25
 4e8:	af 93       	push	r26
 4ea:	bf 93       	push	r27
 4ec:	cf 93       	push	r28
 4ee:	df 93       	push	r29
 4f0:	ef 93       	push	r30
 4f2:	ff 93       	push	r31
	if (p_8OverFlowCallBack[TIM0]!=0)
 4f4:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <p_8OverFlowCallBack>
 4f8:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <p_8OverFlowCallBack+0x1>
 4fc:	30 97       	sbiw	r30, 0x00	; 0
 4fe:	d1 f1       	breq	.+116    	; 0x574 <__vector_16+0xa6>
	{
		p_8OVFCounter[TIM0] ++ ;
 500:	c6 e2       	ldi	r28, 0x26	; 38
 502:	d1 e0       	ldi	r29, 0x01	; 1
 504:	88 81       	ld	r24, Y
 506:	99 81       	ldd	r25, Y+1	; 0x01
 508:	aa 81       	ldd	r26, Y+2	; 0x02
 50a:	bb 81       	ldd	r27, Y+3	; 0x03
 50c:	01 96       	adiw	r24, 0x01	; 1
 50e:	a1 1d       	adc	r26, r1
 510:	b1 1d       	adc	r27, r1
 512:	88 83       	st	Y, r24
 514:	99 83       	std	Y+1, r25	; 0x01
 516:	aa 83       	std	Y+2, r26	; 0x02
 518:	bb 83       	std	Y+3, r27	; 0x03
		if ((p_8PeriodicInterrupt_OVF_NUM[TIM0] == p_8OVFCounter[TIM0] ) || p_8PeriodicInterrupt_OVF_NUM[TIM0]==0 )
 51a:	40 91 2e 01 	lds	r20, 0x012E	; 0x80012e <p_8PeriodicInterrupt_OVF_NUM>
 51e:	50 91 2f 01 	lds	r21, 0x012F	; 0x80012f <p_8PeriodicInterrupt_OVF_NUM+0x1>
 522:	60 91 30 01 	lds	r22, 0x0130	; 0x800130 <p_8PeriodicInterrupt_OVF_NUM+0x2>
 526:	70 91 31 01 	lds	r23, 0x0131	; 0x800131 <p_8PeriodicInterrupt_OVF_NUM+0x3>
 52a:	84 17       	cp	r24, r20
 52c:	95 07       	cpc	r25, r21
 52e:	a6 07       	cpc	r26, r22
 530:	b7 07       	cpc	r27, r23
 532:	21 f0       	breq	.+8      	; 0x53c <__vector_16+0x6e>
 534:	45 2b       	or	r20, r21
 536:	46 2b       	or	r20, r22
 538:	47 2b       	or	r20, r23
 53a:	e1 f4       	brne	.+56     	; 0x574 <__vector_16+0xa6>
		{
		p_8OverFlowCallBack[TIM0]() ;
 53c:	09 95       	icall
		p_8OVFCounter[TIM0] = 0 ;
 53e:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <p_8OVFCounter>
 542:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <p_8OVFCounter+0x1>
 546:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <p_8OVFCounter+0x2>
 54a:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <p_8OVFCounter+0x3>
		if(p_8PeriodicInterrupt_OVF_NUM[TIM0]!=0 && p_8Mode[TIM0]==TIM_NORMAL_MODE)
 54e:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <p_8PeriodicInterrupt_OVF_NUM>
 552:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <p_8PeriodicInterrupt_OVF_NUM+0x1>
 556:	a0 91 30 01 	lds	r26, 0x0130	; 0x800130 <p_8PeriodicInterrupt_OVF_NUM+0x2>
 55a:	b0 91 31 01 	lds	r27, 0x0131	; 0x800131 <p_8PeriodicInterrupt_OVF_NUM+0x3>
 55e:	89 2b       	or	r24, r25
 560:	8a 2b       	or	r24, r26
 562:	8b 2b       	or	r24, r27
 564:	39 f0       	breq	.+14     	; 0x574 <__vector_16+0xa6>
 566:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <p_8Mode>
 56a:	81 11       	cpse	r24, r1
 56c:	03 c0       	rjmp	.+6      	; 0x574 <__vector_16+0xa6>
			TIMER0_REG->TCNT = p_8PeriodicInterrupt_Preload[TIM0] ;
 56e:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <p_8PeriodicInterrupt_Preload>
 572:	86 bd       	out	0x26, r24	; 38
		}
	}
}
 574:	ff 91       	pop	r31
 576:	ef 91       	pop	r30
 578:	df 91       	pop	r29
 57a:	cf 91       	pop	r28
 57c:	bf 91       	pop	r27
 57e:	af 91       	pop	r26
 580:	9f 91       	pop	r25
 582:	8f 91       	pop	r24
 584:	7f 91       	pop	r23
 586:	6f 91       	pop	r22
 588:	5f 91       	pop	r21
 58a:	4f 91       	pop	r20
 58c:	3f 91       	pop	r19
 58e:	2f 91       	pop	r18
 590:	0f 90       	pop	r0
 592:	0f be       	out	0x3f, r0	; 63
 594:	0f 90       	pop	r0
 596:	1f 90       	pop	r1
 598:	18 95       	reti

0000059a <__vector_7>:


void TIM2_VECTOR_ISR_TIM2_COMPA  (void)
{
 59a:	1f 92       	push	r1
 59c:	0f 92       	push	r0
 59e:	0f b6       	in	r0, 0x3f	; 63
 5a0:	0f 92       	push	r0
 5a2:	11 24       	eor	r1, r1
 5a4:	2f 93       	push	r18
 5a6:	3f 93       	push	r19
 5a8:	4f 93       	push	r20
 5aa:	5f 93       	push	r21
 5ac:	6f 93       	push	r22
 5ae:	7f 93       	push	r23
 5b0:	8f 93       	push	r24
 5b2:	9f 93       	push	r25
 5b4:	af 93       	push	r26
 5b6:	bf 93       	push	r27
 5b8:	ef 93       	push	r30
 5ba:	ff 93       	push	r31
	if (p_8OutCompareMatchACallBack[TIM2]!=0)
 5bc:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <p_8OutCompareMatchACallBack+0x2>
 5c0:	f0 91 1f 01 	lds	r31, 0x011F	; 0x80011f <p_8OutCompareMatchACallBack+0x3>
 5c4:	30 97       	sbiw	r30, 0x00	; 0
 5c6:	09 f0       	breq	.+2      	; 0x5ca <__vector_7+0x30>
	{
		p_8OutCompareMatchACallBack[TIM2]() ;
 5c8:	09 95       	icall
	}

}
 5ca:	ff 91       	pop	r31
 5cc:	ef 91       	pop	r30
 5ce:	bf 91       	pop	r27
 5d0:	af 91       	pop	r26
 5d2:	9f 91       	pop	r25
 5d4:	8f 91       	pop	r24
 5d6:	7f 91       	pop	r23
 5d8:	6f 91       	pop	r22
 5da:	5f 91       	pop	r21
 5dc:	4f 91       	pop	r20
 5de:	3f 91       	pop	r19
 5e0:	2f 91       	pop	r18
 5e2:	0f 90       	pop	r0
 5e4:	0f be       	out	0x3f, r0	; 63
 5e6:	0f 90       	pop	r0
 5e8:	1f 90       	pop	r1
 5ea:	18 95       	reti

000005ec <__vector_8>:


void TIM2_VECTOR_ISR_TIM2_COMPB  (void)
{
 5ec:	1f 92       	push	r1
 5ee:	0f 92       	push	r0
 5f0:	0f b6       	in	r0, 0x3f	; 63
 5f2:	0f 92       	push	r0
 5f4:	11 24       	eor	r1, r1
 5f6:	2f 93       	push	r18
 5f8:	3f 93       	push	r19
 5fa:	4f 93       	push	r20
 5fc:	5f 93       	push	r21
 5fe:	6f 93       	push	r22
 600:	7f 93       	push	r23
 602:	8f 93       	push	r24
 604:	9f 93       	push	r25
 606:	af 93       	push	r26
 608:	bf 93       	push	r27
 60a:	ef 93       	push	r30
 60c:	ff 93       	push	r31
	if (p_8OutCompareMatchBCallBack[TIM2]!=0)
 60e:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__data_end+0x2>
 612:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__data_end+0x3>
 616:	30 97       	sbiw	r30, 0x00	; 0
 618:	09 f0       	breq	.+2      	; 0x61c <__vector_8+0x30>
	{
		p_8OutCompareMatchBCallBack[TIM2]() ;
 61a:	09 95       	icall
	}
}
 61c:	ff 91       	pop	r31
 61e:	ef 91       	pop	r30
 620:	bf 91       	pop	r27
 622:	af 91       	pop	r26
 624:	9f 91       	pop	r25
 626:	8f 91       	pop	r24
 628:	7f 91       	pop	r23
 62a:	6f 91       	pop	r22
 62c:	5f 91       	pop	r21
 62e:	4f 91       	pop	r20
 630:	3f 91       	pop	r19
 632:	2f 91       	pop	r18
 634:	0f 90       	pop	r0
 636:	0f be       	out	0x3f, r0	; 63
 638:	0f 90       	pop	r0
 63a:	1f 90       	pop	r1
 63c:	18 95       	reti

0000063e <__vector_9>:


void TIM2_VECTOR_ISR_TIM2_OVF  (void)
{
 63e:	1f 92       	push	r1
 640:	0f 92       	push	r0
 642:	0f b6       	in	r0, 0x3f	; 63
 644:	0f 92       	push	r0
 646:	11 24       	eor	r1, r1
 648:	2f 93       	push	r18
 64a:	3f 93       	push	r19
 64c:	4f 93       	push	r20
 64e:	5f 93       	push	r21
 650:	6f 93       	push	r22
 652:	7f 93       	push	r23
 654:	8f 93       	push	r24
 656:	9f 93       	push	r25
 658:	af 93       	push	r26
 65a:	bf 93       	push	r27
 65c:	cf 93       	push	r28
 65e:	df 93       	push	r29
 660:	ef 93       	push	r30
 662:	ff 93       	push	r31
	if (p_8OverFlowCallBack[TIM2]!=0)
 664:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <p_8OverFlowCallBack+0x2>
 668:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <p_8OverFlowCallBack+0x3>
 66c:	30 97       	sbiw	r30, 0x00	; 0
 66e:	d1 f1       	breq	.+116    	; 0x6e4 <__vector_9+0xa6>
	{
		p_8OVFCounter[TIM2] ++ ;
 670:	c6 e2       	ldi	r28, 0x26	; 38
 672:	d1 e0       	ldi	r29, 0x01	; 1
 674:	8c 81       	ldd	r24, Y+4	; 0x04
 676:	9d 81       	ldd	r25, Y+5	; 0x05
 678:	ae 81       	ldd	r26, Y+6	; 0x06
 67a:	bf 81       	ldd	r27, Y+7	; 0x07
 67c:	01 96       	adiw	r24, 0x01	; 1
 67e:	a1 1d       	adc	r26, r1
 680:	b1 1d       	adc	r27, r1
 682:	8c 83       	std	Y+4, r24	; 0x04
 684:	9d 83       	std	Y+5, r25	; 0x05
 686:	ae 83       	std	Y+6, r26	; 0x06
 688:	bf 83       	std	Y+7, r27	; 0x07
		if ((p_8PeriodicInterrupt_OVF_NUM[TIM2] == p_8OVFCounter[TIM2] ) || p_8PeriodicInterrupt_OVF_NUM[TIM2]==0 )
 68a:	40 91 32 01 	lds	r20, 0x0132	; 0x800132 <p_8PeriodicInterrupt_OVF_NUM+0x4>
 68e:	50 91 33 01 	lds	r21, 0x0133	; 0x800133 <p_8PeriodicInterrupt_OVF_NUM+0x5>
 692:	60 91 34 01 	lds	r22, 0x0134	; 0x800134 <p_8PeriodicInterrupt_OVF_NUM+0x6>
 696:	70 91 35 01 	lds	r23, 0x0135	; 0x800135 <p_8PeriodicInterrupt_OVF_NUM+0x7>
 69a:	84 17       	cp	r24, r20
 69c:	95 07       	cpc	r25, r21
 69e:	a6 07       	cpc	r26, r22
 6a0:	b7 07       	cpc	r27, r23
 6a2:	21 f0       	breq	.+8      	; 0x6ac <__vector_9+0x6e>
 6a4:	45 2b       	or	r20, r21
 6a6:	46 2b       	or	r20, r22
 6a8:	47 2b       	or	r20, r23
 6aa:	e1 f4       	brne	.+56     	; 0x6e4 <__vector_9+0xa6>
		{
		p_8OverFlowCallBack[TIM2]() ;
 6ac:	09 95       	icall
		p_8OVFCounter[TIM2] = 0 ;
 6ae:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <p_8OVFCounter+0x4>
 6b2:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <p_8OVFCounter+0x5>
 6b6:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <p_8OVFCounter+0x6>
 6ba:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <p_8OVFCounter+0x7>
		if(p_8PeriodicInterrupt_OVF_NUM[TIM2]!=0 && p_8Mode[TIM2]==TIM_NORMAL_MODE)
 6be:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <p_8PeriodicInterrupt_OVF_NUM+0x4>
 6c2:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <p_8PeriodicInterrupt_OVF_NUM+0x5>
 6c6:	a0 91 34 01 	lds	r26, 0x0134	; 0x800134 <p_8PeriodicInterrupt_OVF_NUM+0x6>
 6ca:	b0 91 35 01 	lds	r27, 0x0135	; 0x800135 <p_8PeriodicInterrupt_OVF_NUM+0x7>
 6ce:	89 2b       	or	r24, r25
 6d0:	8a 2b       	or	r24, r26
 6d2:	8b 2b       	or	r24, r27
 6d4:	39 f0       	breq	.+14     	; 0x6e4 <__vector_9+0xa6>
 6d6:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <p_8Mode+0x1>
 6da:	81 11       	cpse	r24, r1
 6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <__vector_9+0xa6>
			TIMER0_REG->TCNT = p_8PeriodicInterrupt_Preload[TIM2] ;
 6de:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <p_8PeriodicInterrupt_Preload+0x1>
 6e2:	86 bd       	out	0x26, r24	; 38
		}
	}
}
 6e4:	ff 91       	pop	r31
 6e6:	ef 91       	pop	r30
 6e8:	df 91       	pop	r29
 6ea:	cf 91       	pop	r28
 6ec:	bf 91       	pop	r27
 6ee:	af 91       	pop	r26
 6f0:	9f 91       	pop	r25
 6f2:	8f 91       	pop	r24
 6f4:	7f 91       	pop	r23
 6f6:	6f 91       	pop	r22
 6f8:	5f 91       	pop	r21
 6fa:	4f 91       	pop	r20
 6fc:	3f 91       	pop	r19
 6fe:	2f 91       	pop	r18
 700:	0f 90       	pop	r0
 702:	0f be       	out	0x3f, r0	; 63
 704:	0f 90       	pop	r0
 706:	1f 90       	pop	r1
 708:	18 95       	reti

0000070a <__subsf3>:
 70a:	50 58       	subi	r21, 0x80	; 128

0000070c <__addsf3>:
 70c:	bb 27       	eor	r27, r27
 70e:	aa 27       	eor	r26, r26
 710:	0e 94 9d 03 	call	0x73a	; 0x73a <__addsf3x>
 714:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_round>
 718:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fp_pscA>
 71c:	38 f0       	brcs	.+14     	; 0x72c <__addsf3+0x20>
 71e:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fp_pscB>
 722:	20 f0       	brcs	.+8      	; 0x72c <__addsf3+0x20>
 724:	39 f4       	brne	.+14     	; 0x734 <__addsf3+0x28>
 726:	9f 3f       	cpi	r25, 0xFF	; 255
 728:	19 f4       	brne	.+6      	; 0x730 <__addsf3+0x24>
 72a:	26 f4       	brtc	.+8      	; 0x734 <__addsf3+0x28>
 72c:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_nan>
 730:	0e f4       	brtc	.+2      	; 0x734 <__addsf3+0x28>
 732:	e0 95       	com	r30
 734:	e7 fb       	bst	r30, 7
 736:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__fp_inf>

0000073a <__addsf3x>:
 73a:	e9 2f       	mov	r30, r25
 73c:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__fp_split3>
 740:	58 f3       	brcs	.-42     	; 0x718 <__addsf3+0xc>
 742:	ba 17       	cp	r27, r26
 744:	62 07       	cpc	r22, r18
 746:	73 07       	cpc	r23, r19
 748:	84 07       	cpc	r24, r20
 74a:	95 07       	cpc	r25, r21
 74c:	20 f0       	brcs	.+8      	; 0x756 <__addsf3x+0x1c>
 74e:	79 f4       	brne	.+30     	; 0x76e <__addsf3x+0x34>
 750:	a6 f5       	brtc	.+104    	; 0x7ba <__addsf3x+0x80>
 752:	0c 94 1a 05 	jmp	0xa34	; 0xa34 <__fp_zero>
 756:	0e f4       	brtc	.+2      	; 0x75a <__addsf3x+0x20>
 758:	e0 95       	com	r30
 75a:	0b 2e       	mov	r0, r27
 75c:	ba 2f       	mov	r27, r26
 75e:	a0 2d       	mov	r26, r0
 760:	0b 01       	movw	r0, r22
 762:	b9 01       	movw	r22, r18
 764:	90 01       	movw	r18, r0
 766:	0c 01       	movw	r0, r24
 768:	ca 01       	movw	r24, r20
 76a:	a0 01       	movw	r20, r0
 76c:	11 24       	eor	r1, r1
 76e:	ff 27       	eor	r31, r31
 770:	59 1b       	sub	r21, r25
 772:	99 f0       	breq	.+38     	; 0x79a <__addsf3x+0x60>
 774:	59 3f       	cpi	r21, 0xF9	; 249
 776:	50 f4       	brcc	.+20     	; 0x78c <__addsf3x+0x52>
 778:	50 3e       	cpi	r21, 0xE0	; 224
 77a:	68 f1       	brcs	.+90     	; 0x7d6 <__addsf3x+0x9c>
 77c:	1a 16       	cp	r1, r26
 77e:	f0 40       	sbci	r31, 0x00	; 0
 780:	a2 2f       	mov	r26, r18
 782:	23 2f       	mov	r18, r19
 784:	34 2f       	mov	r19, r20
 786:	44 27       	eor	r20, r20
 788:	58 5f       	subi	r21, 0xF8	; 248
 78a:	f3 cf       	rjmp	.-26     	; 0x772 <__addsf3x+0x38>
 78c:	46 95       	lsr	r20
 78e:	37 95       	ror	r19
 790:	27 95       	ror	r18
 792:	a7 95       	ror	r26
 794:	f0 40       	sbci	r31, 0x00	; 0
 796:	53 95       	inc	r21
 798:	c9 f7       	brne	.-14     	; 0x78c <__addsf3x+0x52>
 79a:	7e f4       	brtc	.+30     	; 0x7ba <__addsf3x+0x80>
 79c:	1f 16       	cp	r1, r31
 79e:	ba 0b       	sbc	r27, r26
 7a0:	62 0b       	sbc	r22, r18
 7a2:	73 0b       	sbc	r23, r19
 7a4:	84 0b       	sbc	r24, r20
 7a6:	ba f0       	brmi	.+46     	; 0x7d6 <__addsf3x+0x9c>
 7a8:	91 50       	subi	r25, 0x01	; 1
 7aa:	a1 f0       	breq	.+40     	; 0x7d4 <__addsf3x+0x9a>
 7ac:	ff 0f       	add	r31, r31
 7ae:	bb 1f       	adc	r27, r27
 7b0:	66 1f       	adc	r22, r22
 7b2:	77 1f       	adc	r23, r23
 7b4:	88 1f       	adc	r24, r24
 7b6:	c2 f7       	brpl	.-16     	; 0x7a8 <__addsf3x+0x6e>
 7b8:	0e c0       	rjmp	.+28     	; 0x7d6 <__addsf3x+0x9c>
 7ba:	ba 0f       	add	r27, r26
 7bc:	62 1f       	adc	r22, r18
 7be:	73 1f       	adc	r23, r19
 7c0:	84 1f       	adc	r24, r20
 7c2:	48 f4       	brcc	.+18     	; 0x7d6 <__addsf3x+0x9c>
 7c4:	87 95       	ror	r24
 7c6:	77 95       	ror	r23
 7c8:	67 95       	ror	r22
 7ca:	b7 95       	ror	r27
 7cc:	f7 95       	ror	r31
 7ce:	9e 3f       	cpi	r25, 0xFE	; 254
 7d0:	08 f0       	brcs	.+2      	; 0x7d4 <__addsf3x+0x9a>
 7d2:	b0 cf       	rjmp	.-160    	; 0x734 <__addsf3+0x28>
 7d4:	93 95       	inc	r25
 7d6:	88 0f       	add	r24, r24
 7d8:	08 f0       	brcs	.+2      	; 0x7dc <__addsf3x+0xa2>
 7da:	99 27       	eor	r25, r25
 7dc:	ee 0f       	add	r30, r30
 7de:	97 95       	ror	r25
 7e0:	87 95       	ror	r24
 7e2:	08 95       	ret

000007e4 <__divsf3>:
 7e4:	0e 94 06 04 	call	0x80c	; 0x80c <__divsf3x>
 7e8:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_round>
 7ec:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fp_pscB>
 7f0:	58 f0       	brcs	.+22     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7f2:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fp_pscA>
 7f6:	40 f0       	brcs	.+16     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7f8:	29 f4       	brne	.+10     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7fa:	5f 3f       	cpi	r21, 0xFF	; 255
 7fc:	29 f0       	breq	.+10     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7fe:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__fp_inf>
 802:	51 11       	cpse	r21, r1
 804:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__fp_szero>
 808:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_nan>

0000080c <__divsf3x>:
 80c:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__fp_split3>
 810:	68 f3       	brcs	.-38     	; 0x7ec <__divsf3+0x8>

00000812 <__divsf3_pse>:
 812:	99 23       	and	r25, r25
 814:	b1 f3       	breq	.-20     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 816:	55 23       	and	r21, r21
 818:	91 f3       	breq	.-28     	; 0x7fe <__divsf3+0x1a>
 81a:	95 1b       	sub	r25, r21
 81c:	55 0b       	sbc	r21, r21
 81e:	bb 27       	eor	r27, r27
 820:	aa 27       	eor	r26, r26
 822:	62 17       	cp	r22, r18
 824:	73 07       	cpc	r23, r19
 826:	84 07       	cpc	r24, r20
 828:	38 f0       	brcs	.+14     	; 0x838 <__divsf3_pse+0x26>
 82a:	9f 5f       	subi	r25, 0xFF	; 255
 82c:	5f 4f       	sbci	r21, 0xFF	; 255
 82e:	22 0f       	add	r18, r18
 830:	33 1f       	adc	r19, r19
 832:	44 1f       	adc	r20, r20
 834:	aa 1f       	adc	r26, r26
 836:	a9 f3       	breq	.-22     	; 0x822 <__divsf3_pse+0x10>
 838:	35 d0       	rcall	.+106    	; 0x8a4 <__divsf3_pse+0x92>
 83a:	0e 2e       	mov	r0, r30
 83c:	3a f0       	brmi	.+14     	; 0x84c <__divsf3_pse+0x3a>
 83e:	e0 e8       	ldi	r30, 0x80	; 128
 840:	32 d0       	rcall	.+100    	; 0x8a6 <__divsf3_pse+0x94>
 842:	91 50       	subi	r25, 0x01	; 1
 844:	50 40       	sbci	r21, 0x00	; 0
 846:	e6 95       	lsr	r30
 848:	00 1c       	adc	r0, r0
 84a:	ca f7       	brpl	.-14     	; 0x83e <__divsf3_pse+0x2c>
 84c:	2b d0       	rcall	.+86     	; 0x8a4 <__divsf3_pse+0x92>
 84e:	fe 2f       	mov	r31, r30
 850:	29 d0       	rcall	.+82     	; 0x8a4 <__divsf3_pse+0x92>
 852:	66 0f       	add	r22, r22
 854:	77 1f       	adc	r23, r23
 856:	88 1f       	adc	r24, r24
 858:	bb 1f       	adc	r27, r27
 85a:	26 17       	cp	r18, r22
 85c:	37 07       	cpc	r19, r23
 85e:	48 07       	cpc	r20, r24
 860:	ab 07       	cpc	r26, r27
 862:	b0 e8       	ldi	r27, 0x80	; 128
 864:	09 f0       	breq	.+2      	; 0x868 <__divsf3_pse+0x56>
 866:	bb 0b       	sbc	r27, r27
 868:	80 2d       	mov	r24, r0
 86a:	bf 01       	movw	r22, r30
 86c:	ff 27       	eor	r31, r31
 86e:	93 58       	subi	r25, 0x83	; 131
 870:	5f 4f       	sbci	r21, 0xFF	; 255
 872:	3a f0       	brmi	.+14     	; 0x882 <__divsf3_pse+0x70>
 874:	9e 3f       	cpi	r25, 0xFE	; 254
 876:	51 05       	cpc	r21, r1
 878:	78 f0       	brcs	.+30     	; 0x898 <__divsf3_pse+0x86>
 87a:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__fp_inf>
 87e:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__fp_szero>
 882:	5f 3f       	cpi	r21, 0xFF	; 255
 884:	e4 f3       	brlt	.-8      	; 0x87e <__divsf3_pse+0x6c>
 886:	98 3e       	cpi	r25, 0xE8	; 232
 888:	d4 f3       	brlt	.-12     	; 0x87e <__divsf3_pse+0x6c>
 88a:	86 95       	lsr	r24
 88c:	77 95       	ror	r23
 88e:	67 95       	ror	r22
 890:	b7 95       	ror	r27
 892:	f7 95       	ror	r31
 894:	9f 5f       	subi	r25, 0xFF	; 255
 896:	c9 f7       	brne	.-14     	; 0x88a <__divsf3_pse+0x78>
 898:	88 0f       	add	r24, r24
 89a:	91 1d       	adc	r25, r1
 89c:	96 95       	lsr	r25
 89e:	87 95       	ror	r24
 8a0:	97 f9       	bld	r25, 7
 8a2:	08 95       	ret
 8a4:	e1 e0       	ldi	r30, 0x01	; 1
 8a6:	66 0f       	add	r22, r22
 8a8:	77 1f       	adc	r23, r23
 8aa:	88 1f       	adc	r24, r24
 8ac:	bb 1f       	adc	r27, r27
 8ae:	62 17       	cp	r22, r18
 8b0:	73 07       	cpc	r23, r19
 8b2:	84 07       	cpc	r24, r20
 8b4:	ba 07       	cpc	r27, r26
 8b6:	20 f0       	brcs	.+8      	; 0x8c0 <__divsf3_pse+0xae>
 8b8:	62 1b       	sub	r22, r18
 8ba:	73 0b       	sbc	r23, r19
 8bc:	84 0b       	sbc	r24, r20
 8be:	ba 0b       	sbc	r27, r26
 8c0:	ee 1f       	adc	r30, r30
 8c2:	88 f7       	brcc	.-30     	; 0x8a6 <__divsf3_pse+0x94>
 8c4:	e0 95       	com	r30
 8c6:	08 95       	ret

000008c8 <__fixunssfsi>:
 8c8:	0e 94 00 05 	call	0xa00	; 0xa00 <__fp_splitA>
 8cc:	88 f0       	brcs	.+34     	; 0x8f0 <__fixunssfsi+0x28>
 8ce:	9f 57       	subi	r25, 0x7F	; 127
 8d0:	98 f0       	brcs	.+38     	; 0x8f8 <__fixunssfsi+0x30>
 8d2:	b9 2f       	mov	r27, r25
 8d4:	99 27       	eor	r25, r25
 8d6:	b7 51       	subi	r27, 0x17	; 23
 8d8:	b0 f0       	brcs	.+44     	; 0x906 <__stack+0x7>
 8da:	e1 f0       	breq	.+56     	; 0x914 <__stack+0x15>
 8dc:	66 0f       	add	r22, r22
 8de:	77 1f       	adc	r23, r23
 8e0:	88 1f       	adc	r24, r24
 8e2:	99 1f       	adc	r25, r25
 8e4:	1a f0       	brmi	.+6      	; 0x8ec <__fixunssfsi+0x24>
 8e6:	ba 95       	dec	r27
 8e8:	c9 f7       	brne	.-14     	; 0x8dc <__fixunssfsi+0x14>
 8ea:	14 c0       	rjmp	.+40     	; 0x914 <__stack+0x15>
 8ec:	b1 30       	cpi	r27, 0x01	; 1
 8ee:	91 f0       	breq	.+36     	; 0x914 <__stack+0x15>
 8f0:	0e 94 1a 05 	call	0xa34	; 0xa34 <__fp_zero>
 8f4:	b1 e0       	ldi	r27, 0x01	; 1
 8f6:	08 95       	ret
 8f8:	0c 94 1a 05 	jmp	0xa34	; 0xa34 <__fp_zero>
 8fc:	67 2f       	mov	r22, r23
 8fe:	78 2f       	mov	r23, r24
 900:	88 27       	eor	r24, r24
 902:	b8 5f       	subi	r27, 0xF8	; 248
 904:	39 f0       	breq	.+14     	; 0x914 <__stack+0x15>
 906:	b9 3f       	cpi	r27, 0xF9	; 249
 908:	cc f3       	brlt	.-14     	; 0x8fc <__fixunssfsi+0x34>
 90a:	86 95       	lsr	r24
 90c:	77 95       	ror	r23
 90e:	67 95       	ror	r22
 910:	b3 95       	inc	r27
 912:	d9 f7       	brne	.-10     	; 0x90a <__stack+0xb>
 914:	3e f4       	brtc	.+14     	; 0x924 <__stack+0x25>
 916:	90 95       	com	r25
 918:	80 95       	com	r24
 91a:	70 95       	com	r23
 91c:	61 95       	neg	r22
 91e:	7f 4f       	sbci	r23, 0xFF	; 255
 920:	8f 4f       	sbci	r24, 0xFF	; 255
 922:	9f 4f       	sbci	r25, 0xFF	; 255
 924:	08 95       	ret

00000926 <__floatunsisf>:
 926:	e8 94       	clt
 928:	09 c0       	rjmp	.+18     	; 0x93c <__floatsisf+0x12>

0000092a <__floatsisf>:
 92a:	97 fb       	bst	r25, 7
 92c:	3e f4       	brtc	.+14     	; 0x93c <__floatsisf+0x12>
 92e:	90 95       	com	r25
 930:	80 95       	com	r24
 932:	70 95       	com	r23
 934:	61 95       	neg	r22
 936:	7f 4f       	sbci	r23, 0xFF	; 255
 938:	8f 4f       	sbci	r24, 0xFF	; 255
 93a:	9f 4f       	sbci	r25, 0xFF	; 255
 93c:	99 23       	and	r25, r25
 93e:	a9 f0       	breq	.+42     	; 0x96a <__floatsisf+0x40>
 940:	f9 2f       	mov	r31, r25
 942:	96 e9       	ldi	r25, 0x96	; 150
 944:	bb 27       	eor	r27, r27
 946:	93 95       	inc	r25
 948:	f6 95       	lsr	r31
 94a:	87 95       	ror	r24
 94c:	77 95       	ror	r23
 94e:	67 95       	ror	r22
 950:	b7 95       	ror	r27
 952:	f1 11       	cpse	r31, r1
 954:	f8 cf       	rjmp	.-16     	; 0x946 <__floatsisf+0x1c>
 956:	fa f4       	brpl	.+62     	; 0x996 <__floatsisf+0x6c>
 958:	bb 0f       	add	r27, r27
 95a:	11 f4       	brne	.+4      	; 0x960 <__floatsisf+0x36>
 95c:	60 ff       	sbrs	r22, 0
 95e:	1b c0       	rjmp	.+54     	; 0x996 <__floatsisf+0x6c>
 960:	6f 5f       	subi	r22, 0xFF	; 255
 962:	7f 4f       	sbci	r23, 0xFF	; 255
 964:	8f 4f       	sbci	r24, 0xFF	; 255
 966:	9f 4f       	sbci	r25, 0xFF	; 255
 968:	16 c0       	rjmp	.+44     	; 0x996 <__floatsisf+0x6c>
 96a:	88 23       	and	r24, r24
 96c:	11 f0       	breq	.+4      	; 0x972 <__floatsisf+0x48>
 96e:	96 e9       	ldi	r25, 0x96	; 150
 970:	11 c0       	rjmp	.+34     	; 0x994 <__floatsisf+0x6a>
 972:	77 23       	and	r23, r23
 974:	21 f0       	breq	.+8      	; 0x97e <__floatsisf+0x54>
 976:	9e e8       	ldi	r25, 0x8E	; 142
 978:	87 2f       	mov	r24, r23
 97a:	76 2f       	mov	r23, r22
 97c:	05 c0       	rjmp	.+10     	; 0x988 <__floatsisf+0x5e>
 97e:	66 23       	and	r22, r22
 980:	71 f0       	breq	.+28     	; 0x99e <__floatsisf+0x74>
 982:	96 e8       	ldi	r25, 0x86	; 134
 984:	86 2f       	mov	r24, r22
 986:	70 e0       	ldi	r23, 0x00	; 0
 988:	60 e0       	ldi	r22, 0x00	; 0
 98a:	2a f0       	brmi	.+10     	; 0x996 <__floatsisf+0x6c>
 98c:	9a 95       	dec	r25
 98e:	66 0f       	add	r22, r22
 990:	77 1f       	adc	r23, r23
 992:	88 1f       	adc	r24, r24
 994:	da f7       	brpl	.-10     	; 0x98c <__floatsisf+0x62>
 996:	88 0f       	add	r24, r24
 998:	96 95       	lsr	r25
 99a:	87 95       	ror	r24
 99c:	97 f9       	bld	r25, 7
 99e:	08 95       	ret

000009a0 <__fp_inf>:
 9a0:	97 f9       	bld	r25, 7
 9a2:	9f 67       	ori	r25, 0x7F	; 127
 9a4:	80 e8       	ldi	r24, 0x80	; 128
 9a6:	70 e0       	ldi	r23, 0x00	; 0
 9a8:	60 e0       	ldi	r22, 0x00	; 0
 9aa:	08 95       	ret

000009ac <__fp_nan>:
 9ac:	9f ef       	ldi	r25, 0xFF	; 255
 9ae:	80 ec       	ldi	r24, 0xC0	; 192
 9b0:	08 95       	ret

000009b2 <__fp_pscA>:
 9b2:	00 24       	eor	r0, r0
 9b4:	0a 94       	dec	r0
 9b6:	16 16       	cp	r1, r22
 9b8:	17 06       	cpc	r1, r23
 9ba:	18 06       	cpc	r1, r24
 9bc:	09 06       	cpc	r0, r25
 9be:	08 95       	ret

000009c0 <__fp_pscB>:
 9c0:	00 24       	eor	r0, r0
 9c2:	0a 94       	dec	r0
 9c4:	12 16       	cp	r1, r18
 9c6:	13 06       	cpc	r1, r19
 9c8:	14 06       	cpc	r1, r20
 9ca:	05 06       	cpc	r0, r21
 9cc:	08 95       	ret

000009ce <__fp_round>:
 9ce:	09 2e       	mov	r0, r25
 9d0:	03 94       	inc	r0
 9d2:	00 0c       	add	r0, r0
 9d4:	11 f4       	brne	.+4      	; 0x9da <__fp_round+0xc>
 9d6:	88 23       	and	r24, r24
 9d8:	52 f0       	brmi	.+20     	; 0x9ee <__fp_round+0x20>
 9da:	bb 0f       	add	r27, r27
 9dc:	40 f4       	brcc	.+16     	; 0x9ee <__fp_round+0x20>
 9de:	bf 2b       	or	r27, r31
 9e0:	11 f4       	brne	.+4      	; 0x9e6 <__fp_round+0x18>
 9e2:	60 ff       	sbrs	r22, 0
 9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__fp_round+0x20>
 9e6:	6f 5f       	subi	r22, 0xFF	; 255
 9e8:	7f 4f       	sbci	r23, 0xFF	; 255
 9ea:	8f 4f       	sbci	r24, 0xFF	; 255
 9ec:	9f 4f       	sbci	r25, 0xFF	; 255
 9ee:	08 95       	ret

000009f0 <__fp_split3>:
 9f0:	57 fd       	sbrc	r21, 7
 9f2:	90 58       	subi	r25, 0x80	; 128
 9f4:	44 0f       	add	r20, r20
 9f6:	55 1f       	adc	r21, r21
 9f8:	59 f0       	breq	.+22     	; 0xa10 <__fp_splitA+0x10>
 9fa:	5f 3f       	cpi	r21, 0xFF	; 255
 9fc:	71 f0       	breq	.+28     	; 0xa1a <__fp_splitA+0x1a>
 9fe:	47 95       	ror	r20

00000a00 <__fp_splitA>:
 a00:	88 0f       	add	r24, r24
 a02:	97 fb       	bst	r25, 7
 a04:	99 1f       	adc	r25, r25
 a06:	61 f0       	breq	.+24     	; 0xa20 <__fp_splitA+0x20>
 a08:	9f 3f       	cpi	r25, 0xFF	; 255
 a0a:	79 f0       	breq	.+30     	; 0xa2a <__fp_splitA+0x2a>
 a0c:	87 95       	ror	r24
 a0e:	08 95       	ret
 a10:	12 16       	cp	r1, r18
 a12:	13 06       	cpc	r1, r19
 a14:	14 06       	cpc	r1, r20
 a16:	55 1f       	adc	r21, r21
 a18:	f2 cf       	rjmp	.-28     	; 0x9fe <__fp_split3+0xe>
 a1a:	46 95       	lsr	r20
 a1c:	f1 df       	rcall	.-30     	; 0xa00 <__fp_splitA>
 a1e:	08 c0       	rjmp	.+16     	; 0xa30 <__fp_splitA+0x30>
 a20:	16 16       	cp	r1, r22
 a22:	17 06       	cpc	r1, r23
 a24:	18 06       	cpc	r1, r24
 a26:	99 1f       	adc	r25, r25
 a28:	f1 cf       	rjmp	.-30     	; 0xa0c <__fp_splitA+0xc>
 a2a:	86 95       	lsr	r24
 a2c:	71 05       	cpc	r23, r1
 a2e:	61 05       	cpc	r22, r1
 a30:	08 94       	sec
 a32:	08 95       	ret

00000a34 <__fp_zero>:
 a34:	e8 94       	clt

00000a36 <__fp_szero>:
 a36:	bb 27       	eor	r27, r27
 a38:	66 27       	eor	r22, r22
 a3a:	77 27       	eor	r23, r23
 a3c:	cb 01       	movw	r24, r22
 a3e:	97 f9       	bld	r25, 7
 a40:	08 95       	ret

00000a42 <__mulsf3>:
 a42:	0e 94 34 05 	call	0xa68	; 0xa68 <__mulsf3x>
 a46:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_round>
 a4a:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fp_pscA>
 a4e:	38 f0       	brcs	.+14     	; 0xa5e <__mulsf3+0x1c>
 a50:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fp_pscB>
 a54:	20 f0       	brcs	.+8      	; 0xa5e <__mulsf3+0x1c>
 a56:	95 23       	and	r25, r21
 a58:	11 f0       	breq	.+4      	; 0xa5e <__mulsf3+0x1c>
 a5a:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__fp_inf>
 a5e:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_nan>
 a62:	11 24       	eor	r1, r1
 a64:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__fp_szero>

00000a68 <__mulsf3x>:
 a68:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__fp_split3>
 a6c:	70 f3       	brcs	.-36     	; 0xa4a <__mulsf3+0x8>

00000a6e <__mulsf3_pse>:
 a6e:	95 9f       	mul	r25, r21
 a70:	c1 f3       	breq	.-16     	; 0xa62 <__mulsf3+0x20>
 a72:	95 0f       	add	r25, r21
 a74:	50 e0       	ldi	r21, 0x00	; 0
 a76:	55 1f       	adc	r21, r21
 a78:	62 9f       	mul	r22, r18
 a7a:	f0 01       	movw	r30, r0
 a7c:	72 9f       	mul	r23, r18
 a7e:	bb 27       	eor	r27, r27
 a80:	f0 0d       	add	r31, r0
 a82:	b1 1d       	adc	r27, r1
 a84:	63 9f       	mul	r22, r19
 a86:	aa 27       	eor	r26, r26
 a88:	f0 0d       	add	r31, r0
 a8a:	b1 1d       	adc	r27, r1
 a8c:	aa 1f       	adc	r26, r26
 a8e:	64 9f       	mul	r22, r20
 a90:	66 27       	eor	r22, r22
 a92:	b0 0d       	add	r27, r0
 a94:	a1 1d       	adc	r26, r1
 a96:	66 1f       	adc	r22, r22
 a98:	82 9f       	mul	r24, r18
 a9a:	22 27       	eor	r18, r18
 a9c:	b0 0d       	add	r27, r0
 a9e:	a1 1d       	adc	r26, r1
 aa0:	62 1f       	adc	r22, r18
 aa2:	73 9f       	mul	r23, r19
 aa4:	b0 0d       	add	r27, r0
 aa6:	a1 1d       	adc	r26, r1
 aa8:	62 1f       	adc	r22, r18
 aaa:	83 9f       	mul	r24, r19
 aac:	a0 0d       	add	r26, r0
 aae:	61 1d       	adc	r22, r1
 ab0:	22 1f       	adc	r18, r18
 ab2:	74 9f       	mul	r23, r20
 ab4:	33 27       	eor	r19, r19
 ab6:	a0 0d       	add	r26, r0
 ab8:	61 1d       	adc	r22, r1
 aba:	23 1f       	adc	r18, r19
 abc:	84 9f       	mul	r24, r20
 abe:	60 0d       	add	r22, r0
 ac0:	21 1d       	adc	r18, r1
 ac2:	82 2f       	mov	r24, r18
 ac4:	76 2f       	mov	r23, r22
 ac6:	6a 2f       	mov	r22, r26
 ac8:	11 24       	eor	r1, r1
 aca:	9f 57       	subi	r25, 0x7F	; 127
 acc:	50 40       	sbci	r21, 0x00	; 0
 ace:	9a f0       	brmi	.+38     	; 0xaf6 <__mulsf3_pse+0x88>
 ad0:	f1 f0       	breq	.+60     	; 0xb0e <__mulsf3_pse+0xa0>
 ad2:	88 23       	and	r24, r24
 ad4:	4a f0       	brmi	.+18     	; 0xae8 <__mulsf3_pse+0x7a>
 ad6:	ee 0f       	add	r30, r30
 ad8:	ff 1f       	adc	r31, r31
 ada:	bb 1f       	adc	r27, r27
 adc:	66 1f       	adc	r22, r22
 ade:	77 1f       	adc	r23, r23
 ae0:	88 1f       	adc	r24, r24
 ae2:	91 50       	subi	r25, 0x01	; 1
 ae4:	50 40       	sbci	r21, 0x00	; 0
 ae6:	a9 f7       	brne	.-22     	; 0xad2 <__mulsf3_pse+0x64>
 ae8:	9e 3f       	cpi	r25, 0xFE	; 254
 aea:	51 05       	cpc	r21, r1
 aec:	80 f0       	brcs	.+32     	; 0xb0e <__mulsf3_pse+0xa0>
 aee:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__fp_inf>
 af2:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__fp_szero>
 af6:	5f 3f       	cpi	r21, 0xFF	; 255
 af8:	e4 f3       	brlt	.-8      	; 0xaf2 <__mulsf3_pse+0x84>
 afa:	98 3e       	cpi	r25, 0xE8	; 232
 afc:	d4 f3       	brlt	.-12     	; 0xaf2 <__mulsf3_pse+0x84>
 afe:	86 95       	lsr	r24
 b00:	77 95       	ror	r23
 b02:	67 95       	ror	r22
 b04:	b7 95       	ror	r27
 b06:	f7 95       	ror	r31
 b08:	e7 95       	ror	r30
 b0a:	9f 5f       	subi	r25, 0xFF	; 255
 b0c:	c1 f7       	brne	.-16     	; 0xafe <__mulsf3_pse+0x90>
 b0e:	fe 2b       	or	r31, r30
 b10:	88 0f       	add	r24, r24
 b12:	91 1d       	adc	r25, r1
 b14:	96 95       	lsr	r25
 b16:	87 95       	ror	r24
 b18:	97 f9       	bld	r25, 7
 b1a:	08 95       	ret

00000b1c <__udivmodsi4>:
 b1c:	a1 e2       	ldi	r26, 0x21	; 33
 b1e:	1a 2e       	mov	r1, r26
 b20:	aa 1b       	sub	r26, r26
 b22:	bb 1b       	sub	r27, r27
 b24:	fd 01       	movw	r30, r26
 b26:	0d c0       	rjmp	.+26     	; 0xb42 <__udivmodsi4_ep>

00000b28 <__udivmodsi4_loop>:
 b28:	aa 1f       	adc	r26, r26
 b2a:	bb 1f       	adc	r27, r27
 b2c:	ee 1f       	adc	r30, r30
 b2e:	ff 1f       	adc	r31, r31
 b30:	a2 17       	cp	r26, r18
 b32:	b3 07       	cpc	r27, r19
 b34:	e4 07       	cpc	r30, r20
 b36:	f5 07       	cpc	r31, r21
 b38:	20 f0       	brcs	.+8      	; 0xb42 <__udivmodsi4_ep>
 b3a:	a2 1b       	sub	r26, r18
 b3c:	b3 0b       	sbc	r27, r19
 b3e:	e4 0b       	sbc	r30, r20
 b40:	f5 0b       	sbc	r31, r21

00000b42 <__udivmodsi4_ep>:
 b42:	66 1f       	adc	r22, r22
 b44:	77 1f       	adc	r23, r23
 b46:	88 1f       	adc	r24, r24
 b48:	99 1f       	adc	r25, r25
 b4a:	1a 94       	dec	r1
 b4c:	69 f7       	brne	.-38     	; 0xb28 <__udivmodsi4_loop>
 b4e:	60 95       	com	r22
 b50:	70 95       	com	r23
 b52:	80 95       	com	r24
 b54:	90 95       	com	r25
 b56:	9b 01       	movw	r18, r22
 b58:	ac 01       	movw	r20, r24
 b5a:	bd 01       	movw	r22, r26
 b5c:	cf 01       	movw	r24, r30
 b5e:	08 95       	ret

00000b60 <_exit>:
 b60:	f8 94       	cli

00000b62 <__stop_program>:
 b62:	ff cf       	rjmp	.-2      	; 0xb62 <__stop_program>
